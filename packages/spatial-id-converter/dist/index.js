/*! For license information please see index.js.LICENSE.txt */
var e={986:(e,t,n)=>{e.exports=n(726)("Z2xURgIAAACQBgAA7AMAAEpTT057ImFzc2V0Ijp7ImdlbmVyYXRvciI6IkNPTExBREEyR0xURiIsInZlcnNpb24iOiIyLjAifSwic2NlbmVzIjpbeyJub2RlcyI6WzBdfV0sInNjZW5lIjowLCJub2RlcyI6W3siY2hpbGRyZW4iOlsxXSwibWF0cml4IjpbMS4wLDAuMCwwLjAsMC4wLDAuMCwwLjAsLTEuMCwwLjAsMC4wLDEuMCwwLjAsMC4wLDAuMCwwLjAsMC4wLDEuMF0sIm5hbWUiOiJaX1VQIn0seyJtZXNoIjowLCJuYW1lIjoiTWVzaCJ9XSwibWVzaGVzIjpbeyJwcmltaXRpdmVzIjpbeyJhdHRyaWJ1dGVzIjp7Ik5PUk1BTCI6MSwiUE9TSVRJT04iOjJ9LCJpbmRpY2VzIjowLCJtb2RlIjo0LCJtYXRlcmlhbCI6MH1dLCJuYW1lIjoiTWVzaCJ9XSwiYWNjZXNzb3JzIjpbeyJidWZmZXJWaWV3IjowLCJieXRlT2Zmc2V0IjowLCJjb21wb25lbnRUeXBlIjo1MTIzLCJjb3VudCI6MzYsIm1heCI6WzIzXSwibWluIjpbMF0sInR5cGUiOiJTQ0FMQVIifSx7ImJ1ZmZlclZpZXciOjEsImJ5dGVPZmZzZXQiOjAsImNvbXBvbmVudFR5cGUiOjUxMjYsImNvdW50IjoyNCwibWF4IjpbMS4wLDEuMCwxLjBdLCJtaW4iOlstMS4wLC0xLjAsLTEuMF0sInR5cGUiOiJWRUMzIn0seyJidWZmZXJWaWV3IjoxLCJieXRlT2Zmc2V0IjoyODgsImNvbXBvbmVudFR5cGUiOjUxMjYsImNvdW50IjoyNCwibWF4IjpbMC41LDAuNSwwLjVdLCJtaW4iOlstMC41LC0wLjUsLTAuNV0sInR5cGUiOiJWRUMzIn1dLCJtYXRlcmlhbHMiOlt7InBick1ldGFsbGljUm91Z2huZXNzIjp7ImJhc2VDb2xvckZhY3RvciI6WzEuMCwxLjAsMS4wLDEuMF0sIm1ldGFsbGljRmFjdG9yIjowLjB9LCJuYW1lIjoiV2hpdGUifV0sImJ1ZmZlclZpZXdzIjpbeyJidWZmZXIiOjAsImJ5dGVPZmZzZXQiOjU3NiwiYnl0ZUxlbmd0aCI6NzIsInRhcmdldCI6MzQ5NjN9LHsiYnVmZmVyIjowLCJieXRlT2Zmc2V0IjowLCJieXRlTGVuZ3RoIjo1NzYsImJ5dGVTdHJpZGUiOjEyLCJ0YXJnZXQiOjM0OTYyfV0sImJ1ZmZlcnMiOlt7ImJ5dGVMZW5ndGgiOjY0OH1dfYgCAABCSU4AAAAAAAAAAAAAAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIA/AAAAAAAAgL8AAAAAAAAAAAAAgL8AAAAAAAAAAAAAgL8AAAAAAAAAAAAAgL8AAAAAAACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAAAAAACAvwAAAAAAAAAAAACAvwAAAAAAAAAAAACAvwAAAAAAAAAAAACAvwAAAAAAAAAAAAAAAAAAAAAAAIC/AAAAAAAAAAAAAIC/AAAAAAAAAAAAAIC/AAAAAAAAAAAAAIC/AAAAvwAAAL8AAAA/AAAAPwAAAL8AAAA/AAAAvwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAL8AAAA/AAAAvwAAAL8AAAA/AAAAPwAAAL8AAAC/AAAAvwAAAL8AAAC/AAAAPwAAAD8AAAA/AAAAPwAAAL8AAAA/AAAAPwAAAD8AAAC/AAAAPwAAAL8AAAC/AAAAvwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAvwAAAD8AAAC/AAAAPwAAAD8AAAC/AAAAvwAAAL8AAAA/AAAAvwAAAD8AAAA/AAAAvwAAAL8AAAC/AAAAvwAAAD8AAAC/AAAAvwAAAL8AAAC/AAAAvwAAAD8AAAC/AAAAPwAAAL8AAAC/AAAAPwAAAD8AAAC/AAABAAIAAwACAAEABAAFAAYABwAGAAUACAAJAAoACwAKAAkADAANAA4ADwAOAA0AEAARABIAEwASABEAFAAVABYAFwAWABUA")},811:(e,t,n)=>{e.exports=n(726)("")},726:e=>{e.exports=function(e){for(var t="undefined"!=typeof window&&"function"==typeof window.atob?window.atob(e):Buffer.from(e,"base64").toString("binary"),n=new Uint8Array(t.length),r=0;r<t.length;++r)n[r]=t.charCodeAt(r);return n.buffer}},35:(e,t)=>{var n,r,f,i,o,s,a,l,u,c,h,A,d,v,P,w,y,D,H,X,g;r={defaultNoDataValue:-34027999387901484e22,decode:function(e,t){var n=(t=t||{}).encodedMaskData||null===t.encodedMaskData,a=s(e,t.inputOffset||0,n),l=null!==t.noDataValue?t.noDataValue:r.defaultNoDataValue,u=f(a,t.pixelType||Float32Array,t.encodedMaskData,l,t.returnMask),c={width:a.width,height:a.height,pixelData:u.resultPixels,minValue:u.minValue,maxValue:a.pixels.maxValue,noDataValue:l};return u.resultMask&&(c.maskData=u.resultMask),t.returnEncodedMask&&a.mask&&(c.encodedMaskData=a.mask.bitset?a.mask.bitset:null),t.returnFileInfo&&(c.fileInfo=i(a),t.computeUsedBitDepths&&(c.fileInfo.bitDepths=o(a))),c}},f=function(e,t,n,r,f){var i,o,s,l=0,u=e.pixels.numBlocksX,c=e.pixels.numBlocksY,h=Math.floor(e.width/u),A=Math.floor(e.height/c),d=2*e.maxZError,v=Number.MAX_VALUE;n=n||(e.mask?e.mask.bitset:null),o=new t(e.width*e.height),f&&n&&(s=new Uint8Array(e.width*e.height));for(var P,w,y=new Float32Array(h*A),D=0;D<=c;D++){var H=D!==c?A:e.height%c;if(0!==H)for(var X=0;X<=u;X++){var g=X!==u?h:e.width%u;if(0!==g){var p,O,m,b,z=D*e.width*A+X*h,L=e.width-g,j=e.pixels.blocks[l];if(j.encoding<2?(0===j.encoding?p=j.rawData:(a(j.stuffedData,j.bitsPerPixel,j.numValidPixels,j.offset,d,y,e.pixels.maxValue),p=y),O=0):m=2===j.encoding?0:j.offset,n)for(w=0;w<H;w++){for(7&z&&(b=n[z>>3],b<<=7&z),P=0;P<g;P++)7&z||(b=n[z>>3]),128&b?(s&&(s[z]=1),v=v>(i=j.encoding<2?p[O++]:m)?i:v,o[z++]=i):(s&&(s[z]=0),o[z++]=r),b<<=1;z+=L}else if(j.encoding<2)for(w=0;w<H;w++){for(P=0;P<g;P++)v=v>(i=p[O++])?i:v,o[z++]=i;z+=L}else for(v=v>m?m:v,w=0;w<H;w++){for(P=0;P<g;P++)o[z++]=m;z+=L}if(1===j.encoding&&O!==j.numValidPixels)throw"Block and Mask do not match";l++}}}return{resultPixels:o,resultMask:s,minValue:v}},i=function(e){return{fileIdentifierString:e.fileIdentifierString,fileVersion:e.fileVersion,imageType:e.imageType,height:e.height,width:e.width,maxZError:e.maxZError,eofOffset:e.eofOffset,mask:e.mask?{numBlocksX:e.mask.numBlocksX,numBlocksY:e.mask.numBlocksY,numBytes:e.mask.numBytes,maxValue:e.mask.maxValue}:null,pixels:{numBlocksX:e.pixels.numBlocksX,numBlocksY:e.pixels.numBlocksY,numBytes:e.pixels.numBytes,maxValue:e.pixels.maxValue,noDataValue:e.noDataValue}}},o=function(e){for(var t=e.pixels.numBlocksX*e.pixels.numBlocksY,n={},r=0;r<t;r++){var f=e.pixels.blocks[r];0===f.encoding?n.float32=!0:1===f.encoding?n[f.bitsPerPixel]=!0:n[0]=!0}return Object.keys(n)},s=function(e,t,n){var r={},f=new Uint8Array(e,t,10);if(r.fileIdentifierString=String.fromCharCode.apply(null,f),"CntZImage"!==r.fileIdentifierString.trim())throw"Unexpected file identifier string: "+r.fileIdentifierString;t+=10;var i=new DataView(e,t,24);if(r.fileVersion=i.getInt32(0,!0),r.imageType=i.getInt32(4,!0),r.height=i.getUint32(8,!0),r.width=i.getUint32(12,!0),r.maxZError=i.getFloat64(16,!0),t+=24,!n)if(i=new DataView(e,t,16),r.mask={},r.mask.numBlocksY=i.getUint32(0,!0),r.mask.numBlocksX=i.getUint32(4,!0),r.mask.numBytes=i.getUint32(8,!0),r.mask.maxValue=i.getFloat32(12,!0),t+=16,r.mask.numBytes>0){var o=new Uint8Array(Math.ceil(r.width*r.height/8)),s=(i=new DataView(e,t,r.mask.numBytes)).getInt16(0,!0),a=2,l=0;do{if(s>0)for(;s--;)o[l++]=i.getUint8(a++);else{var u=i.getUint8(a++);for(s=-s;s--;)o[l++]=u}s=i.getInt16(a,!0),a+=2}while(a<r.mask.numBytes);if(-32768!==s||l<o.length)throw"Unexpected end of mask RLE encoding";r.mask.bitset=o,t+=r.mask.numBytes}else 0==(r.mask.numBytes|r.mask.numBlocksY|r.mask.maxValue)&&(r.mask.bitset=new Uint8Array(Math.ceil(r.width*r.height/8)));i=new DataView(e,t,16),r.pixels={},r.pixels.numBlocksY=i.getUint32(0,!0),r.pixels.numBlocksX=i.getUint32(4,!0),r.pixels.numBytes=i.getUint32(8,!0),r.pixels.maxValue=i.getFloat32(12,!0),t+=16;var c=r.pixels.numBlocksX,h=r.pixels.numBlocksY,A=c+(r.width%c>0?1:0),d=h+(r.height%h>0?1:0);r.pixels.blocks=new Array(A*d);for(var v=0,P=0;P<d;P++)for(var w=0;w<A;w++){var y=0,D=e.byteLength-t;i=new DataView(e,t,Math.min(10,D));var H={};r.pixels.blocks[v++]=H;var X=i.getUint8(0);if(y++,H.encoding=63&X,H.encoding>3)throw"Invalid block encoding ("+H.encoding+")";if(2!==H.encoding){if(0!==X&&2!==X){if(X>>=6,H.offsetType=X,2===X)H.offset=i.getInt8(1),y++;else if(1===X)H.offset=i.getInt16(1,!0),y+=2;else{if(0!==X)throw"Invalid block offset type";H.offset=i.getFloat32(1,!0),y+=4}if(1===H.encoding)if(X=i.getUint8(y),y++,H.bitsPerPixel=63&X,X>>=6,H.numValidPixelsType=X,2===X)H.numValidPixels=i.getUint8(y),y++;else if(1===X)H.numValidPixels=i.getUint16(y,!0),y+=2;else{if(0!==X)throw"Invalid valid pixel count type";H.numValidPixels=i.getUint32(y,!0),y+=4}}var g;if(t+=y,3!==H.encoding)if(0===H.encoding){var p=(r.pixels.numBytes-1)/4;if(p!==Math.floor(p))throw"uncompressed block has invalid length";g=new ArrayBuffer(4*p),new Uint8Array(g).set(new Uint8Array(e,t,4*p));var O=new Float32Array(g);H.rawData=O,t+=4*p}else if(1===H.encoding){var m=Math.ceil(H.numValidPixels*H.bitsPerPixel/8),b=Math.ceil(m/4);g=new ArrayBuffer(4*b),new Uint8Array(g).set(new Uint8Array(e,t,m)),H.stuffedData=new Uint32Array(g),t+=m}}else t++}return r.eofOffset=t,r},a=function(e,t,n,r,f,i,o){var s,a,l,u=(1<<t)-1,c=0,h=0,A=Math.ceil((o-r)/f),d=4*e.length-Math.ceil(t*n/8);for(e[e.length-1]<<=8*d,s=0;s<n;s++){if(0===h&&(l=e[c++],h=32),h>=t)a=l>>>h-t&u,h-=t;else{var v=t-h;a=(l&u)<<v&u,a+=(l=e[c++])>>>(h=32-v)}i[s]=a<A?r+a*f:o}return i},D=r,l=function(e,t,n,r,f,i,o,s){var a,l,u,c,h,A=(1<<n)-1,d=0,v=0,P=4*e.length-Math.ceil(n*r/8);if(e[e.length-1]<<=8*P,f)for(a=0;a<r;a++)0===v&&(u=e[d++],v=32),v>=n?(l=u>>>v-n&A,v-=n):(l=(u&A)<<(c=n-v)&A,l+=(u=e[d++])>>>(v=32-c)),t[a]=f[l];else for(h=Math.ceil((s-i)/o),a=0;a<r;a++)0===v&&(u=e[d++],v=32),v>=n?(l=u>>>v-n&A,v-=n):(l=(u&A)<<(c=n-v)&A,l+=(u=e[d++])>>>(v=32-c)),t[a]=l<h?i+l*o:s},u=function(e,t,n,r,f,i){var o,s=(1<<t)-1,a=0,l=0,u=0,c=0,h=0,A=[],d=4*e.length-Math.ceil(t*n/8);e[e.length-1]<<=8*d;var v=Math.ceil((i-r)/f);for(l=0;l<n;l++)0===c&&(o=e[a++],c=32),c>=t?(h=o>>>c-t&s,c-=t):(h=(o&s)<<(u=t-c)&s,h+=(o=e[a++])>>>(c=32-u)),A[l]=h<v?r+h*f:i;return A.unshift(r),A},c=function(e,t,n,r,f,i,o,s){var a,l,u,c,h=(1<<n)-1,A=0,d=0,v=0;if(f)for(a=0;a<r;a++)0===d&&(u=e[A++],d=32,v=0),d>=n?(l=u>>>v&h,d-=n,v+=n):(l=u>>>v&h,d=32-(c=n-d),l|=((u=e[A++])&(1<<c)-1)<<n-c,v=c),t[a]=f[l];else{var P=Math.ceil((s-i)/o);for(a=0;a<r;a++)0===d&&(u=e[A++],d=32,v=0),d>=n?(l=u>>>v&h,d-=n,v+=n):(l=u>>>v&h,d=32-(c=n-d),l|=((u=e[A++])&(1<<c)-1)<<n-c,v=c),t[a]=l<P?i+l*o:s}return t},h=function(e,t,n,r,f,i){var o,s=(1<<t)-1,a=0,l=0,u=0,c=0,h=0,A=0,d=[],v=Math.ceil((i-r)/f);for(l=0;l<n;l++)0===c&&(o=e[a++],c=32,A=0),c>=t?(h=o>>>A&s,c-=t,A+=t):(h=o>>>A&s,c=32-(u=t-c),h|=((o=e[a++])&(1<<u)-1)<<t-u,A=u),d[l]=h<v?r+h*f:i;return d.unshift(r),d},A=function(e,t,n,r){var f,i,o,s,a=(1<<n)-1,l=0,u=0,c=4*e.length-Math.ceil(n*r/8);for(e[e.length-1]<<=8*c,f=0;f<r;f++)0===u&&(o=e[l++],u=32),u>=n?(i=o>>>u-n&a,u-=n):(i=(o&a)<<(s=n-u)&a,i+=(o=e[l++])>>>(u=32-s)),t[f]=i;return t},d=function(e,t,n,r){var f,i,o,s,a=(1<<n)-1,l=0,u=0,c=0;for(f=0;f<r;f++)0===u&&(o=e[l++],u=32,c=0),u>=n?(i=o>>>c&a,u-=n,c+=n):(i=o>>>c&a,u=32-(s=n-u),i|=((o=e[l++])&(1<<s)-1)<<n-s,c=s),t[f]=i;return t},v={HUFFMAN_LUT_BITS_MAX:12,computeChecksumFletcher32:function(e){for(var t=65535,n=65535,r=e.length,f=Math.floor(r/2),i=0;f;){var o=f>=359?359:f;f-=o;do{t+=e[i++]<<8,n+=t+=e[i++]}while(--o);t=(65535&t)+(t>>>16),n=(65535&n)+(n>>>16)}return 1&r&&(n+=t+=e[i]<<8),((n=(65535&n)+(n>>>16))<<16|(t=(65535&t)+(t>>>16)))>>>0},readHeaderInfo:function(e,t){var n=t.ptr,r=new Uint8Array(e,n,6),f={};if(f.fileIdentifierString=String.fromCharCode.apply(null,r),0!==f.fileIdentifierString.lastIndexOf("Lerc2",0))throw"Unexpected file identifier string (expect Lerc2 ): "+f.fileIdentifierString;n+=6;var i,o=new DataView(e,n,8),s=o.getInt32(0,!0);if(f.fileVersion=s,n+=4,s>=3&&(f.checksum=o.getUint32(4,!0),n+=4),o=new DataView(e,n,12),f.height=o.getUint32(0,!0),f.width=o.getUint32(4,!0),n+=8,s>=4?(f.numDims=o.getUint32(8,!0),n+=4):f.numDims=1,o=new DataView(e,n,40),f.numValidPixel=o.getUint32(0,!0),f.microBlockSize=o.getInt32(4,!0),f.blobSize=o.getInt32(8,!0),f.imageType=o.getInt32(12,!0),f.maxZError=o.getFloat64(16,!0),f.zMin=o.getFloat64(24,!0),f.zMax=o.getFloat64(32,!0),n+=40,t.headerInfo=f,t.ptr=n,s>=3&&(i=s>=4?52:48,this.computeChecksumFletcher32(new Uint8Array(e,n-i,f.blobSize-14))!==f.checksum))throw"Checksum failed.";return!0},checkMinMaxRanges:function(e,t){var n=t.headerInfo,r=this.getDataTypeArray(n.imageType),f=n.numDims*this.getDataTypeSize(n.imageType),i=this.readSubArray(e,t.ptr,r,f),o=this.readSubArray(e,t.ptr+f,r,f);t.ptr+=2*f;var s,a=!0;for(s=0;s<n.numDims;s++)if(i[s]!==o[s]){a=!1;break}return n.minValues=i,n.maxValues=o,a},readSubArray:function(e,t,n,r){var f;if(n===Uint8Array)f=new Uint8Array(e,t,r);else{var i=new ArrayBuffer(r);new Uint8Array(i).set(new Uint8Array(e,t,r)),f=new n(i)}return f},readMask:function(e,t){var n,r,f=t.ptr,i=t.headerInfo,o=i.width*i.height,s=i.numValidPixel,a=new DataView(e,f,4),l={};if(l.numBytes=a.getUint32(0,!0),f+=4,(0===s||o===s)&&0!==l.numBytes)throw"invalid mask";if(0===s)n=new Uint8Array(Math.ceil(o/8)),l.bitset=n,r=new Uint8Array(o),t.pixels.resultMask=r,f+=l.numBytes;else if(l.numBytes>0){n=new Uint8Array(Math.ceil(o/8));var u=(a=new DataView(e,f,l.numBytes)).getInt16(0,!0),c=2,h=0,A=0;do{if(u>0)for(;u--;)n[h++]=a.getUint8(c++);else for(A=a.getUint8(c++),u=-u;u--;)n[h++]=A;u=a.getInt16(c,!0),c+=2}while(c<l.numBytes);if(-32768!==u||h<n.length)throw"Unexpected end of mask RLE encoding";r=new Uint8Array(o);var d=0,v=0;for(v=0;v<o;v++)7&v?(d=n[v>>3],d<<=7&v):d=n[v>>3],128&d&&(r[v]=1);t.pixels.resultMask=r,l.bitset=n,f+=l.numBytes}return t.ptr=f,t.mask=l,!0},readDataOneSweep:function(e,t,n,r){var f,i=t.ptr,o=t.headerInfo,s=o.numDims,a=o.width*o.height,l=o.imageType,u=o.numValidPixel*v.getDataTypeSize(l)*s,c=t.pixels.resultMask;if(n===Uint8Array)f=new Uint8Array(e,i,u);else{var h=new ArrayBuffer(u);new Uint8Array(h).set(new Uint8Array(e,i,u)),f=new n(h)}if(f.length===a*s)t.pixels.resultPixels=r?v.swapDimensionOrder(f,a,s,n,!0):f;else{t.pixels.resultPixels=new n(a*s);var A=0,d=0,P=0,w=0;if(s>1){if(r){for(d=0;d<a;d++)if(c[d])for(w=d,P=0;P<s;P++,w+=a)t.pixels.resultPixels[w]=f[A++]}else for(d=0;d<a;d++)if(c[d])for(w=d*s,P=0;P<s;P++)t.pixels.resultPixels[w+P]=f[A++]}else for(d=0;d<a;d++)c[d]&&(t.pixels.resultPixels[d]=f[A++])}return i+=u,t.ptr=i,!0},readHuffmanTree:function(e,t){var n=this.HUFFMAN_LUT_BITS_MAX,r=new DataView(e,t.ptr,16);if(t.ptr+=16,r.getInt32(0,!0)<2)throw"unsupported Huffman version";var f=r.getInt32(4,!0),i=r.getInt32(8,!0),o=r.getInt32(12,!0);if(i>=o)return!1;var s=new Uint32Array(o-i);v.decodeBits(e,t,s);var a,l,u,c,h=[];for(a=i;a<o;a++)h[l=a-(a<f?0:f)]={first:s[a-i],second:null};var A=e.byteLength-t.ptr,d=Math.ceil(A/4),w=new ArrayBuffer(4*d);new Uint8Array(w).set(new Uint8Array(e,t.ptr,A));var y,D=new Uint32Array(w),H=0,X=0;for(y=D[0],a=i;a<o;a++)(c=h[l=a-(a<f?0:f)].first)>0&&(h[l].second=y<<H>>>32-c,32-H>=c?32===(H+=c)&&(H=0,y=D[++X]):(H+=c-32,y=D[++X],h[l].second|=y>>>32-H));var g,p=0,O=new P;for(a=0;a<h.length;a++)void 0!==h[a]&&(p=Math.max(p,h[a].first));g=p>=n?n:p;var m,b,z,L,j,x=[];for(a=i;a<o;a++)if((c=h[l=a-(a<f?0:f)].first)>0)if(m=[c,l],c<=g)for(b=h[l].second<<g-c,z=1<<g-c,u=0;u<z;u++)x[b|u]=m;else for(b=h[l].second,j=O,L=c-1;L>=0;L--)b>>>L&1?(j.right||(j.right=new P),j=j.right):(j.left||(j.left=new P),j=j.left),0!==L||j.val||(j.val=m[1]);return{decodeLut:x,numBitsLUTQick:g,numBitsLUT:p,tree:O,stuffedData:D,srcPtr:X,bitPos:H}},readHuffman:function(e,t,n,r){var f,i,o,s,a,l,u,c,h,A=t.headerInfo.numDims,d=t.headerInfo.height,P=t.headerInfo.width,w=P*d,y=this.readHuffmanTree(e,t),D=y.decodeLut,H=y.tree,X=y.stuffedData,g=y.srcPtr,p=y.bitPos,O=y.numBitsLUTQick,m=y.numBitsLUT,b=0===t.headerInfo.imageType?128:0,z=t.pixels.resultMask,L=0;p>0&&(g++,p=0);var j,x=X[g],T=1===t.encodeMode,k=new n(w*A),I=k;if(A<2||T){for(j=0;j<A;j++)if(A>1&&(I=new n(k.buffer,w*j,w),L=0),t.headerInfo.numValidPixel===P*d)for(c=0,l=0;l<d;l++)for(u=0;u<P;u++,c++){if(i=0,a=s=x<<p>>>32-O,32-p<O&&(a=s|=X[g+1]>>>64-p-O),D[a])i=D[a][1],p+=D[a][0];else for(a=s=x<<p>>>32-m,32-p<m&&(a=s|=X[g+1]>>>64-p-m),f=H,h=0;h<m;h++)if(!(f=s>>>m-h-1&1?f.right:f.left).left&&!f.right){i=f.val,p=p+h+1;break}p>=32&&(p-=32,x=X[++g]),o=i-b,T?(o+=u>0?L:l>0?I[c-P]:L,o&=255,I[c]=o,L=o):I[c]=o}else for(c=0,l=0;l<d;l++)for(u=0;u<P;u++,c++)if(z[c]){if(i=0,a=s=x<<p>>>32-O,32-p<O&&(a=s|=X[g+1]>>>64-p-O),D[a])i=D[a][1],p+=D[a][0];else for(a=s=x<<p>>>32-m,32-p<m&&(a=s|=X[g+1]>>>64-p-m),f=H,h=0;h<m;h++)if(!(f=s>>>m-h-1&1?f.right:f.left).left&&!f.right){i=f.val,p=p+h+1;break}p>=32&&(p-=32,x=X[++g]),o=i-b,T?(u>0&&z[c-1]?o+=L:l>0&&z[c-P]?o+=I[c-P]:o+=L,o&=255,I[c]=o,L=o):I[c]=o}}else for(c=0,l=0;l<d;l++)for(u=0;u<P;u++)if(c=l*P+u,!z||z[c])for(j=0;j<A;j++,c+=w){if(i=0,a=s=x<<p>>>32-O,32-p<O&&(a=s|=X[g+1]>>>64-p-O),D[a])i=D[a][1],p+=D[a][0];else for(a=s=x<<p>>>32-m,32-p<m&&(a=s|=X[g+1]>>>64-p-m),f=H,h=0;h<m;h++)if(!(f=s>>>m-h-1&1?f.right:f.left).left&&!f.right){i=f.val,p=p+h+1;break}p>=32&&(p-=32,x=X[++g]),o=i-b,I[c]=o}t.ptr=t.ptr+4*(g+1)+(p>0?4:0),t.pixels.resultPixels=k,A>1&&!r&&(t.pixels.resultPixels=v.swapDimensionOrder(k,w,A,n))},decodeBits:function(e,t,n,r,f){var i=t.headerInfo,o=i.fileVersion,s=0,a=e.byteLength-t.ptr>=5?5:e.byteLength-t.ptr,v=new DataView(e,t.ptr,a),P=v.getUint8(0);s++;var w=P>>6,y=0===w?4:3-w,D=(32&P)>0,H=31&P,X=0;if(1===y)X=v.getUint8(s),s++;else if(2===y)X=v.getUint16(s,!0),s+=2;else{if(4!==y)throw"Invalid valid pixel count type";X=v.getUint32(s,!0),s+=4}var g,p,O,m,b,z,L,j,x,T=2*i.maxZError,k=i.numDims>1?i.maxValues[f]:i.zMax;if(D){for(t.counter.lut++,j=v.getUint8(s),s++,m=Math.ceil((j-1)*H/8),b=Math.ceil(m/4),p=new ArrayBuffer(4*b),O=new Uint8Array(p),t.ptr+=s,O.set(new Uint8Array(e,t.ptr,m)),L=new Uint32Array(p),t.ptr+=m,x=0;j-1>>>x;)x++;m=Math.ceil(X*x/8),b=Math.ceil(m/4),p=new ArrayBuffer(4*b),(O=new Uint8Array(p)).set(new Uint8Array(e,t.ptr,m)),g=new Uint32Array(p),t.ptr+=m,z=o>=3?h(L,H,j-1,r,T,k):u(L,H,j-1,r,T,k),o>=3?c(g,n,x,X,z):l(g,n,x,X,z)}else t.counter.bitstuffer++,x=H,t.ptr+=s,x>0&&(m=Math.ceil(X*x/8),b=Math.ceil(m/4),p=new ArrayBuffer(4*b),(O=new Uint8Array(p)).set(new Uint8Array(e,t.ptr,m)),g=new Uint32Array(p),t.ptr+=m,o>=3?null==r?d(g,n,x,X):c(g,n,x,X,!1,r,T,k):null==r?A(g,n,x,X):l(g,n,x,X,!1,r,T,k))},readTiles:function(e,t,n,r){var f=t.headerInfo,i=f.width,o=f.height,s=i*o,a=f.microBlockSize,l=f.imageType,u=v.getDataTypeSize(l),c=Math.ceil(i/a),h=Math.ceil(o/a);t.pixels.numBlocksY=h,t.pixels.numBlocksX=c,t.pixels.ptr=0;var A,d,P,w,y,D,H,X,g,p,O=0,m=0,b=0,z=0,L=0,j=0,x=0,T=0,k=0,I=0,Q=0,E=0,B=0,R=0,M=0,N=new n(a*a),V=o%a||a,S=i%a||a,C=f.numDims,U=t.pixels.resultMask,F=t.pixels.resultPixels,G=f.fileVersion>=5?14:15,Y=f.zMax;for(b=0;b<h;b++)for(L=b!==h-1?a:V,z=0;z<c;z++)for(I=b*i*a+z*a,Q=i-(j=z!==c-1?a:S),X=0;X<C;X++){if(C>1?(p=F,I=b*i*a+z*a,F=new n(t.pixels.resultPixels.buffer,s*X*u,s),Y=f.maxValues[X]):p=null,x=e.byteLength-t.ptr,d={},M=0,T=(A=new DataView(e,t.ptr,Math.min(10,x))).getUint8(0),M++,g=f.fileVersion>=5?4&T:0,k=T>>6&255,(T>>2&G)!=(z*a>>3&G))throw"integrity issue";if(g&&0===X)throw"integrity issue";if((y=3&T)>3)throw t.ptr+=M,"Invalid block encoding ("+y+")";if(2!==y)if(0===y){if(g)throw"integrity issue";if(t.counter.uncompressed++,t.ptr+=M,E=(E=L*j*u)<(B=e.byteLength-t.ptr)?E:B,P=new ArrayBuffer(E%u==0?E:E+u-E%u),new Uint8Array(P).set(new Uint8Array(e,t.ptr,E)),w=new n(P),R=0,U)for(O=0;O<L;O++){for(m=0;m<j;m++)U[I]&&(F[I]=w[R++]),I++;I+=Q}else for(O=0;O<L;O++){for(m=0;m<j;m++)F[I++]=w[R++];I+=Q}t.ptr+=R*u}else if(D=v.getDataTypeUsed(g&&l<6?4:l,k),H=v.getOnePixel(d,M,D,A),M+=v.getDataTypeSize(D),3===y)if(t.ptr+=M,t.counter.constantoffset++,U)for(O=0;O<L;O++){for(m=0;m<j;m++)U[I]&&(F[I]=g?Math.min(Y,p[I]+H):H),I++;I+=Q}else for(O=0;O<L;O++){for(m=0;m<j;m++)F[I]=g?Math.min(Y,p[I]+H):H,I++;I+=Q}else if(t.ptr+=M,v.decodeBits(e,t,N,H,X),M=0,g)if(U)for(O=0;O<L;O++){for(m=0;m<j;m++)U[I]&&(F[I]=N[M++]+p[I]),I++;I+=Q}else for(O=0;O<L;O++){for(m=0;m<j;m++)F[I]=N[M++]+p[I],I++;I+=Q}else if(U)for(O=0;O<L;O++){for(m=0;m<j;m++)U[I]&&(F[I]=N[M++]),I++;I+=Q}else for(O=0;O<L;O++){for(m=0;m<j;m++)F[I++]=N[M++];I+=Q}else{if(g)if(U)for(O=0;O<L;O++)for(m=0;m<j;m++)U[I]&&(F[I]=p[I]),I++;else for(O=0;O<L;O++)for(m=0;m<j;m++)F[I]=p[I],I++;t.counter.constant++,t.ptr+=M}}C>1&&!r&&(t.pixels.resultPixels=v.swapDimensionOrder(t.pixels.resultPixels,s,C,n))},formatFileInfo:function(e){return{fileIdentifierString:e.headerInfo.fileIdentifierString,fileVersion:e.headerInfo.fileVersion,imageType:e.headerInfo.imageType,height:e.headerInfo.height,width:e.headerInfo.width,numValidPixel:e.headerInfo.numValidPixel,microBlockSize:e.headerInfo.microBlockSize,blobSize:e.headerInfo.blobSize,maxZError:e.headerInfo.maxZError,pixelType:v.getPixelType(e.headerInfo.imageType),eofOffset:e.eofOffset,mask:e.mask?{numBytes:e.mask.numBytes}:null,pixels:{numBlocksX:e.pixels.numBlocksX,numBlocksY:e.pixels.numBlocksY,maxValue:e.headerInfo.zMax,minValue:e.headerInfo.zMin,noDataValue:e.noDataValue}}},constructConstantSurface:function(e,t){var n=e.headerInfo.zMax,r=e.headerInfo.zMin,f=e.headerInfo.maxValues,i=e.headerInfo.numDims,o=e.headerInfo.height*e.headerInfo.width,s=0,a=0,l=0,u=e.pixels.resultMask,c=e.pixels.resultPixels;if(u)if(i>1){if(t)for(s=0;s<i;s++)for(l=s*o,n=f[s],a=0;a<o;a++)u[a]&&(c[l+a]=n);else for(a=0;a<o;a++)if(u[a])for(l=a*i,s=0;s<i;s++)c[l+i]=f[s]}else for(a=0;a<o;a++)u[a]&&(c[a]=n);else if(i>1&&r!==n)if(t)for(s=0;s<i;s++)for(l=s*o,n=f[s],a=0;a<o;a++)c[l+a]=n;else for(a=0;a<o;a++)for(l=a*i,s=0;s<i;s++)c[l+s]=f[s];else for(a=0;a<o*i;a++)c[a]=n},getDataTypeArray:function(e){var t;switch(e){case 0:t=Int8Array;break;case 1:t=Uint8Array;break;case 2:t=Int16Array;break;case 3:t=Uint16Array;break;case 4:t=Int32Array;break;case 5:t=Uint32Array;break;case 6:default:t=Float32Array;break;case 7:t=Float64Array}return t},getPixelType:function(e){var t;switch(e){case 0:t="S8";break;case 1:t="U8";break;case 2:t="S16";break;case 3:t="U16";break;case 4:t="S32";break;case 5:t="U32";break;case 6:default:t="F32";break;case 7:t="F64"}return t},isValidPixelValue:function(e,t){if(null==t)return!1;var n;switch(e){case 0:n=t>=-128&&t<=127;break;case 1:n=t>=0&&t<=255;break;case 2:n=t>=-32768&&t<=32767;break;case 3:n=t>=0&&t<=65536;break;case 4:n=t>=-2147483648&&t<=2147483647;break;case 5:n=t>=0&&t<=4294967296;break;case 6:n=t>=-34027999387901484e22&&t<=34027999387901484e22;break;case 7:n=t>=-17976931348623157e292&&t<=17976931348623157e292;break;default:n=!1}return n},getDataTypeSize:function(e){var t=0;switch(e){case 0:case 1:t=1;break;case 2:case 3:t=2;break;case 4:case 5:case 6:t=4;break;case 7:t=8;break;default:t=e}return t},getDataTypeUsed:function(e,t){var n=e;switch(e){case 2:case 4:n=e-t;break;case 3:case 5:n=e-2*t;break;case 6:n=0===t?e:1===t?2:1;break;case 7:n=0===t?e:e-2*t+1;break;default:n=e}return n},getOnePixel:function(e,t,n,r){var f=0;switch(n){case 0:f=r.getInt8(t);break;case 1:f=r.getUint8(t);break;case 2:f=r.getInt16(t,!0);break;case 3:f=r.getUint16(t,!0);break;case 4:f=r.getInt32(t,!0);break;case 5:f=r.getUInt32(t,!0);break;case 6:f=r.getFloat32(t,!0);break;case 7:f=r.getFloat64(t,!0);break;default:throw"the decoder does not understand this pixel type"}return f},swapDimensionOrder:function(e,t,n,r,f){var i=0,o=0,s=0,a=0,l=e;if(n>1)if(l=new r(t*n),f)for(i=0;i<t;i++)for(a=i,s=0;s<n;s++,a+=t)l[a]=e[o++];else for(i=0;i<t;i++)for(a=i,s=0;s<n;s++,a+=t)l[o++]=e[a];return l}},P=function(e,t,n){this.val=e,this.left=t,this.right=n},H={decode:function(e,t){var n=(t=t||{}).noDataValue,r=0,f={};if(f.ptr=t.inputOffset||0,f.pixels={},v.readHeaderInfo(e,f)){var i=f.headerInfo,o=i.fileVersion,s=v.getDataTypeArray(i.imageType);if(o>5)throw"unsupported lerc version 2."+o;v.readMask(e,f),i.numValidPixel===i.width*i.height||f.pixels.resultMask||(f.pixels.resultMask=t.maskData);var a=i.width*i.height;f.pixels.resultPixels=new s(a*i.numDims),f.counter={onesweep:0,uncompressed:0,lut:0,bitstuffer:0,constant:0,constantoffset:0};var l,u=!t.returnPixelInterleavedDims;if(0!==i.numValidPixel)if(i.zMax===i.zMin)v.constructConstantSurface(f,u);else if(o>=4&&v.checkMinMaxRanges(e,f))v.constructConstantSurface(f,u);else{var c=new DataView(e,f.ptr,2),h=c.getUint8(0);if(f.ptr++,h)v.readDataOneSweep(e,f,s,u);else if(o>1&&i.imageType<=1&&Math.abs(i.maxZError-.5)<1e-5){var A=c.getUint8(1);if(f.ptr++,f.encodeMode=A,A>2||o<4&&A>1)throw"Invalid Huffman flag "+A;A?v.readHuffman(e,f,s,u):v.readTiles(e,f,s,u)}else v.readTiles(e,f,s,u)}f.eofOffset=f.ptr,t.inputOffset?(l=f.headerInfo.blobSize+t.inputOffset-f.ptr,Math.abs(l)>=1&&(f.eofOffset=t.inputOffset+f.headerInfo.blobSize)):(l=f.headerInfo.blobSize-f.ptr,Math.abs(l)>=1&&(f.eofOffset=f.headerInfo.blobSize));var d={width:i.width,height:i.height,pixelData:f.pixels.resultPixels,minValue:i.zMin,maxValue:i.zMax,validPixelCount:i.numValidPixel,dimCount:i.numDims,dimStats:{minValues:i.minValues,maxValues:i.maxValues},maskData:f.pixels.resultMask};if(f.pixels.resultMask&&v.isValidPixelValue(i.imageType,n)){var P=f.pixels.resultMask;for(r=0;r<a;r++)P[r]||(d.pixelData[r]=n);d.noDataValue=n}return f.noDataValue=n,t.returnFileInfo&&(d.fileInfo=v.formatFileInfo(f)),d}},getBandCount:function(e){for(var t=0,n=0,r={ptr:0,pixels:{}};n<e.byteLength-58;)v.readHeaderInfo(e,r),n+=r.headerInfo.blobSize,t++,r.ptr=n;return t}},w=new ArrayBuffer(4),y=new Uint8Array(w),new Uint32Array(w)[0]=1,X=1===y[0],g={decode:function(e,t){if(!X)throw"Big endian system is not supported.";var n,r,f=(t=t||{}).inputOffset||0,i=new Uint8Array(e,f,10),o=String.fromCharCode.apply(null,i);if("CntZImage"===o.trim())n=D,r=1;else{if("Lerc2"!==o.substring(0,5))throw"Unexpected file identifier string: "+o;n=H,r=2}for(var s,a,l,u,c,h,A=0,d=e.byteLength-10,v=[],P={width:0,height:0,pixels:[],pixelType:t.pixelType,mask:null,statistics:[]},w=0;f<d;){var y=n.decode(e,{inputOffset:f,encodedMaskData:s,maskData:l,returnMask:0===A,returnEncodedMask:0===A,returnFileInfo:!0,returnPixelInterleavedDims:t.returnPixelInterleavedDims,pixelType:t.pixelType||null,noDataValue:t.noDataValue||null});f=y.fileInfo.eofOffset,l=y.maskData,0===A&&(s=y.encodedMaskData,P.width=y.width,P.height=y.height,P.dimCount=y.dimCount||1,P.pixelType=y.pixelType||y.fileInfo.pixelType,P.mask=l),r>1&&(l&&v.push(l),y.fileInfo.mask&&y.fileInfo.mask.numBytes>0&&w++),A++,P.pixels.push(y.pixelData),P.statistics.push({minValue:y.minValue,maxValue:y.maxValue,noDataValue:y.noDataValue,dimStats:y.dimStats})}if(r>1&&w>1){for(h=P.width*P.height,P.bandMasks=v,(l=new Uint8Array(h)).set(v[0]),u=1;u<v.length;u++)for(a=v[u],c=0;c<h;c++)l[c]=l[c]&a[c];P.maskData=l}return P}},void 0===(n=function(){return g}.apply(t,[]))||(e.exports=n)},710:e=>{var t=function(e){null==e&&(e=(new Date).getTime()),this.N=624,this.M=397,this.MATRIX_A=2567483615,this.UPPER_MASK=2147483648,this.LOWER_MASK=2147483647,this.mt=new Array(this.N),this.mti=this.N+1,e.constructor==Array?this.init_by_array(e,e.length):this.init_seed(e)};t.prototype.init_seed=function(e){for(this.mt[0]=e>>>0,this.mti=1;this.mti<this.N;this.mti++)e=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30,this.mt[this.mti]=(1812433253*((4294901760&e)>>>16)<<16)+1812433253*(65535&e)+this.mti,this.mt[this.mti]>>>=0},t.prototype.init_by_array=function(e,t){var n,r,f;for(this.init_seed(19650218),n=1,r=0,f=this.N>t?this.N:t;f;f--){var i=this.mt[n-1]^this.mt[n-1]>>>30;this.mt[n]=(this.mt[n]^(1664525*((4294901760&i)>>>16)<<16)+1664525*(65535&i))+e[r]+r,this.mt[n]>>>=0,r++,++n>=this.N&&(this.mt[0]=this.mt[this.N-1],n=1),r>=t&&(r=0)}for(f=this.N-1;f;f--)i=this.mt[n-1]^this.mt[n-1]>>>30,this.mt[n]=(this.mt[n]^(1566083941*((4294901760&i)>>>16)<<16)+1566083941*(65535&i))-n,this.mt[n]>>>=0,++n>=this.N&&(this.mt[0]=this.mt[this.N-1],n=1);this.mt[0]=2147483648},t.prototype.random_int=function(){var e,t=new Array(0,this.MATRIX_A);if(this.mti>=this.N){var n;for(this.mti==this.N+1&&this.init_seed(5489),n=0;n<this.N-this.M;n++)e=this.mt[n]&this.UPPER_MASK|this.mt[n+1]&this.LOWER_MASK,this.mt[n]=this.mt[n+this.M]^e>>>1^t[1&e];for(;n<this.N-1;n++)e=this.mt[n]&this.UPPER_MASK|this.mt[n+1]&this.LOWER_MASK,this.mt[n]=this.mt[n+(this.M-this.N)]^e>>>1^t[1&e];e=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK,this.mt[this.N-1]=this.mt[this.M-1]^e>>>1^t[1&e],this.mti=0}return e=this.mt[this.mti++],e^=e>>>11,e^=e<<7&2636928640,e^=e<<15&4022730752,(e^=e>>>18)>>>0},t.prototype.random_int31=function(){return this.random_int()>>>1},t.prototype.random_incl=function(){return this.random_int()*(1/4294967295)},t.prototype.random=function(){return this.random_int()*(1/4294967296)},t.prototype.random_excl=function(){return(this.random_int()+.5)*(1/4294967296)},t.prototype.random_long=function(){return(67108864*(this.random_int()>>>5)+(this.random_int()>>>6))*(1/9007199254740992)},e.exports=t},983:e=>{function t(e,t){const n=new RegExp(t,"g"),r=e.match(n);return r?r.length:0}e.exports=t,e.exports.default=t},83:(e,t,n)=>{const r=n(82),f=n(462),i=n(983);function o(e,t,n){const o=n&&n.debug||!1,s=!(n&&!1===typeof n.nested),a=n&&n.startIndex||0;o&&console.log("[xml-utils] starting findTagByName with",t," and ",n);const l=r(e,`<${t}[ >/]`,a);if(o&&console.log("[xml-utils] start:",l),-1===l)return;const u=e.slice(l+t.length);let c=f(u,"^[^<]*[ /]>",0);const h=-1!==c&&"/"===u[c-1];if(o&&console.log("[xml-utils] selfClosing:",h),!1===h)if(s){let e=0,n=1,r=0;for(;-1!==(c=f(u,"[ /]"+t+">",e));){const f=u.substring(e,c+1);if(n+=i(f,"<"+t),r+=i(f,"/"+t+">"),r>=n)break;e=c}}else c=f(u,"[ /]"+t+">",0);const A=l+t.length+c+1;if(o&&console.log("[xml-utils] end:",A),-1===A)return;const d=e.slice(l,A);let v;return v=h?null:d.slice(d.indexOf(">")+1,d.lastIndexOf("<")),{inner:v,outer:d,start:l,end:A}}e.exports=o,e.exports.default=o},876:(e,t,n)=>{const r=n(83);function f(e,t,n){const f=[],i=n&&n.debug||!1,o=!n||"boolean"!=typeof n.nested||n.nested;let s,a=n&&n.startIndex||0;for(;s=r(e,t,{debug:i,startIndex:a});)a=o?s.start+1+t.length:s.end,f.push(s);return i&&console.log("findTagsByName found",f.length,"tags"),f}e.exports=f,e.exports.default=f},565:e=>{function t(e,t,n){const r=n&&n.debug||!1;r&&console.log("getting "+t+" in "+e);const f="object"==typeof e?e.outer:e,i=`${t}\\="([^"]*)"`;r&&console.log("pattern:",i);const o=new RegExp(i).exec(f);if(r&&console.log("match:",o),o)return o[1]}e.exports=t,e.exports.default=t},462:e=>{function t(e,t,n){const r=new RegExp(t).exec(e.slice(n));return r?n+r.index+r[0].length-1:-1}e.exports=t,e.exports.default=t},82:e=>{function t(e,t,n){const r=new RegExp(t).exec(e.slice(n));return r?n+r.index:-1}e.exports=t,e.exports.default=t},24:(e,t,n)=>{function r(e,t){let n=e.length-t,r=0;do{for(let n=t;n>0;n--)e[r+t]+=e[r],r++;n-=t}while(n>0)}function f(e,t,n){let r=0,f=e.length;const i=f/n;for(;f>t;){for(let n=t;n>0;--n)e[r+t]+=e[r],++r;f-=t}const o=e.slice();for(let t=0;t<i;++t)for(let r=0;r<n;++r)e[n*t+r]=o[(n-r-1)*i+t]}n.d(t,{Z:()=>i});class i{async decode(e,t){const n=await this.decodeBlock(t),i=e.Predictor||1;if(1!==i){const t=!e.StripOffsets;return function(e,t,n,i,o,s){if(!t||1===t)return e;for(let e=0;e<o.length;++e){if(o[e]%8!=0)throw new Error("When decoding with predictor, only multiple of 8 bits are supported.");if(o[e]!==o[0])throw new Error("When decoding with predictor, all samples must have the same size.")}const a=o[0]/8,l=2===s?1:o.length;for(let s=0;s<i&&!(s*l*n*a>=e.byteLength);++s){let i;if(2===t){switch(o[0]){case 8:i=new Uint8Array(e,s*l*n*a,l*n*a);break;case 16:i=new Uint16Array(e,s*l*n*a,l*n*a/2);break;case 32:i=new Uint32Array(e,s*l*n*a,l*n*a/4);break;default:throw new Error(`Predictor 2 not allowed with ${o[0]} bits per sample.`)}r(i,l)}else 3===t&&(i=new Uint8Array(e,s*l*n*a,l*n*a),f(i,l,a))}return e}(n,i,t?e.TileWidth:e.ImageWidth,t?e.TileLength:e.RowsPerStrip||e.ImageLength,e.BitsPerSample,e.PlanarConfiguration)}return n}}},465:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n(654),f=n(24);class i extends f.Z{decodeBlock(e){return(0,r.rr)(new Uint8Array(e)).buffer}}},511:(e,t,n)=>{n.r(t),n.d(t,{default:()=>w});var r=n(24);const f=new Int32Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]),i=4017,o=799,s=3406,a=2276,l=1567,u=3784,c=5793,h=2896;function A(e,t){let n=0;const r=[];let f=16;for(;f>0&&!e[f-1];)--f;r.push({children:[],index:0});let i,o=r[0];for(let s=0;s<f;s++){for(let f=0;f<e[s];f++){for(o=r.pop(),o.children[o.index]=t[n];o.index>0;)o=r.pop();for(o.index++,r.push(o);r.length<=s;)r.push(i={children:[],index:0}),o.children[o.index]=i.children,o=i;n++}s+1<f&&(r.push(i={children:[],index:0}),o.children[o.index]=i.children,o=i)}return r[0].children}function d(e,t,n,r,i,o,s,a,l){const{mcusPerLine:u,progressive:c}=n,h=t;let A=t,d=0,v=0;function P(){if(v>0)return v--,d>>v&1;if(d=e[A++],255===d){const t=e[A++];if(t)throw new Error(`unexpected marker: ${(d<<8|t).toString(16)}`)}return v=7,d>>>7}function w(e){let t,n=e;for(;null!==(t=P());){if(n=n[t],"number"==typeof n)return n;if("object"!=typeof n)throw new Error("invalid huffman sequence")}return null}function y(e){let t=e,n=0;for(;t>0;){const e=P();if(null===e)return;n=n<<1|e,--t}return n}function D(e){const t=y(e);return t>=1<<e-1?t:t+(-1<<e)+1}let H,X=0,g=0;function p(e,t,n,r,f){const i=n%u,o=(n/u|0)*e.v+r,s=i*e.h+f;t(e,e.blocks[o][s])}function O(e,t,n){const r=n/e.blocksPerLine|0,f=n%e.blocksPerLine;t(e,e.blocks[r][f])}const m=r.length;let b,z,L,j,x,T;T=c?0===o?0===a?function(e,t){const n=w(e.huffmanTableDC),r=0===n?0:D(n)<<l;e.pred+=r,t[0]=e.pred}:function(e,t){t[0]|=P()<<l}:0===a?function(e,t){if(X>0)return void X--;let n=o;const r=s;for(;n<=r;){const r=w(e.huffmanTableAC),i=15&r,o=r>>4;if(0===i){if(o<15){X=y(o)+(1<<o)-1;break}n+=16}else n+=o,t[f[n]]=D(i)*(1<<l),n++}}:function(e,t){let n=o;const r=s;let i=0;for(;n<=r;){const r=f[n],o=t[r]<0?-1:1;switch(g){case 0:{const t=w(e.huffmanTableAC),n=15&t;if(i=t>>4,0===n)i<15?(X=y(i)+(1<<i),g=4):(i=16,g=1);else{if(1!==n)throw new Error("invalid ACn encoding");H=D(n),g=i?2:3}continue}case 1:case 2:t[r]?t[r]+=(P()<<l)*o:(i--,0===i&&(g=2===g?3:0));break;case 3:t[r]?t[r]+=(P()<<l)*o:(t[r]=H<<l,g=0);break;case 4:t[r]&&(t[r]+=(P()<<l)*o)}n++}4===g&&(X--,0===X&&(g=0))}:function(e,t){const n=w(e.huffmanTableDC),r=0===n?0:D(n);e.pred+=r,t[0]=e.pred;let i=1;for(;i<64;){const n=w(e.huffmanTableAC),r=15&n,o=n>>4;if(0===r){if(o<15)break;i+=16}else i+=o,t[f[i]]=D(r),i++}};let k,I,Q=0;I=1===m?r[0].blocksPerLine*r[0].blocksPerColumn:u*n.mcusPerColumn;const E=i||I;for(;Q<I;){for(z=0;z<m;z++)r[z].pred=0;if(X=0,1===m)for(b=r[0],x=0;x<E;x++)O(b,T,Q),Q++;else for(x=0;x<E;x++){for(z=0;z<m;z++){b=r[z];const{h:e,v:t}=b;for(L=0;L<t;L++)for(j=0;j<e;j++)p(b,T,Q,L,j)}if(Q++,Q===I)break}if(v=0,k=e[A]<<8|e[A+1],k<65280)throw new Error("marker was not found");if(!(k>=65488&&k<=65495))break;A+=2}return A-h}function v(e,t){const n=[],{blocksPerLine:r,blocksPerColumn:f}=t,A=r<<3,d=new Int32Array(64),v=new Uint8Array(64);function P(e,n,r){const f=t.quantizationTable;let A,d,v,P,w,y,D,H,X;const g=r;let p;for(p=0;p<64;p++)g[p]=e[p]*f[p];for(p=0;p<8;++p){const e=8*p;0!==g[1+e]||0!==g[2+e]||0!==g[3+e]||0!==g[4+e]||0!==g[5+e]||0!==g[6+e]||0!==g[7+e]?(A=c*g[0+e]+128>>8,d=c*g[4+e]+128>>8,v=g[2+e],P=g[6+e],w=h*(g[1+e]-g[7+e])+128>>8,H=h*(g[1+e]+g[7+e])+128>>8,y=g[3+e]<<4,D=g[5+e]<<4,X=A-d+1>>1,A=A+d+1>>1,d=X,X=v*u+P*l+128>>8,v=v*l-P*u+128>>8,P=X,X=w-D+1>>1,w=w+D+1>>1,D=X,X=H+y+1>>1,y=H-y+1>>1,H=X,X=A-P+1>>1,A=A+P+1>>1,P=X,X=d-v+1>>1,d=d+v+1>>1,v=X,X=w*a+H*s+2048>>12,w=w*s-H*a+2048>>12,H=X,X=y*o+D*i+2048>>12,y=y*i-D*o+2048>>12,D=X,g[0+e]=A+H,g[7+e]=A-H,g[1+e]=d+D,g[6+e]=d-D,g[2+e]=v+y,g[5+e]=v-y,g[3+e]=P+w,g[4+e]=P-w):(X=c*g[0+e]+512>>10,g[0+e]=X,g[1+e]=X,g[2+e]=X,g[3+e]=X,g[4+e]=X,g[5+e]=X,g[6+e]=X,g[7+e]=X)}for(p=0;p<8;++p){const e=p;0!==g[8+e]||0!==g[16+e]||0!==g[24+e]||0!==g[32+e]||0!==g[40+e]||0!==g[48+e]||0!==g[56+e]?(A=c*g[0+e]+2048>>12,d=c*g[32+e]+2048>>12,v=g[16+e],P=g[48+e],w=h*(g[8+e]-g[56+e])+2048>>12,H=h*(g[8+e]+g[56+e])+2048>>12,y=g[24+e],D=g[40+e],X=A-d+1>>1,A=A+d+1>>1,d=X,X=v*u+P*l+2048>>12,v=v*l-P*u+2048>>12,P=X,X=w-D+1>>1,w=w+D+1>>1,D=X,X=H+y+1>>1,y=H-y+1>>1,H=X,X=A-P+1>>1,A=A+P+1>>1,P=X,X=d-v+1>>1,d=d+v+1>>1,v=X,X=w*a+H*s+2048>>12,w=w*s-H*a+2048>>12,H=X,X=y*o+D*i+2048>>12,y=y*i-D*o+2048>>12,D=X,g[0+e]=A+H,g[56+e]=A-H,g[8+e]=d+D,g[48+e]=d-D,g[16+e]=v+y,g[40+e]=v-y,g[24+e]=P+w,g[32+e]=P-w):(X=c*r[p+0]+8192>>14,g[0+e]=X,g[8+e]=X,g[16+e]=X,g[24+e]=X,g[32+e]=X,g[40+e]=X,g[48+e]=X,g[56+e]=X)}for(p=0;p<64;++p){const e=128+(g[p]+8>>4);n[p]=e<0?0:e>255?255:e}}for(let e=0;e<f;e++){const f=e<<3;for(let e=0;e<8;e++)n.push(new Uint8Array(A));for(let i=0;i<r;i++){P(t.blocks[e][i],v,d);let r=0;const o=i<<3;for(let e=0;e<8;e++){const t=n[f+e];for(let e=0;e<8;e++)t[o+e]=v[r++]}}}return n}class P{constructor(){this.jfif=null,this.adobe=null,this.quantizationTables=[],this.huffmanTablesAC=[],this.huffmanTablesDC=[],this.resetFrames()}resetFrames(){this.frames=[]}parse(e){let t=0;function n(){const n=e[t]<<8|e[t+1];return t+=2,n}function r(){const r=n(),f=e.subarray(t,t+r-2);return t+=f.length,f}function i(e){let t,n,r=0,f=0;for(n in e.components)e.components.hasOwnProperty(n)&&(t=e.components[n],r<t.h&&(r=t.h),f<t.v&&(f=t.v));const i=Math.ceil(e.samplesPerLine/8/r),o=Math.ceil(e.scanLines/8/f);for(n in e.components)if(e.components.hasOwnProperty(n)){t=e.components[n];const s=Math.ceil(Math.ceil(e.samplesPerLine/8)*t.h/r),a=Math.ceil(Math.ceil(e.scanLines/8)*t.v/f),l=i*t.h,u=o*t.v,c=[];for(let e=0;e<u;e++){const e=[];for(let t=0;t<l;t++)e.push(new Int32Array(64));c.push(e)}t.blocksPerLine=s,t.blocksPerColumn=a,t.blocks=c}e.maxH=r,e.maxV=f,e.mcusPerLine=i,e.mcusPerColumn=o}let o=n();if(65496!==o)throw new Error("SOI not found");for(o=n();65497!==o;){switch(o){case 65280:break;case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:{const e=r();65504===o&&74===e[0]&&70===e[1]&&73===e[2]&&70===e[3]&&0===e[4]&&(this.jfif={version:{major:e[5],minor:e[6]},densityUnits:e[7],xDensity:e[8]<<8|e[9],yDensity:e[10]<<8|e[11],thumbWidth:e[12],thumbHeight:e[13],thumbData:e.subarray(14,14+3*e[12]*e[13])}),65518===o&&65===e[0]&&100===e[1]&&111===e[2]&&98===e[3]&&101===e[4]&&0===e[5]&&(this.adobe={version:e[6],flags0:e[7]<<8|e[8],flags1:e[9]<<8|e[10],transformCode:e[11]});break}case 65499:{const r=n()+t-2;for(;t<r;){const r=e[t++],i=new Int32Array(64);if(r>>4==0)for(let n=0;n<64;n++)i[f[n]]=e[t++];else{if(r>>4!=1)throw new Error("DQT: invalid table spec");for(let e=0;e<64;e++)i[f[e]]=n()}this.quantizationTables[15&r]=i}break}case 65472:case 65473:case 65474:{n();const r={extended:65473===o,progressive:65474===o,precision:e[t++],scanLines:n(),samplesPerLine:n(),components:{},componentsOrder:[]},f=e[t++];let s;for(let n=0;n<f;n++){s=e[t];const n=e[t+1]>>4,f=15&e[t+1],i=e[t+2];r.componentsOrder.push(s),r.components[s]={h:n,v:f,quantizationIdx:i},t+=3}i(r),this.frames.push(r);break}case 65476:{const r=n();for(let n=2;n<r;){const r=e[t++],f=new Uint8Array(16);let i=0;for(let n=0;n<16;n++,t++)f[n]=e[t],i+=f[n];const o=new Uint8Array(i);for(let n=0;n<i;n++,t++)o[n]=e[t];n+=17+i,r>>4==0?this.huffmanTablesDC[15&r]=A(f,o):this.huffmanTablesAC[15&r]=A(f,o)}break}case 65501:n(),this.resetInterval=n();break;case 65498:{n();const r=e[t++],f=[],i=this.frames[0];for(let n=0;n<r;n++){const n=i.components[e[t++]],r=e[t++];n.huffmanTableDC=this.huffmanTablesDC[r>>4],n.huffmanTableAC=this.huffmanTablesAC[15&r],f.push(n)}const o=e[t++],s=e[t++],a=e[t++],l=d(e,t,i,f,this.resetInterval,o,s,a>>4,15&a);t+=l;break}case 65535:255!==e[t]&&t--;break;default:if(255===e[t-3]&&e[t-2]>=192&&e[t-2]<=254){t-=3;break}throw new Error(`unknown JPEG marker ${o.toString(16)}`)}o=n()}}getResult(){const{frames:e}=this;if(0===this.frames.length)throw new Error("no frames were decoded");this.frames.length>1&&console.warn("more than one frame is not supported");for(let e=0;e<this.frames.length;e++){const t=this.frames[e].components;for(const e of Object.keys(t))t[e].quantizationTable=this.quantizationTables[t[e].quantizationIdx],delete t[e].quantizationIdx}const t=e[0],{components:n,componentsOrder:r}=t,f=[],i=t.samplesPerLine,o=t.scanLines;for(let e=0;e<r.length;e++){const i=n[r[e]];f.push({lines:v(0,i),scaleX:i.h/t.maxH,scaleY:i.v/t.maxV})}const s=new Uint8Array(i*o*f.length);let a=0;for(let e=0;e<o;++e)for(let t=0;t<i;++t)for(let n=0;n<f.length;++n){const r=f[n];s[a]=r.lines[0|e*r.scaleY][0|t*r.scaleX],++a}return s}}class w extends r.Z{constructor(e){super(),this.reader=new P,e.JPEGTables&&this.reader.parse(e.JPEGTables)}decodeBlock(e){return this.reader.resetFrames(),this.reader.parse(new Uint8Array(e)),this.reader.getResult().buffer}}},498:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n(654),f=n(35),i=n(24),o=n(957);class s extends i.Z{constructor(e){super(),this.planarConfiguration=void 0!==e.PlanarConfiguration?e.PlanarConfiguration:1,this.samplesPerPixel=void 0!==e.SamplesPerPixel?e.SamplesPerPixel:1,this.addCompression=e.LercParameters[o.L5.AddCompression]}decodeBlock(e){switch(this.addCompression){case o.Qb.None:break;case o.Qb.Deflate:e=(0,r.rr)(new Uint8Array(e)).buffer;break;default:throw new Error(`Unsupported LERC additional compression method identifier: ${this.addCompression}`)}return f.decode(e,{returnPixelInterleavedDims:1===this.planarConfiguration}).pixels[0].buffer}}},428:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n(24);function f(e,t){for(let n=t.length-1;n>=0;n--)e.push(t[n]);return e}class i extends r.Z{decodeBlock(e){return function(e){const t=new Uint16Array(4093),n=new Uint8Array(4093);for(let e=0;e<=257;e++)t[e]=4096,n[e]=e;let r=258,i=9,o=0;function s(){r=258,i=9}function a(e){const t=function(e,t,n){const r=t%8,f=Math.floor(t/8),i=8-r,o=t+n-8*(f+1);let s=8*(f+2)-(t+n);const a=8*(f+2)-t;if(s=Math.max(0,s),f>=e.length)return console.warn("ran off the end of the buffer before finding EOI_CODE (end on input code)"),257;let l=e[f]&2**(8-r)-1;l<<=n-i;let u=l;if(f+1<e.length){let t=e[f+1]>>>s;t<<=Math.max(0,n-a),u+=t}if(o>8&&f+2<e.length){const r=8*(f+3)-(t+n);u+=e[f+2]>>>r}return u}(e,o,i);return o+=i,t}function l(e,f){return n[r]=f,t[r]=e,r++,r-1}function u(e){const r=[];for(let f=e;4096!==f;f=t[f])r.push(n[f]);return r}const c=[];s();const h=new Uint8Array(e);let A,d=a(h);for(;257!==d;){if(256===d){for(s(),d=a(h);256===d;)d=a(h);if(257===d)break;if(d>256)throw new Error(`corrupted code at scanline ${d}`);f(c,u(d)),A=d}else if(d<r){const e=u(d);f(c,e),l(A,e[e.length-1]),A=d}else{const e=u(A);if(!e)throw new Error(`Bogus entry. Not in dictionary, ${A} / ${r}, position: ${o}`);f(c,e),c.push(e[e.length-1]),l(A,e[e.length-1]),A=d}r+1>=2**i&&(12===i?A=void 0:i++),d=a(h)}return new Uint8Array(c)}(e).buffer}}},393:(e,t,n)=>{n.r(t),n.d(t,{default:()=>f});var r=n(24);class f extends r.Z{decodeBlock(e){const t=new DataView(e),n=[];for(let r=0;r<e.byteLength;++r){let e=t.getInt8(r);if(e<0){const f=t.getUint8(r+1);e=-e;for(let t=0;t<=e;++t)n.push(f);r+=1}else{for(let f=0;f<=e;++f)n.push(t.getUint8(r+f+1));r+=e+1}}return new Uint8Array(n).buffer}}},206:(e,t,n)=>{n.r(t),n.d(t,{default:()=>f});var r=n(24);class f extends r.Z{decodeBlock(e){return e}}},557:(e,t,n)=>{n.r(t),n.d(t,{default:()=>f});var r=n(24);class f extends r.Z{constructor(){if(super(),"undefined"==typeof createImageBitmap)throw new Error("Cannot decode WebImage as `createImageBitmap` is not available");if("undefined"==typeof document&&"undefined"==typeof OffscreenCanvas)throw new Error("Cannot decode WebImage as neither `document` nor `OffscreenCanvas` is not available")}async decode(e,t){const n=new Blob([t]),r=await createImageBitmap(n);let f;"undefined"!=typeof document?(f=document.createElement("canvas"),f.width=r.width,f.height=r.height):f=new OffscreenCanvas(r.width,r.height);const i=f.getContext("2d");return i.drawImage(r,0,0),i.getImageData(0,0,r.width,r.height).data.buffer}}},957:(e,t,n)=>{n.d(t,{Ie:()=>a,It:()=>i,L:()=>r,L5:()=>u,P1:()=>h,Qb:()=>c,pd:()=>l,sf:()=>s});const r={315:"Artist",258:"BitsPerSample",265:"CellLength",264:"CellWidth",320:"ColorMap",259:"Compression",33432:"Copyright",306:"DateTime",338:"ExtraSamples",266:"FillOrder",289:"FreeByteCounts",288:"FreeOffsets",291:"GrayResponseCurve",290:"GrayResponseUnit",316:"HostComputer",270:"ImageDescription",257:"ImageLength",256:"ImageWidth",271:"Make",281:"MaxSampleValue",280:"MinSampleValue",272:"Model",254:"NewSubfileType",274:"Orientation",262:"PhotometricInterpretation",284:"PlanarConfiguration",296:"ResolutionUnit",278:"RowsPerStrip",277:"SamplesPerPixel",305:"Software",279:"StripByteCounts",273:"StripOffsets",255:"SubfileType",263:"Threshholding",282:"XResolution",283:"YResolution",326:"BadFaxLines",327:"CleanFaxData",343:"ClipPath",328:"ConsecutiveBadFaxLines",433:"Decode",434:"DefaultImageColor",269:"DocumentName",336:"DotRange",321:"HalftoneHints",346:"Indexed",347:"JPEGTables",285:"PageName",297:"PageNumber",317:"Predictor",319:"PrimaryChromaticities",532:"ReferenceBlackWhite",339:"SampleFormat",340:"SMinSampleValue",341:"SMaxSampleValue",559:"StripRowCounts",330:"SubIFDs",292:"T4Options",293:"T6Options",325:"TileByteCounts",323:"TileLength",324:"TileOffsets",322:"TileWidth",301:"TransferFunction",318:"WhitePoint",344:"XClipPathUnits",286:"XPosition",529:"YCbCrCoefficients",531:"YCbCrPositioning",530:"YCbCrSubSampling",345:"YClipPathUnits",287:"YPosition",37378:"ApertureValue",40961:"ColorSpace",36868:"DateTimeDigitized",36867:"DateTimeOriginal",34665:"Exif IFD",36864:"ExifVersion",33434:"ExposureTime",41728:"FileSource",37385:"Flash",40960:"FlashpixVersion",33437:"FNumber",42016:"ImageUniqueID",37384:"LightSource",37500:"MakerNote",37377:"ShutterSpeedValue",37510:"UserComment",33723:"IPTC",34675:"ICC Profile",700:"XMP",42112:"GDAL_METADATA",42113:"GDAL_NODATA",34377:"Photoshop",33550:"ModelPixelScale",33922:"ModelTiepoint",34264:"ModelTransformation",34735:"GeoKeyDirectory",34736:"GeoDoubleParams",34737:"GeoAsciiParams",50674:"LercParameters"},f={};for(const e in r)r.hasOwnProperty(e)&&(f[r[e]]=parseInt(e,10));const i=[f.BitsPerSample,f.ExtraSamples,f.SampleFormat,f.StripByteCounts,f.StripOffsets,f.StripRowCounts,f.TileByteCounts,f.TileOffsets,f.SubIFDs],o={1:"BYTE",2:"ASCII",3:"SHORT",4:"LONG",5:"RATIONAL",6:"SBYTE",7:"UNDEFINED",8:"SSHORT",9:"SLONG",10:"SRATIONAL",11:"FLOAT",12:"DOUBLE",13:"IFD",16:"LONG8",17:"SLONG8",18:"IFD8"},s={};for(const e in o)o.hasOwnProperty(e)&&(s[o[e]]=parseInt(e,10));const a={WhiteIsZero:0,BlackIsZero:1,RGB:2,Palette:3,TransparencyMask:4,CMYK:5,YCbCr:6,CIELab:8,ICCLab:9},l={Unspecified:0,Assocalpha:1,Unassalpha:2},u={Version:0,AddCompression:1},c={None:0,Deflate:1},h={1024:"GTModelTypeGeoKey",1025:"GTRasterTypeGeoKey",1026:"GTCitationGeoKey",2048:"GeographicTypeGeoKey",2049:"GeogCitationGeoKey",2050:"GeogGeodeticDatumGeoKey",2051:"GeogPrimeMeridianGeoKey",2052:"GeogLinearUnitsGeoKey",2053:"GeogLinearUnitSizeGeoKey",2054:"GeogAngularUnitsGeoKey",2055:"GeogAngularUnitSizeGeoKey",2056:"GeogEllipsoidGeoKey",2057:"GeogSemiMajorAxisGeoKey",2058:"GeogSemiMinorAxisGeoKey",2059:"GeogInvFlatteningGeoKey",2060:"GeogAzimuthUnitsGeoKey",2061:"GeogPrimeMeridianLongGeoKey",2062:"GeogTOWGS84GeoKey",3072:"ProjectedCSTypeGeoKey",3073:"PCSCitationGeoKey",3074:"ProjectionGeoKey",3075:"ProjCoordTransGeoKey",3076:"ProjLinearUnitsGeoKey",3077:"ProjLinearUnitSizeGeoKey",3078:"ProjStdParallel1GeoKey",3079:"ProjStdParallel2GeoKey",3080:"ProjNatOriginLongGeoKey",3081:"ProjNatOriginLatGeoKey",3082:"ProjFalseEastingGeoKey",3083:"ProjFalseNorthingGeoKey",3084:"ProjFalseOriginLongGeoKey",3085:"ProjFalseOriginLatGeoKey",3086:"ProjFalseOriginEastingGeoKey",3087:"ProjFalseOriginNorthingGeoKey",3088:"ProjCenterLongGeoKey",3089:"ProjCenterLatGeoKey",3090:"ProjCenterEastingGeoKey",3091:"ProjCenterNorthingGeoKey",3092:"ProjScaleAtNatOriginGeoKey",3093:"ProjScaleAtCenterGeoKey",3094:"ProjAzimuthAngleGeoKey",3095:"ProjStraightVertPoleLongGeoKey",3096:"ProjRectifiedGridAngleGeoKey",4096:"VerticalCSTypeGeoKey",4097:"VerticalCitationGeoKey",4098:"VerticalDatumGeoKey",4099:"VerticalUnitsGeoKey"},A={};for(const e in h)h.hasOwnProperty(e)&&(A[h[e]]=parseInt(e,10))},654:(e,t,n)=>{function r(e){let t=e.length;for(;--t>=0;)e[t]=0}n.d(t,{rr:()=>pn});const f=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),i=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),o=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),s=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),a=new Array(576);r(a);const l=new Array(60);r(l);const u=new Array(512);r(u);const c=new Array(256);r(c);const h=new Array(29);r(h);const A=new Array(30);function d(e,t,n,r,f){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=r,this.max_length=f,this.has_stree=e&&e.length}let v,P,w;function y(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}r(A);const D=e=>e<256?u[e]:u[256+(e>>>7)],H=(e,t)=>{e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255},X=(e,t,n)=>{e.bi_valid>16-n?(e.bi_buf|=t<<e.bi_valid&65535,H(e,e.bi_buf),e.bi_buf=t>>16-e.bi_valid,e.bi_valid+=n-16):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)},g=(e,t,n)=>{X(e,n[2*t],n[2*t+1])},p=(e,t)=>{let n=0;do{n|=1&e,e>>>=1,n<<=1}while(--t>0);return n>>>1},O=(e,t,n)=>{const r=new Array(16);let f,i,o=0;for(f=1;f<=15;f++)o=o+n[f-1]<<1,r[f]=o;for(i=0;i<=t;i++){let t=e[2*i+1];0!==t&&(e[2*i]=p(r[t]++,t))}},m=e=>{let t;for(t=0;t<286;t++)e.dyn_ltree[2*t]=0;for(t=0;t<30;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.sym_next=e.matches=0},b=e=>{e.bi_valid>8?H(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0},z=(e,t,n,r)=>{const f=2*t,i=2*n;return e[f]<e[i]||e[f]===e[i]&&r[t]<=r[n]},L=(e,t,n)=>{const r=e.heap[n];let f=n<<1;for(;f<=e.heap_len&&(f<e.heap_len&&z(t,e.heap[f+1],e.heap[f],e.depth)&&f++,!z(t,r,e.heap[f],e.depth));)e.heap[n]=e.heap[f],n=f,f<<=1;e.heap[n]=r},j=(e,t,n)=>{let r,o,s,a,l=0;if(0!==e.sym_next)do{r=255&e.pending_buf[e.sym_buf+l++],r+=(255&e.pending_buf[e.sym_buf+l++])<<8,o=e.pending_buf[e.sym_buf+l++],0===r?g(e,o,t):(s=c[o],g(e,s+256+1,t),a=f[s],0!==a&&(o-=h[s],X(e,o,a)),r--,s=D(r),g(e,s,n),a=i[s],0!==a&&(r-=A[s],X(e,r,a)))}while(l<e.sym_next);g(e,256,t)},x=(e,t)=>{const n=t.dyn_tree,r=t.stat_desc.static_tree,f=t.stat_desc.has_stree,i=t.stat_desc.elems;let o,s,a,l=-1;for(e.heap_len=0,e.heap_max=573,o=0;o<i;o++)0!==n[2*o]?(e.heap[++e.heap_len]=l=o,e.depth[o]=0):n[2*o+1]=0;for(;e.heap_len<2;)a=e.heap[++e.heap_len]=l<2?++l:0,n[2*a]=1,e.depth[a]=0,e.opt_len--,f&&(e.static_len-=r[2*a+1]);for(t.max_code=l,o=e.heap_len>>1;o>=1;o--)L(e,n,o);a=i;do{o=e.heap[1],e.heap[1]=e.heap[e.heap_len--],L(e,n,1),s=e.heap[1],e.heap[--e.heap_max]=o,e.heap[--e.heap_max]=s,n[2*a]=n[2*o]+n[2*s],e.depth[a]=(e.depth[o]>=e.depth[s]?e.depth[o]:e.depth[s])+1,n[2*o+1]=n[2*s+1]=a,e.heap[1]=a++,L(e,n,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],((e,t)=>{const n=t.dyn_tree,r=t.max_code,f=t.stat_desc.static_tree,i=t.stat_desc.has_stree,o=t.stat_desc.extra_bits,s=t.stat_desc.extra_base,a=t.stat_desc.max_length;let l,u,c,h,A,d,v=0;for(h=0;h<=15;h++)e.bl_count[h]=0;for(n[2*e.heap[e.heap_max]+1]=0,l=e.heap_max+1;l<573;l++)u=e.heap[l],h=n[2*n[2*u+1]+1]+1,h>a&&(h=a,v++),n[2*u+1]=h,u>r||(e.bl_count[h]++,A=0,u>=s&&(A=o[u-s]),d=n[2*u],e.opt_len+=d*(h+A),i&&(e.static_len+=d*(f[2*u+1]+A)));if(0!==v){do{for(h=a-1;0===e.bl_count[h];)h--;e.bl_count[h]--,e.bl_count[h+1]+=2,e.bl_count[a]--,v-=2}while(v>0);for(h=a;0!==h;h--)for(u=e.bl_count[h];0!==u;)c=e.heap[--l],c>r||(n[2*c+1]!==h&&(e.opt_len+=(h-n[2*c+1])*n[2*c],n[2*c+1]=h),u--)}})(e,t),O(n,l,e.bl_count)},T=(e,t,n)=>{let r,f,i=-1,o=t[1],s=0,a=7,l=4;for(0===o&&(a=138,l=3),t[2*(n+1)+1]=65535,r=0;r<=n;r++)f=o,o=t[2*(r+1)+1],++s<a&&f===o||(s<l?e.bl_tree[2*f]+=s:0!==f?(f!==i&&e.bl_tree[2*f]++,e.bl_tree[32]++):s<=10?e.bl_tree[34]++:e.bl_tree[36]++,s=0,i=f,0===o?(a=138,l=3):f===o?(a=6,l=3):(a=7,l=4))},k=(e,t,n)=>{let r,f,i=-1,o=t[1],s=0,a=7,l=4;for(0===o&&(a=138,l=3),r=0;r<=n;r++)if(f=o,o=t[2*(r+1)+1],!(++s<a&&f===o)){if(s<l)do{g(e,f,e.bl_tree)}while(0!=--s);else 0!==f?(f!==i&&(g(e,f,e.bl_tree),s--),g(e,16,e.bl_tree),X(e,s-3,2)):s<=10?(g(e,17,e.bl_tree),X(e,s-3,3)):(g(e,18,e.bl_tree),X(e,s-11,7));s=0,i=f,0===o?(a=138,l=3):f===o?(a=6,l=3):(a=7,l=4)}};let I=!1;const Q=(e,t,n,r)=>{X(e,0+(r?1:0),3),b(e),H(e,n),H(e,~n),n&&e.pending_buf.set(e.window.subarray(t,t+n),e.pending),e.pending+=n};var E={_tr_init:e=>{I||((()=>{let e,t,n,r,s;const y=new Array(16);for(n=0,r=0;r<28;r++)for(h[r]=n,e=0;e<1<<f[r];e++)c[n++]=r;for(c[n-1]=r,s=0,r=0;r<16;r++)for(A[r]=s,e=0;e<1<<i[r];e++)u[s++]=r;for(s>>=7;r<30;r++)for(A[r]=s<<7,e=0;e<1<<i[r]-7;e++)u[256+s++]=r;for(t=0;t<=15;t++)y[t]=0;for(e=0;e<=143;)a[2*e+1]=8,e++,y[8]++;for(;e<=255;)a[2*e+1]=9,e++,y[9]++;for(;e<=279;)a[2*e+1]=7,e++,y[7]++;for(;e<=287;)a[2*e+1]=8,e++,y[8]++;for(O(a,287,y),e=0;e<30;e++)l[2*e+1]=5,l[2*e]=p(e,5);v=new d(a,f,257,286,15),P=new d(l,i,0,30,15),w=new d(new Array(0),o,0,19,7)})(),I=!0),e.l_desc=new y(e.dyn_ltree,v),e.d_desc=new y(e.dyn_dtree,P),e.bl_desc=new y(e.bl_tree,w),e.bi_buf=0,e.bi_valid=0,m(e)},_tr_stored_block:Q,_tr_flush_block:(e,t,n,r)=>{let f,i,o=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=(e=>{let t,n=4093624447;for(t=0;t<=31;t++,n>>>=1)if(1&n&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<256;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0})(e)),x(e,e.l_desc),x(e,e.d_desc),o=(e=>{let t;for(T(e,e.dyn_ltree,e.l_desc.max_code),T(e,e.dyn_dtree,e.d_desc.max_code),x(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*s[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t})(e),f=e.opt_len+3+7>>>3,i=e.static_len+3+7>>>3,i<=f&&(f=i)):f=i=n+5,n+4<=f&&-1!==t?Q(e,t,n,r):4===e.strategy||i===f?(X(e,2+(r?1:0),3),j(e,a,l)):(X(e,4+(r?1:0),3),((e,t,n,r)=>{let f;for(X(e,t-257,5),X(e,n-1,5),X(e,r-4,4),f=0;f<r;f++)X(e,e.bl_tree[2*s[f]+1],3);k(e,e.dyn_ltree,t-1),k(e,e.dyn_dtree,n-1)})(e,e.l_desc.max_code+1,e.d_desc.max_code+1,o+1),j(e,e.dyn_ltree,e.dyn_dtree)),m(e),r&&b(e)},_tr_tally:(e,t,n)=>(e.pending_buf[e.sym_buf+e.sym_next++]=t,e.pending_buf[e.sym_buf+e.sym_next++]=t>>8,e.pending_buf[e.sym_buf+e.sym_next++]=n,0===t?e.dyn_ltree[2*n]++:(e.matches++,t--,e.dyn_ltree[2*(c[n]+256+1)]++,e.dyn_dtree[2*D(t)]++),e.sym_next===e.sym_end),_tr_align:e=>{X(e,2,3),g(e,256,a),(e=>{16===e.bi_valid?(H(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)})(e)}},B=(e,t,n,r)=>{let f=65535&e|0,i=e>>>16&65535|0,o=0;for(;0!==n;){o=n>2e3?2e3:n,n-=o;do{f=f+t[r++]|0,i=i+f|0}while(--o);f%=65521,i%=65521}return f|i<<16|0};const R=new Uint32Array((()=>{let e,t=[];for(var n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=1&e?3988292384^e>>>1:e>>>1;t[n]=e}return t})());var M=(e,t,n,r)=>{const f=R,i=r+n;e^=-1;for(let n=r;n<i;n++)e=e>>>8^f[255&(e^t[n])];return-1^e},N={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},V={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:S,_tr_stored_block:C,_tr_flush_block:U,_tr_tally:F,_tr_align:G}=E,{Z_NO_FLUSH:Y,Z_PARTIAL_FLUSH:W,Z_FULL_FLUSH:Z,Z_FINISH:q,Z_BLOCK:K,Z_OK:J,Z_STREAM_END:_,Z_STREAM_ERROR:$,Z_DATA_ERROR:ee,Z_BUF_ERROR:te,Z_DEFAULT_COMPRESSION:ne,Z_FILTERED:re,Z_HUFFMAN_ONLY:fe,Z_RLE:ie,Z_FIXED:oe,Z_DEFAULT_STRATEGY:se,Z_UNKNOWN:ae,Z_DEFLATED:le}=V,ue=258,ce=262,he=42,Ae=113,de=666,ve=(e,t)=>(e.msg=N[t],t),Pe=e=>2*e-(e>4?9:0),we=e=>{let t=e.length;for(;--t>=0;)e[t]=0},ye=e=>{let t,n,r,f=e.w_size;t=e.hash_size,r=t;do{n=e.head[--r],e.head[r]=n>=f?n-f:0}while(--t);t=f,r=t;do{n=e.prev[--r],e.prev[r]=n>=f?n-f:0}while(--t)};let De=(e,t,n)=>(t<<e.hash_shift^n)&e.hash_mask;const He=e=>{const t=e.state;let n=t.pending;n>e.avail_out&&(n=e.avail_out),0!==n&&(e.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+n),e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,0===t.pending&&(t.pending_out=0))},Xe=(e,t)=>{U(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,He(e.strm)},ge=(e,t)=>{e.pending_buf[e.pending++]=t},pe=(e,t)=>{e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t},Oe=(e,t,n,r)=>{let f=e.avail_in;return f>r&&(f=r),0===f?0:(e.avail_in-=f,t.set(e.input.subarray(e.next_in,e.next_in+f),n),1===e.state.wrap?e.adler=B(e.adler,t,f,n):2===e.state.wrap&&(e.adler=M(e.adler,t,f,n)),e.next_in+=f,e.total_in+=f,f)},me=(e,t)=>{let n,r,f=e.max_chain_length,i=e.strstart,o=e.prev_length,s=e.nice_match;const a=e.strstart>e.w_size-ce?e.strstart-(e.w_size-ce):0,l=e.window,u=e.w_mask,c=e.prev,h=e.strstart+ue;let A=l[i+o-1],d=l[i+o];e.prev_length>=e.good_match&&(f>>=2),s>e.lookahead&&(s=e.lookahead);do{if(n=t,l[n+o]===d&&l[n+o-1]===A&&l[n]===l[i]&&l[++n]===l[i+1]){i+=2,n++;do{}while(l[++i]===l[++n]&&l[++i]===l[++n]&&l[++i]===l[++n]&&l[++i]===l[++n]&&l[++i]===l[++n]&&l[++i]===l[++n]&&l[++i]===l[++n]&&l[++i]===l[++n]&&i<h);if(r=ue-(h-i),i=h-ue,r>o){if(e.match_start=t,o=r,r>=s)break;A=l[i+o-1],d=l[i+o]}}}while((t=c[t&u])>a&&0!=--f);return o<=e.lookahead?o:e.lookahead},be=e=>{const t=e.w_size;let n,r,f;do{if(r=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-ce)&&(e.window.set(e.window.subarray(t,t+t-r),0),e.match_start-=t,e.strstart-=t,e.block_start-=t,e.insert>e.strstart&&(e.insert=e.strstart),ye(e),r+=t),0===e.strm.avail_in)break;if(n=Oe(e.strm,e.window,e.strstart+e.lookahead,r),e.lookahead+=n,e.lookahead+e.insert>=3)for(f=e.strstart-e.insert,e.ins_h=e.window[f],e.ins_h=De(e,e.ins_h,e.window[f+1]);e.insert&&(e.ins_h=De(e,e.ins_h,e.window[f+3-1]),e.prev[f&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=f,f++,e.insert--,!(e.lookahead+e.insert<3)););}while(e.lookahead<ce&&0!==e.strm.avail_in)},ze=(e,t)=>{let n,r,f,i=e.pending_buf_size-5>e.w_size?e.w_size:e.pending_buf_size-5,o=0,s=e.strm.avail_in;do{if(n=65535,f=e.bi_valid+42>>3,e.strm.avail_out<f)break;if(f=e.strm.avail_out-f,r=e.strstart-e.block_start,n>r+e.strm.avail_in&&(n=r+e.strm.avail_in),n>f&&(n=f),n<i&&(0===n&&t!==q||t===Y||n!==r+e.strm.avail_in))break;o=t===q&&n===r+e.strm.avail_in?1:0,C(e,0,0,o),e.pending_buf[e.pending-4]=n,e.pending_buf[e.pending-3]=n>>8,e.pending_buf[e.pending-2]=~n,e.pending_buf[e.pending-1]=~n>>8,He(e.strm),r&&(r>n&&(r=n),e.strm.output.set(e.window.subarray(e.block_start,e.block_start+r),e.strm.next_out),e.strm.next_out+=r,e.strm.avail_out-=r,e.strm.total_out+=r,e.block_start+=r,n-=r),n&&(Oe(e.strm,e.strm.output,e.strm.next_out,n),e.strm.next_out+=n,e.strm.avail_out-=n,e.strm.total_out+=n)}while(0===o);return s-=e.strm.avail_in,s&&(s>=e.w_size?(e.matches=2,e.window.set(e.strm.input.subarray(e.strm.next_in-e.w_size,e.strm.next_in),0),e.strstart=e.w_size,e.insert=e.strstart):(e.window_size-e.strstart<=s&&(e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,e.insert>e.strstart&&(e.insert=e.strstart)),e.window.set(e.strm.input.subarray(e.strm.next_in-s,e.strm.next_in),e.strstart),e.strstart+=s,e.insert+=s>e.w_size-e.insert?e.w_size-e.insert:s),e.block_start=e.strstart),e.high_water<e.strstart&&(e.high_water=e.strstart),o?4:t!==Y&&t!==q&&0===e.strm.avail_in&&e.strstart===e.block_start?2:(f=e.window_size-e.strstart,e.strm.avail_in>f&&e.block_start>=e.w_size&&(e.block_start-=e.w_size,e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,f+=e.w_size,e.insert>e.strstart&&(e.insert=e.strstart)),f>e.strm.avail_in&&(f=e.strm.avail_in),f&&(Oe(e.strm,e.window,e.strstart,f),e.strstart+=f,e.insert+=f>e.w_size-e.insert?e.w_size-e.insert:f),e.high_water<e.strstart&&(e.high_water=e.strstart),f=e.bi_valid+42>>3,f=e.pending_buf_size-f>65535?65535:e.pending_buf_size-f,i=f>e.w_size?e.w_size:f,r=e.strstart-e.block_start,(r>=i||(r||t===q)&&t!==Y&&0===e.strm.avail_in&&r<=f)&&(n=r>f?f:r,o=t===q&&0===e.strm.avail_in&&n===r?1:0,C(e,e.block_start,n,o),e.block_start+=n,He(e.strm)),o?3:1)},Le=(e,t)=>{let n,r;for(;;){if(e.lookahead<ce){if(be(e),e.lookahead<ce&&t===Y)return 1;if(0===e.lookahead)break}if(n=0,e.lookahead>=3&&(e.ins_h=De(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==n&&e.strstart-n<=e.w_size-ce&&(e.match_length=me(e,n)),e.match_length>=3)if(r=F(e,e.strstart-e.match_start,e.match_length-3),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=3){e.match_length--;do{e.strstart++,e.ins_h=De(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=De(e,e.ins_h,e.window[e.strstart+1]);else r=F(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(r&&(Xe(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<2?e.strstart:2,t===q?(Xe(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(Xe(e,!1),0===e.strm.avail_out)?1:2},je=(e,t)=>{let n,r,f;for(;;){if(e.lookahead<ce){if(be(e),e.lookahead<ce&&t===Y)return 1;if(0===e.lookahead)break}if(n=0,e.lookahead>=3&&(e.ins_h=De(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=2,0!==n&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-ce&&(e.match_length=me(e,n),e.match_length<=5&&(e.strategy===re||3===e.match_length&&e.strstart-e.match_start>4096)&&(e.match_length=2)),e.prev_length>=3&&e.match_length<=e.prev_length){f=e.strstart+e.lookahead-3,r=F(e,e.strstart-1-e.prev_match,e.prev_length-3),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=f&&(e.ins_h=De(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=2,e.strstart++,r&&(Xe(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if(r=F(e,0,e.window[e.strstart-1]),r&&Xe(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(r=F(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<2?e.strstart:2,t===q?(Xe(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(Xe(e,!1),0===e.strm.avail_out)?1:2};function xe(e,t,n,r,f){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=r,this.func=f}const Te=[new xe(0,0,0,0,ze),new xe(4,4,8,4,Le),new xe(4,5,16,8,Le),new xe(4,6,32,32,Le),new xe(4,4,16,16,je),new xe(8,16,32,32,je),new xe(8,16,128,128,je),new xe(8,32,128,256,je),new xe(32,128,258,1024,je),new xe(32,258,258,4096,je)];function ke(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=le,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),we(this.dyn_ltree),we(this.dyn_dtree),we(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),we(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),we(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const Ie=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.status!==he&&57!==t.status&&69!==t.status&&73!==t.status&&91!==t.status&&103!==t.status&&t.status!==Ae&&t.status!==de?1:0},Qe=e=>{if(Ie(e))return ve(e,$);e.total_in=e.total_out=0,e.data_type=ae;const t=e.state;return t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=2===t.wrap?57:t.wrap?he:Ae,e.adler=2===t.wrap?0:1,t.last_flush=-2,S(t),J},Ee=e=>{const t=Qe(e);var n;return t===J&&((n=e.state).window_size=2*n.w_size,we(n.head),n.max_lazy_match=Te[n.level].max_lazy,n.good_match=Te[n.level].good_length,n.nice_match=Te[n.level].nice_length,n.max_chain_length=Te[n.level].max_chain,n.strstart=0,n.block_start=0,n.lookahead=0,n.insert=0,n.match_length=n.prev_length=2,n.match_available=0,n.ins_h=0),t},Be=(e,t,n,r,f,i)=>{if(!e)return $;let o=1;if(t===ne&&(t=6),r<0?(o=0,r=-r):r>15&&(o=2,r-=16),f<1||f>9||n!==le||r<8||r>15||t<0||t>9||i<0||i>oe||8===r&&1!==o)return ve(e,$);8===r&&(r=9);const s=new ke;return e.state=s,s.strm=e,s.status=he,s.wrap=o,s.gzhead=null,s.w_bits=r,s.w_size=1<<s.w_bits,s.w_mask=s.w_size-1,s.hash_bits=f+7,s.hash_size=1<<s.hash_bits,s.hash_mask=s.hash_size-1,s.hash_shift=~~((s.hash_bits+3-1)/3),s.window=new Uint8Array(2*s.w_size),s.head=new Uint16Array(s.hash_size),s.prev=new Uint16Array(s.w_size),s.lit_bufsize=1<<f+6,s.pending_buf_size=4*s.lit_bufsize,s.pending_buf=new Uint8Array(s.pending_buf_size),s.sym_buf=s.lit_bufsize,s.sym_end=3*(s.lit_bufsize-1),s.level=t,s.strategy=i,s.method=n,Ee(e)};var Re=Be,Me=(e,t)=>Ie(e)||2!==e.state.wrap?$:(e.state.gzhead=t,J),Ne=(e,t)=>{if(Ie(e)||t>K||t<0)return e?ve(e,$):$;const n=e.state;if(!e.output||0!==e.avail_in&&!e.input||n.status===de&&t!==q)return ve(e,0===e.avail_out?te:$);const r=n.last_flush;if(n.last_flush=t,0!==n.pending){if(He(e),0===e.avail_out)return n.last_flush=-1,J}else if(0===e.avail_in&&Pe(t)<=Pe(r)&&t!==q)return ve(e,te);if(n.status===de&&0!==e.avail_in)return ve(e,te);if(n.status===he&&0===n.wrap&&(n.status=Ae),n.status===he){let t=le+(n.w_bits-8<<4)<<8,r=-1;if(r=n.strategy>=fe||n.level<2?0:n.level<6?1:6===n.level?2:3,t|=r<<6,0!==n.strstart&&(t|=32),t+=31-t%31,pe(n,t),0!==n.strstart&&(pe(n,e.adler>>>16),pe(n,65535&e.adler)),e.adler=1,n.status=Ae,He(e),0!==n.pending)return n.last_flush=-1,J}if(57===n.status)if(e.adler=0,ge(n,31),ge(n,139),ge(n,8),n.gzhead)ge(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),ge(n,255&n.gzhead.time),ge(n,n.gzhead.time>>8&255),ge(n,n.gzhead.time>>16&255),ge(n,n.gzhead.time>>24&255),ge(n,9===n.level?2:n.strategy>=fe||n.level<2?4:0),ge(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(ge(n,255&n.gzhead.extra.length),ge(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(e.adler=M(e.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=69;else if(ge(n,0),ge(n,0),ge(n,0),ge(n,0),ge(n,0),ge(n,9===n.level?2:n.strategy>=fe||n.level<2?4:0),ge(n,3),n.status=Ae,He(e),0!==n.pending)return n.last_flush=-1,J;if(69===n.status){if(n.gzhead.extra){let t=n.pending,r=(65535&n.gzhead.extra.length)-n.gzindex;for(;n.pending+r>n.pending_buf_size;){let f=n.pending_buf_size-n.pending;if(n.pending_buf.set(n.gzhead.extra.subarray(n.gzindex,n.gzindex+f),n.pending),n.pending=n.pending_buf_size,n.gzhead.hcrc&&n.pending>t&&(e.adler=M(e.adler,n.pending_buf,n.pending-t,t)),n.gzindex+=f,He(e),0!==n.pending)return n.last_flush=-1,J;t=0,r-=f}let f=new Uint8Array(n.gzhead.extra);n.pending_buf.set(f.subarray(n.gzindex,n.gzindex+r),n.pending),n.pending+=r,n.gzhead.hcrc&&n.pending>t&&(e.adler=M(e.adler,n.pending_buf,n.pending-t,t)),n.gzindex=0}n.status=73}if(73===n.status){if(n.gzhead.name){let t,r=n.pending;do{if(n.pending===n.pending_buf_size){if(n.gzhead.hcrc&&n.pending>r&&(e.adler=M(e.adler,n.pending_buf,n.pending-r,r)),He(e),0!==n.pending)return n.last_flush=-1,J;r=0}t=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,ge(n,t)}while(0!==t);n.gzhead.hcrc&&n.pending>r&&(e.adler=M(e.adler,n.pending_buf,n.pending-r,r)),n.gzindex=0}n.status=91}if(91===n.status){if(n.gzhead.comment){let t,r=n.pending;do{if(n.pending===n.pending_buf_size){if(n.gzhead.hcrc&&n.pending>r&&(e.adler=M(e.adler,n.pending_buf,n.pending-r,r)),He(e),0!==n.pending)return n.last_flush=-1,J;r=0}t=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,ge(n,t)}while(0!==t);n.gzhead.hcrc&&n.pending>r&&(e.adler=M(e.adler,n.pending_buf,n.pending-r,r))}n.status=103}if(103===n.status){if(n.gzhead.hcrc){if(n.pending+2>n.pending_buf_size&&(He(e),0!==n.pending))return n.last_flush=-1,J;ge(n,255&e.adler),ge(n,e.adler>>8&255),e.adler=0}if(n.status=Ae,He(e),0!==n.pending)return n.last_flush=-1,J}if(0!==e.avail_in||0!==n.lookahead||t!==Y&&n.status!==de){let r=0===n.level?ze(n,t):n.strategy===fe?((e,t)=>{let n;for(;;){if(0===e.lookahead&&(be(e),0===e.lookahead)){if(t===Y)return 1;break}if(e.match_length=0,n=F(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(Xe(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===q?(Xe(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(Xe(e,!1),0===e.strm.avail_out)?1:2})(n,t):n.strategy===ie?((e,t)=>{let n,r,f,i;const o=e.window;for(;;){if(e.lookahead<=ue){if(be(e),e.lookahead<=ue&&t===Y)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=3&&e.strstart>0&&(f=e.strstart-1,r=o[f],r===o[++f]&&r===o[++f]&&r===o[++f])){i=e.strstart+ue;do{}while(r===o[++f]&&r===o[++f]&&r===o[++f]&&r===o[++f]&&r===o[++f]&&r===o[++f]&&r===o[++f]&&r===o[++f]&&f<i);e.match_length=ue-(i-f),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=3?(n=F(e,1,e.match_length-3),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=F(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(Xe(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===q?(Xe(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(Xe(e,!1),0===e.strm.avail_out)?1:2})(n,t):Te[n.level].func(n,t);if(3!==r&&4!==r||(n.status=de),1===r||3===r)return 0===e.avail_out&&(n.last_flush=-1),J;if(2===r&&(t===W?G(n):t!==K&&(C(n,0,0,!1),t===Z&&(we(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),He(e),0===e.avail_out))return n.last_flush=-1,J}return t!==q?J:n.wrap<=0?_:(2===n.wrap?(ge(n,255&e.adler),ge(n,e.adler>>8&255),ge(n,e.adler>>16&255),ge(n,e.adler>>24&255),ge(n,255&e.total_in),ge(n,e.total_in>>8&255),ge(n,e.total_in>>16&255),ge(n,e.total_in>>24&255)):(pe(n,e.adler>>>16),pe(n,65535&e.adler)),He(e),n.wrap>0&&(n.wrap=-n.wrap),0!==n.pending?J:_)},Ve=e=>{if(Ie(e))return $;const t=e.state.status;return e.state=null,t===Ae?ve(e,ee):J},Se=(e,t)=>{let n=t.length;if(Ie(e))return $;const r=e.state,f=r.wrap;if(2===f||1===f&&r.status!==he||r.lookahead)return $;if(1===f&&(e.adler=B(e.adler,t,n,0)),r.wrap=0,n>=r.w_size){0===f&&(we(r.head),r.strstart=0,r.block_start=0,r.insert=0);let e=new Uint8Array(r.w_size);e.set(t.subarray(n-r.w_size,n),0),t=e,n=r.w_size}const i=e.avail_in,o=e.next_in,s=e.input;for(e.avail_in=n,e.next_in=0,e.input=t,be(r);r.lookahead>=3;){let e=r.strstart,t=r.lookahead-2;do{r.ins_h=De(r,r.ins_h,r.window[e+3-1]),r.prev[e&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=e,e++}while(--t);r.strstart=e,r.lookahead=2,be(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=2,r.match_available=0,e.next_in=o,e.input=s,e.avail_in=i,r.wrap=f,J};const Ce=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var Ue=function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const n=t.shift();if(n){if("object"!=typeof n)throw new TypeError(n+"must be non-object");for(const t in n)Ce(n,t)&&(e[t]=n[t])}}return e},Fe=e=>{let t=0;for(let n=0,r=e.length;n<r;n++)t+=e[n].length;const n=new Uint8Array(t);for(let t=0,r=0,f=e.length;t<f;t++){let f=e[t];n.set(f,r),r+=f.length}return n};let Ge=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){Ge=!1}const Ye=new Uint8Array(256);for(let e=0;e<256;e++)Ye[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;Ye[254]=Ye[254]=1;var We=e=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,n,r,f,i,o=e.length,s=0;for(f=0;f<o;f++)n=e.charCodeAt(f),55296==(64512&n)&&f+1<o&&(r=e.charCodeAt(f+1),56320==(64512&r)&&(n=65536+(n-55296<<10)+(r-56320),f++)),s+=n<128?1:n<2048?2:n<65536?3:4;for(t=new Uint8Array(s),i=0,f=0;i<s;f++)n=e.charCodeAt(f),55296==(64512&n)&&f+1<o&&(r=e.charCodeAt(f+1),56320==(64512&r)&&(n=65536+(n-55296<<10)+(r-56320),f++)),n<128?t[i++]=n:n<2048?(t[i++]=192|n>>>6,t[i++]=128|63&n):n<65536?(t[i++]=224|n>>>12,t[i++]=128|n>>>6&63,t[i++]=128|63&n):(t[i++]=240|n>>>18,t[i++]=128|n>>>12&63,t[i++]=128|n>>>6&63,t[i++]=128|63&n);return t},Ze=(e,t)=>{const n=t||e.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let r,f;const i=new Array(2*n);for(f=0,r=0;r<n;){let t=e[r++];if(t<128){i[f++]=t;continue}let o=Ye[t];if(o>4)i[f++]=65533,r+=o-1;else{for(t&=2===o?31:3===o?15:7;o>1&&r<n;)t=t<<6|63&e[r++],o--;o>1?i[f++]=65533:t<65536?i[f++]=t:(t-=65536,i[f++]=55296|t>>10&1023,i[f++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&Ge)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let n="";for(let r=0;r<t;r++)n+=String.fromCharCode(e[r]);return n})(i,f)},qe=(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let n=t-1;for(;n>=0&&128==(192&e[n]);)n--;return n<0||0===n?t:n+Ye[e[n]]>t?n:t},Ke=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};const Je=Object.prototype.toString,{Z_NO_FLUSH:_e,Z_SYNC_FLUSH:$e,Z_FULL_FLUSH:et,Z_FINISH:tt,Z_OK:nt,Z_STREAM_END:rt,Z_DEFAULT_COMPRESSION:ft,Z_DEFAULT_STRATEGY:it,Z_DEFLATED:ot}=V;function st(e){this.options=Ue({level:ft,method:ot,chunkSize:16384,windowBits:15,memLevel:8,strategy:it},e||{});let t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Ke,this.strm.avail_out=0;let n=Re(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(n!==nt)throw new Error(N[n]);if(t.header&&Me(this.strm,t.header),t.dictionary){let e;if(e="string"==typeof t.dictionary?We(t.dictionary):"[object ArrayBuffer]"===Je.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,n=Se(this.strm,e),n!==nt)throw new Error(N[n]);this._dict_set=!0}}function at(e,t){const n=new st(t);if(n.push(e,!0),n.err)throw n.msg||N[n.err];return n.result}st.prototype.push=function(e,t){const n=this.strm,r=this.options.chunkSize;let f,i;if(this.ended)return!1;for(i=t===~~t?t:!0===t?tt:_e,"string"==typeof e?n.input=We(e):"[object ArrayBuffer]"===Je.call(e)?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;;)if(0===n.avail_out&&(n.output=new Uint8Array(r),n.next_out=0,n.avail_out=r),(i===$e||i===et)&&n.avail_out<=6)this.onData(n.output.subarray(0,n.next_out)),n.avail_out=0;else{if(f=Ne(n,i),f===rt)return n.next_out>0&&this.onData(n.output.subarray(0,n.next_out)),f=Ve(this.strm),this.onEnd(f),this.ended=!0,f===nt;if(0!==n.avail_out){if(i>0&&n.next_out>0)this.onData(n.output.subarray(0,n.next_out)),n.avail_out=0;else if(0===n.avail_in)break}else this.onData(n.output)}return!0},st.prototype.onData=function(e){this.chunks.push(e)},st.prototype.onEnd=function(e){e===nt&&(this.result=Fe(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var lt={Deflate:st,deflate:at,deflateRaw:function(e,t){return(t=t||{}).raw=!0,at(e,t)},gzip:function(e,t){return(t=t||{}).gzip=!0,at(e,t)},constants:V};const ut=16209;var ct=function(e,t){let n,r,f,i,o,s,a,l,u,c,h,A,d,v,P,w,y,D,H,X,g,p,O,m;const b=e.state;n=e.next_in,O=e.input,r=n+(e.avail_in-5),f=e.next_out,m=e.output,i=f-(t-e.avail_out),o=f+(e.avail_out-257),s=b.dmax,a=b.wsize,l=b.whave,u=b.wnext,c=b.window,h=b.hold,A=b.bits,d=b.lencode,v=b.distcode,P=(1<<b.lenbits)-1,w=(1<<b.distbits)-1;e:do{A<15&&(h+=O[n++]<<A,A+=8,h+=O[n++]<<A,A+=8),y=d[h&P];t:for(;;){if(D=y>>>24,h>>>=D,A-=D,D=y>>>16&255,0===D)m[f++]=65535&y;else{if(!(16&D)){if(0==(64&D)){y=d[(65535&y)+(h&(1<<D)-1)];continue t}if(32&D){b.mode=16191;break e}e.msg="invalid literal/length code",b.mode=ut;break e}H=65535&y,D&=15,D&&(A<D&&(h+=O[n++]<<A,A+=8),H+=h&(1<<D)-1,h>>>=D,A-=D),A<15&&(h+=O[n++]<<A,A+=8,h+=O[n++]<<A,A+=8),y=v[h&w];n:for(;;){if(D=y>>>24,h>>>=D,A-=D,D=y>>>16&255,!(16&D)){if(0==(64&D)){y=v[(65535&y)+(h&(1<<D)-1)];continue n}e.msg="invalid distance code",b.mode=ut;break e}if(X=65535&y,D&=15,A<D&&(h+=O[n++]<<A,A+=8,A<D&&(h+=O[n++]<<A,A+=8)),X+=h&(1<<D)-1,X>s){e.msg="invalid distance too far back",b.mode=ut;break e}if(h>>>=D,A-=D,D=f-i,X>D){if(D=X-D,D>l&&b.sane){e.msg="invalid distance too far back",b.mode=ut;break e}if(g=0,p=c,0===u){if(g+=a-D,D<H){H-=D;do{m[f++]=c[g++]}while(--D);g=f-X,p=m}}else if(u<D){if(g+=a+u-D,D-=u,D<H){H-=D;do{m[f++]=c[g++]}while(--D);if(g=0,u<H){D=u,H-=D;do{m[f++]=c[g++]}while(--D);g=f-X,p=m}}}else if(g+=u-D,D<H){H-=D;do{m[f++]=c[g++]}while(--D);g=f-X,p=m}for(;H>2;)m[f++]=p[g++],m[f++]=p[g++],m[f++]=p[g++],H-=3;H&&(m[f++]=p[g++],H>1&&(m[f++]=p[g++]))}else{g=f-X;do{m[f++]=m[g++],m[f++]=m[g++],m[f++]=m[g++],H-=3}while(H>2);H&&(m[f++]=m[g++],H>1&&(m[f++]=m[g++]))}break}}break}}while(n<r&&f<o);H=A>>3,n-=H,A-=H<<3,h&=(1<<A)-1,e.next_in=n,e.next_out=f,e.avail_in=n<r?r-n+5:5-(n-r),e.avail_out=f<o?o-f+257:257-(f-o),b.hold=h,b.bits=A};const ht=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),At=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),dt=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),vt=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var Pt=(e,t,n,r,f,i,o,s)=>{const a=s.bits;let l,u,c,h,A,d,v=0,P=0,w=0,y=0,D=0,H=0,X=0,g=0,p=0,O=0,m=null;const b=new Uint16Array(16),z=new Uint16Array(16);let L,j,x,T=null;for(v=0;v<=15;v++)b[v]=0;for(P=0;P<r;P++)b[t[n+P]]++;for(D=a,y=15;y>=1&&0===b[y];y--);if(D>y&&(D=y),0===y)return f[i++]=20971520,f[i++]=20971520,s.bits=1,0;for(w=1;w<y&&0===b[w];w++);for(D<w&&(D=w),g=1,v=1;v<=15;v++)if(g<<=1,g-=b[v],g<0)return-1;if(g>0&&(0===e||1!==y))return-1;for(z[1]=0,v=1;v<15;v++)z[v+1]=z[v]+b[v];for(P=0;P<r;P++)0!==t[n+P]&&(o[z[t[n+P]]++]=P);if(0===e?(m=T=o,d=20):1===e?(m=ht,T=At,d=257):(m=dt,T=vt,d=0),O=0,P=0,v=w,A=i,H=D,X=0,c=-1,p=1<<D,h=p-1,1===e&&p>852||2===e&&p>592)return 1;for(;;){L=v-X,o[P]+1<d?(j=0,x=o[P]):o[P]>=d?(j=T[o[P]-d],x=m[o[P]-d]):(j=96,x=0),l=1<<v-X,u=1<<H,w=u;do{u-=l,f[A+(O>>X)+u]=L<<24|j<<16|x|0}while(0!==u);for(l=1<<v-1;O&l;)l>>=1;if(0!==l?(O&=l-1,O+=l):O=0,P++,0==--b[v]){if(v===y)break;v=t[n+o[P]]}if(v>D&&(O&h)!==c){for(0===X&&(X=D),A+=w,H=v-X,g=1<<H;H+X<y&&(g-=b[H+X],!(g<=0));)H++,g<<=1;if(p+=1<<H,1===e&&p>852||2===e&&p>592)return 1;c=O&h,f[c]=D<<24|H<<16|A-i|0}}return 0!==O&&(f[A+O]=v-X<<24|64<<16|0),s.bits=D,0};const{Z_FINISH:wt,Z_BLOCK:yt,Z_TREES:Dt,Z_OK:Ht,Z_STREAM_END:Xt,Z_NEED_DICT:gt,Z_STREAM_ERROR:pt,Z_DATA_ERROR:Ot,Z_MEM_ERROR:mt,Z_BUF_ERROR:bt,Z_DEFLATED:zt}=V,Lt=16180,jt=16190,xt=16191,Tt=16192,kt=16194,It=16199,Qt=16200,Et=16206,Bt=16209,Rt=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function Mt(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const Nt=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.mode<Lt||t.mode>16211?1:0},Vt=e=>{if(Nt(e))return pt;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=Lt,t.last=0,t.havedict=0,t.flags=-1,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,Ht},St=e=>{if(Nt(e))return pt;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,Vt(e)},Ct=(e,t)=>{let n;if(Nt(e))return pt;const r=e.state;return t<0?(n=0,t=-t):(n=5+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?pt:(null!==r.window&&r.wbits!==t&&(r.window=null),r.wrap=n,r.wbits=t,St(e))},Ut=(e,t)=>{if(!e)return pt;const n=new Mt;e.state=n,n.strm=e,n.window=null,n.mode=Lt;const r=Ct(e,t);return r!==Ht&&(e.state=null),r};let Ft,Gt,Yt=!0;const Wt=e=>{if(Yt){Ft=new Int32Array(512),Gt=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(Pt(1,e.lens,0,288,Ft,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;Pt(2,e.lens,0,32,Gt,0,e.work,{bits:5}),Yt=!1}e.lencode=Ft,e.lenbits=9,e.distcode=Gt,e.distbits=5},Zt=(e,t,n,r)=>{let f;const i=e.state;return null===i.window&&(i.wsize=1<<i.wbits,i.wnext=0,i.whave=0,i.window=new Uint8Array(i.wsize)),r>=i.wsize?(i.window.set(t.subarray(n-i.wsize,n),0),i.wnext=0,i.whave=i.wsize):(f=i.wsize-i.wnext,f>r&&(f=r),i.window.set(t.subarray(n-r,n-r+f),i.wnext),(r-=f)?(i.window.set(t.subarray(n-r,n),0),i.wnext=r,i.whave=i.wsize):(i.wnext+=f,i.wnext===i.wsize&&(i.wnext=0),i.whave<i.wsize&&(i.whave+=f))),0};var qt=St,Kt=Ut,Jt=(e,t)=>{let n,r,f,i,o,s,a,l,u,c,h,A,d,v,P,w,y,D,H,X,g,p,O=0;const m=new Uint8Array(4);let b,z;const L=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(Nt(e)||!e.output||!e.input&&0!==e.avail_in)return pt;n=e.state,n.mode===xt&&(n.mode=Tt),o=e.next_out,f=e.output,a=e.avail_out,i=e.next_in,r=e.input,s=e.avail_in,l=n.hold,u=n.bits,c=s,h=a,p=Ht;e:for(;;)switch(n.mode){case Lt:if(0===n.wrap){n.mode=Tt;break}for(;u<16;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}if(2&n.wrap&&35615===l){0===n.wbits&&(n.wbits=15),n.check=0,m[0]=255&l,m[1]=l>>>8&255,n.check=M(n.check,m,2,0),l=0,u=0,n.mode=16181;break}if(n.head&&(n.head.done=!1),!(1&n.wrap)||(((255&l)<<8)+(l>>8))%31){e.msg="incorrect header check",n.mode=Bt;break}if((15&l)!==zt){e.msg="unknown compression method",n.mode=Bt;break}if(l>>>=4,u-=4,g=8+(15&l),0===n.wbits&&(n.wbits=g),g>15||g>n.wbits){e.msg="invalid window size",n.mode=Bt;break}n.dmax=1<<n.wbits,n.flags=0,e.adler=n.check=1,n.mode=512&l?16189:xt,l=0,u=0;break;case 16181:for(;u<16;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}if(n.flags=l,(255&n.flags)!==zt){e.msg="unknown compression method",n.mode=Bt;break}if(57344&n.flags){e.msg="unknown header flags set",n.mode=Bt;break}n.head&&(n.head.text=l>>8&1),512&n.flags&&4&n.wrap&&(m[0]=255&l,m[1]=l>>>8&255,n.check=M(n.check,m,2,0)),l=0,u=0,n.mode=16182;case 16182:for(;u<32;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}n.head&&(n.head.time=l),512&n.flags&&4&n.wrap&&(m[0]=255&l,m[1]=l>>>8&255,m[2]=l>>>16&255,m[3]=l>>>24&255,n.check=M(n.check,m,4,0)),l=0,u=0,n.mode=16183;case 16183:for(;u<16;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}n.head&&(n.head.xflags=255&l,n.head.os=l>>8),512&n.flags&&4&n.wrap&&(m[0]=255&l,m[1]=l>>>8&255,n.check=M(n.check,m,2,0)),l=0,u=0,n.mode=16184;case 16184:if(1024&n.flags){for(;u<16;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}n.length=l,n.head&&(n.head.extra_len=l),512&n.flags&&4&n.wrap&&(m[0]=255&l,m[1]=l>>>8&255,n.check=M(n.check,m,2,0)),l=0,u=0}else n.head&&(n.head.extra=null);n.mode=16185;case 16185:if(1024&n.flags&&(A=n.length,A>s&&(A=s),A&&(n.head&&(g=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Uint8Array(n.head.extra_len)),n.head.extra.set(r.subarray(i,i+A),g)),512&n.flags&&4&n.wrap&&(n.check=M(n.check,r,A,i)),s-=A,i+=A,n.length-=A),n.length))break e;n.length=0,n.mode=16186;case 16186:if(2048&n.flags){if(0===s)break e;A=0;do{g=r[i+A++],n.head&&g&&n.length<65536&&(n.head.name+=String.fromCharCode(g))}while(g&&A<s);if(512&n.flags&&4&n.wrap&&(n.check=M(n.check,r,A,i)),s-=A,i+=A,g)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=16187;case 16187:if(4096&n.flags){if(0===s)break e;A=0;do{g=r[i+A++],n.head&&g&&n.length<65536&&(n.head.comment+=String.fromCharCode(g))}while(g&&A<s);if(512&n.flags&&4&n.wrap&&(n.check=M(n.check,r,A,i)),s-=A,i+=A,g)break e}else n.head&&(n.head.comment=null);n.mode=16188;case 16188:if(512&n.flags){for(;u<16;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}if(4&n.wrap&&l!==(65535&n.check)){e.msg="header crc mismatch",n.mode=Bt;break}l=0,u=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=xt;break;case 16189:for(;u<32;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}e.adler=n.check=Rt(l),l=0,u=0,n.mode=jt;case jt:if(0===n.havedict)return e.next_out=o,e.avail_out=a,e.next_in=i,e.avail_in=s,n.hold=l,n.bits=u,gt;e.adler=n.check=1,n.mode=xt;case xt:if(t===yt||t===Dt)break e;case Tt:if(n.last){l>>>=7&u,u-=7&u,n.mode=Et;break}for(;u<3;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}switch(n.last=1&l,l>>>=1,u-=1,3&l){case 0:n.mode=16193;break;case 1:if(Wt(n),n.mode=It,t===Dt){l>>>=2,u-=2;break e}break;case 2:n.mode=16196;break;case 3:e.msg="invalid block type",n.mode=Bt}l>>>=2,u-=2;break;case 16193:for(l>>>=7&u,u-=7&u;u<32;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}if((65535&l)!=(l>>>16^65535)){e.msg="invalid stored block lengths",n.mode=Bt;break}if(n.length=65535&l,l=0,u=0,n.mode=kt,t===Dt)break e;case kt:n.mode=16195;case 16195:if(A=n.length,A){if(A>s&&(A=s),A>a&&(A=a),0===A)break e;f.set(r.subarray(i,i+A),o),s-=A,i+=A,a-=A,o+=A,n.length-=A;break}n.mode=xt;break;case 16196:for(;u<14;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}if(n.nlen=257+(31&l),l>>>=5,u-=5,n.ndist=1+(31&l),l>>>=5,u-=5,n.ncode=4+(15&l),l>>>=4,u-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=Bt;break}n.have=0,n.mode=16197;case 16197:for(;n.have<n.ncode;){for(;u<3;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}n.lens[L[n.have++]]=7&l,l>>>=3,u-=3}for(;n.have<19;)n.lens[L[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,b={bits:n.lenbits},p=Pt(0,n.lens,0,19,n.lencode,0,n.work,b),n.lenbits=b.bits,p){e.msg="invalid code lengths set",n.mode=Bt;break}n.have=0,n.mode=16198;case 16198:for(;n.have<n.nlen+n.ndist;){for(;O=n.lencode[l&(1<<n.lenbits)-1],P=O>>>24,w=O>>>16&255,y=65535&O,!(P<=u);){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}if(y<16)l>>>=P,u-=P,n.lens[n.have++]=y;else{if(16===y){for(z=P+2;u<z;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}if(l>>>=P,u-=P,0===n.have){e.msg="invalid bit length repeat",n.mode=Bt;break}g=n.lens[n.have-1],A=3+(3&l),l>>>=2,u-=2}else if(17===y){for(z=P+3;u<z;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}l>>>=P,u-=P,g=0,A=3+(7&l),l>>>=3,u-=3}else{for(z=P+7;u<z;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}l>>>=P,u-=P,g=0,A=11+(127&l),l>>>=7,u-=7}if(n.have+A>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=Bt;break}for(;A--;)n.lens[n.have++]=g}}if(n.mode===Bt)break;if(0===n.lens[256]){e.msg="invalid code -- missing end-of-block",n.mode=Bt;break}if(n.lenbits=9,b={bits:n.lenbits},p=Pt(1,n.lens,0,n.nlen,n.lencode,0,n.work,b),n.lenbits=b.bits,p){e.msg="invalid literal/lengths set",n.mode=Bt;break}if(n.distbits=6,n.distcode=n.distdyn,b={bits:n.distbits},p=Pt(2,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,b),n.distbits=b.bits,p){e.msg="invalid distances set",n.mode=Bt;break}if(n.mode=It,t===Dt)break e;case It:n.mode=Qt;case Qt:if(s>=6&&a>=258){e.next_out=o,e.avail_out=a,e.next_in=i,e.avail_in=s,n.hold=l,n.bits=u,ct(e,h),o=e.next_out,f=e.output,a=e.avail_out,i=e.next_in,r=e.input,s=e.avail_in,l=n.hold,u=n.bits,n.mode===xt&&(n.back=-1);break}for(n.back=0;O=n.lencode[l&(1<<n.lenbits)-1],P=O>>>24,w=O>>>16&255,y=65535&O,!(P<=u);){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}if(w&&0==(240&w)){for(D=P,H=w,X=y;O=n.lencode[X+((l&(1<<D+H)-1)>>D)],P=O>>>24,w=O>>>16&255,y=65535&O,!(D+P<=u);){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}l>>>=D,u-=D,n.back+=D}if(l>>>=P,u-=P,n.back+=P,n.length=y,0===w){n.mode=16205;break}if(32&w){n.back=-1,n.mode=xt;break}if(64&w){e.msg="invalid literal/length code",n.mode=Bt;break}n.extra=15&w,n.mode=16201;case 16201:if(n.extra){for(z=n.extra;u<z;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}n.length+=l&(1<<n.extra)-1,l>>>=n.extra,u-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=16202;case 16202:for(;O=n.distcode[l&(1<<n.distbits)-1],P=O>>>24,w=O>>>16&255,y=65535&O,!(P<=u);){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}if(0==(240&w)){for(D=P,H=w,X=y;O=n.distcode[X+((l&(1<<D+H)-1)>>D)],P=O>>>24,w=O>>>16&255,y=65535&O,!(D+P<=u);){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}l>>>=D,u-=D,n.back+=D}if(l>>>=P,u-=P,n.back+=P,64&w){e.msg="invalid distance code",n.mode=Bt;break}n.offset=y,n.extra=15&w,n.mode=16203;case 16203:if(n.extra){for(z=n.extra;u<z;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}n.offset+=l&(1<<n.extra)-1,l>>>=n.extra,u-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=Bt;break}n.mode=16204;case 16204:if(0===a)break e;if(A=h-a,n.offset>A){if(A=n.offset-A,A>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=Bt;break}A>n.wnext?(A-=n.wnext,d=n.wsize-A):d=n.wnext-A,A>n.length&&(A=n.length),v=n.window}else v=f,d=o-n.offset,A=n.length;A>a&&(A=a),a-=A,n.length-=A;do{f[o++]=v[d++]}while(--A);0===n.length&&(n.mode=Qt);break;case 16205:if(0===a)break e;f[o++]=n.length,a--,n.mode=Qt;break;case Et:if(n.wrap){for(;u<32;){if(0===s)break e;s--,l|=r[i++]<<u,u+=8}if(h-=a,e.total_out+=h,n.total+=h,4&n.wrap&&h&&(e.adler=n.check=n.flags?M(n.check,f,h,o-h):B(n.check,f,h,o-h)),h=a,4&n.wrap&&(n.flags?l:Rt(l))!==n.check){e.msg="incorrect data check",n.mode=Bt;break}l=0,u=0}n.mode=16207;case 16207:if(n.wrap&&n.flags){for(;u<32;){if(0===s)break e;s--,l+=r[i++]<<u,u+=8}if(4&n.wrap&&l!==(4294967295&n.total)){e.msg="incorrect length check",n.mode=Bt;break}l=0,u=0}n.mode=16208;case 16208:p=Xt;break e;case Bt:p=Ot;break e;case 16210:return mt;default:return pt}return e.next_out=o,e.avail_out=a,e.next_in=i,e.avail_in=s,n.hold=l,n.bits=u,(n.wsize||h!==e.avail_out&&n.mode<Bt&&(n.mode<Et||t!==wt))&&Zt(e,e.output,e.next_out,h-e.avail_out),c-=e.avail_in,h-=e.avail_out,e.total_in+=c,e.total_out+=h,n.total+=h,4&n.wrap&&h&&(e.adler=n.check=n.flags?M(n.check,f,h,e.next_out-h):B(n.check,f,h,e.next_out-h)),e.data_type=n.bits+(n.last?64:0)+(n.mode===xt?128:0)+(n.mode===It||n.mode===kt?256:0),(0===c&&0===h||t===wt)&&p===Ht&&(p=bt),p},_t=e=>{if(Nt(e))return pt;let t=e.state;return t.window&&(t.window=null),e.state=null,Ht},$t=(e,t)=>{if(Nt(e))return pt;const n=e.state;return 0==(2&n.wrap)?pt:(n.head=t,t.done=!1,Ht)},en=(e,t)=>{const n=t.length;let r,f,i;return Nt(e)?pt:(r=e.state,0!==r.wrap&&r.mode!==jt?pt:r.mode===jt&&(f=1,f=B(f,t,n,0),f!==r.check)?Ot:(i=Zt(e,t,n,n),i?(r.mode=16210,mt):(r.havedict=1,Ht)))},tn=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1};const nn=Object.prototype.toString,{Z_NO_FLUSH:rn,Z_FINISH:fn,Z_OK:on,Z_STREAM_END:sn,Z_NEED_DICT:an,Z_STREAM_ERROR:ln,Z_DATA_ERROR:un,Z_MEM_ERROR:cn}=V;function hn(e){this.options=Ue({chunkSize:65536,windowBits:15,to:""},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Ke,this.strm.avail_out=0;let n=Kt(this.strm,t.windowBits);if(n!==on)throw new Error(N[n]);if(this.header=new tn,$t(this.strm,this.header),t.dictionary&&("string"==typeof t.dictionary?t.dictionary=We(t.dictionary):"[object ArrayBuffer]"===nn.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(n=en(this.strm,t.dictionary),n!==on)))throw new Error(N[n])}function An(e,t){const n=new hn(t);if(n.push(e),n.err)throw n.msg||N[n.err];return n.result}hn.prototype.push=function(e,t){const n=this.strm,r=this.options.chunkSize,f=this.options.dictionary;let i,o,s;if(this.ended)return!1;for(o=t===~~t?t:!0===t?fn:rn,"[object ArrayBuffer]"===nn.call(e)?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;;){for(0===n.avail_out&&(n.output=new Uint8Array(r),n.next_out=0,n.avail_out=r),i=Jt(n,o),i===an&&f&&(i=en(n,f),i===on?i=Jt(n,o):i===un&&(i=an));n.avail_in>0&&i===sn&&n.state.wrap>0&&0!==e[n.next_in];)qt(n),i=Jt(n,o);switch(i){case ln:case un:case an:case cn:return this.onEnd(i),this.ended=!0,!1}if(s=n.avail_out,n.next_out&&(0===n.avail_out||i===sn))if("string"===this.options.to){let e=qe(n.output,n.next_out),t=n.next_out-e,f=Ze(n.output,e);n.next_out=t,n.avail_out=r-t,t&&n.output.set(n.output.subarray(e,e+t),0),this.onData(f)}else this.onData(n.output.length===n.next_out?n.output:n.output.subarray(0,n.next_out));if(i!==on||0!==s){if(i===sn)return i=_t(this.strm),this.onEnd(i),this.ended=!0,!0;if(0===n.avail_in)break}}return!0},hn.prototype.onData=function(e){this.chunks.push(e)},hn.prototype.onEnd=function(e){e===on&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=Fe(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var dn={Inflate:hn,inflate:An,inflateRaw:function(e,t){return(t=t||{}).raw=!0,An(e,t)},ungzip:An,constants:V};const{Deflate:vn,deflate:Pn,deflateRaw:wn,gzip:yn}=lt,{Inflate:Dn,inflate:Hn,inflateRaw:Xn,ungzip:gn}=dn;var pn=Hn}},t={};function n(r){var f=t[r];if(void 0!==f)return f.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};(()=>{n.d(r,{i6:()=>f,Gk:()=>Be,SK:()=>Ut,Ox:()=>Ct,go:()=>Ee});var e=n(986),t=n.n(e);class f{constructor(e){this.cuboids=e}async create3DTilesetJson(e){const t=this.calculateRegion();void 0===e&&(e=await this.createI3dmDataUrl());const n={asset:{version:"1.0"},properties:{},root:{boundingVolume:{region:[]},geometricError:1e3,refine:"ADD",children:[]}};return n.root.boundingVolume.region=t,n.root.children.push({boundingVolume:{region:t},geometricError:0,content:{uri:e}}),n}static async toDataUrl(e,t){return new Promise((n=>{const r=new FileReader;r.addEventListener("load",(()=>n(r.result)),!1),r.readAsDataURL(new Blob([e],{type:t}))}))}async create3DTilesetDataUrl(e){const t=await this.create3DTilesetJson(e);return await f.toDataUrl(JSON.stringify(t),"application/json")}calculateRegion(){if(!this.cuboids.length)return[0,0,0,0,0,0];const e=[Math.PI,Math.PI/2,-Math.PI,-Math.PI/2,1/0,0];for(const{region:t}of this.cuboids)e[0]=Math.min(e[0],t[0]),e[1]=Math.min(e[1],t[1]),e[2]=Math.max(e[2],t[2]),e[3]=Math.max(e[3],t[3]),e[4]=Math.min(e[4],t[4]),e[5]=Math.max(e[5],t[5]);return e}async createI3dmBinary(){const{featureTableJson:e,featureTableBinary:n}=this.createFeatureTable(),{batchTableJson:r}=this.createBatchTable(),f=32+e.byteLength+n.byteLength+r.byteLength+t().byteLength,i=new DataView(new ArrayBuffer(f));let o=0;return i.setUint32(o,1835283305,!0),o+=4,i.setUint32(o,1,!0),o+=4,i.setUint32(o,f,!0),o+=4,i.setUint32(o,e.byteLength,!0),o+=4,i.setUint32(o,n.byteLength,!0),o+=4,i.setUint32(o,r.byteLength,!0),o+=4,i.setUint32(o,0,!0),o+=4,i.setUint32(o,1,!0),o+=4,new Uint8Array(i.buffer,o).set(new Uint8Array(e)),o+=e.byteLength,new Uint8Array(i.buffer,o).set(new Uint8Array(n)),o+=n.byteLength,new Uint8Array(i.buffer,o).set(new Uint8Array(r)),o+=r.byteLength,new Uint8Array(i.buffer,o).set(new Uint8Array(t())),i.buffer}async createI3dmDataUrl(){const e=await this.createI3dmBinary();return await f.toDataUrl(e,"application/octet-stream")}createFeatureTable(){const e=12*this.cuboids.length,t=12*this.cuboids.length,n=0+e,r=4*this.cuboids.length,i=n+t,o=f.createPaddedBinary((new TextEncoder).encode(JSON.stringify({INSTANCES_LENGTH:this.cuboids.length,EAST_NORTH_UP:!0,POSITION:{byteOffset:0},SCALE_NON_UNIFORM:{byteOffset:n},BATCH_ID:{componentType:"UNSIGNED_INT",byteOffset:i}})),32),s=f.createPaddedBinary(new ArrayBuffer(e+t+r),0),a=new DataView(s,0,e),l=new DataView(s,n,t),u=new DataView(s,i,r);for(const[e,{location:t,scale:n}]of Object.entries(this.cuboids).map((([e,t])=>[Number(e),t])))a.setFloat32(12*e,t.x,!0),a.setFloat32(12*e+4,t.y,!0),a.setFloat32(12*e+8,t.z,!0),l.setFloat32(12*e,n.x,!0),l.setFloat32(12*e+4,n.y,!0),l.setFloat32(12*e+8,n.z,!0),u.setUint32(4*e,e,!0);return{featureTableJson:o,featureTableBinary:s}}createBatchTable(){const e={};for(const[t,{metadata:n}]of Object.entries(this.cuboids).map((([e,t])=>[Number(e),t])))if(n)for(const[r,f]of Object.entries(n))Object.prototype.hasOwnProperty.call(e,r)||(e[r]=new Array(this.cuboids.length).fill(null)),e[r][t]=f;return{batchTableJson:f.createPaddedBinary((new TextEncoder).encode(JSON.stringify(e)),32)}}static createPaddedBinary(e,t,n=8){const r=n-e.byteLength%n;if(r===n)return e;const f=new Uint8Array(e.byteLength+r);f.set(new Uint8Array(e));const i=new Uint8Array(r);return i.fill(t),f.set(i,e.byteLength),f.buffer}}function i(e){return(t,...n)=>s(e,t,n)}function o(e,t){return i(c(e,t).get)}const{apply:s,construct:a,defineProperty:l,get:u,getOwnPropertyDescriptor:c,getPrototypeOf:h,has:A,ownKeys:d,set:v,setPrototypeOf:P}=Reflect,{MAX_SAFE_INTEGER:w,isFinite:y,isNaN:D}=(Proxy,Number),{iterator:H,species:X,toStringTag:g,for:p}=Symbol,O=Object,{create:m,defineProperty:b,freeze:z,is:L}=O,j=O.prototype,x=(j.__lookupGetter__&&i(j.__lookupGetter__),O.hasOwn||i(j.hasOwnProperty),Array),T=(x.isArray,x.prototype),k=(i(T.join),i(T.push),i(T.toLocaleString),T[H]),I=i(k),Q=(Math.trunc,ArrayBuffer),E=(Q.isView,Q.prototype),B=(i(E.slice),o(E,"byteLength"),"undefined"!=typeof SharedArrayBuffer?SharedArrayBuffer:null),R=(B&&o(B.prototype,"byteLength"),h(Uint8Array)),M=(R.from,R.prototype),N=(M[H],i(M.keys),i(M.values),i(M.entries),i(M.set),i(M.reverse),i(M.fill),i(M.copyWithin),i(M.sort),i(M.slice),i(M.subarray),o(M,"buffer"),o(M,"byteOffset"),o(M,"length"),o(M,g),Uint16Array,Uint32Array),V=Float32Array,S=h([][H]()),C=i(S.next),U=i(function*(){}().next),F=h(S),G=DataView.prototype,Y=i(G.getUint16),W=(i(G.setUint16),TypeError,RangeError,WeakSet.prototype),Z=(i(W.add),i(W.has),WeakMap),q=Z.prototype,K=i(q.get),J=(i(q.has),i(q.set)),_=new Z,$=m(null,{next:{value:function(){const e=K(_,this);return C(e)}},[H]:{value:function(){return this}}}),ee=new Z,te=m(F,{next:{value:function(){const e=K(ee,this);return U(e)},writable:!0,configurable:!0}});for(const e of d(S))"next"!==e&&b(te,e,c(S,e));const ne=new Q(4),re=new V(ne),fe=new N(ne),ie=new N(512),oe=new N(512);for(let e=0;e<256;++e){const t=e-127;t<-27?(ie[e]=0,ie[256|e]=32768,oe[e]=24,oe[256|e]=24):t<-14?(ie[e]=1024>>-t-14,ie[256|e]=1024>>-t-14|32768,oe[e]=-t-1,oe[256|e]=-t-1):t<=15?(ie[e]=t+15<<10,ie[256|e]=t+15<<10|32768,oe[e]=13,oe[256|e]=13):t<128?(ie[e]=31744,ie[256|e]=64512,oe[e]=24,oe[256|e]=24):(ie[e]=31744,ie[256|e]=64512,oe[e]=13,oe[256|e]=13)}const se=new N(2048),ae=new N(64),le=new N(64);for(let e=1;e<1024;++e){let t=e<<13,n=0;for(;0==(8388608&t);)t<<=1,n-=8388608;t&=-8388609,n+=947912704,se[e]=t|n}for(let e=1024;e<2048;++e)se[e]=939524096+(e-1024<<13);for(let e=1;e<31;++e)ae[e]=e<<23;ae[31]=1199570944,ae[32]=2147483648;for(let e=33;e<63;++e)ae[e]=2147483648+(e-32<<23);ae[63]=3347054592;for(let e=1;e<64;++e)32!==e&&(le[e]=1024);function ue(e,t,...n){return function(e){const t=e>>10;return fe[0]=se[le[t]+(1023&e)]+ae[t],re[0]}(Y(e,t,...function(e){if(e[H]===k&&S.next===C)return e;const t=m($);return J(_,t,I(e)),t}(n)))}var ce=n(565),he=n(876),Ae=n(957);const de=new Map;function ve(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>de.set(e,t)))}function Pe(e,t,n,r=1){return new(Object.getPrototypeOf(e).constructor)(t*n*r)}function we(e,t,n){return(1-n)*e+n*t}function ye(e,t,n){let r=0;for(let f=t;f<n;++f)r+=e[f];return r}function De(e,t,n){switch(e){case 1:if(t<=8)return new Uint8Array(n);if(t<=16)return new Uint16Array(n);if(t<=32)return new Uint32Array(n);break;case 2:if(8===t)return new Int8Array(n);if(16===t)return new Int16Array(n);if(32===t)return new Int32Array(n);break;case 3:switch(t){case 16:case 32:return new Float32Array(n);case 64:return new Float64Array(n)}}throw Error("Unsupported data format/bitsPerSample")}ve([void 0,1],(()=>Promise.resolve().then(n.bind(n,206)).then((e=>e.default)))),ve(5,(()=>Promise.resolve().then(n.bind(n,428)).then((e=>e.default)))),ve(6,(()=>{throw new Error("old style JPEG compression is not supported.")})),ve(7,(()=>Promise.resolve().then(n.bind(n,511)).then((e=>e.default)))),ve([8,32946],(()=>Promise.resolve().then(n.bind(n,465)).then((e=>e.default)))),ve(32773,(()=>Promise.resolve().then(n.bind(n,393)).then((e=>e.default)))),ve(34887,(()=>Promise.resolve().then(n.bind(n,498)).then((e=>e.default)))),ve(50001,(()=>Promise.resolve().then(n.bind(n,557)).then((e=>e.default))));class He{constructor(e){this._dataView=new DataView(e)}get buffer(){return this._dataView.buffer}getUint64(e,t){const n=this.getUint32(e,t),r=this.getUint32(e+4,t);let f;if(t){if(f=n+2**32*r,!Number.isSafeInteger(f))throw new Error(`${f} exceeds MAX_SAFE_INTEGER. Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues`);return f}if(f=2**32*n+r,!Number.isSafeInteger(f))throw new Error(`${f} exceeds MAX_SAFE_INTEGER. Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues`);return f}getInt64(e,t){let n=0;const r=(128&this._dataView.getUint8(e+(t?7:0)))>0;let f=!0;for(let i=0;i<8;i++){let o=this._dataView.getUint8(e+(t?i:7-i));r&&(f?0!==o&&(o=255&~(o-1),f=!1):o=255&~o),n+=o*256**i}return r&&(n=-n),n}getUint8(e,t){return this._dataView.getUint8(e,t)}getInt8(e,t){return this._dataView.getInt8(e,t)}getUint16(e,t){return this._dataView.getUint16(e,t)}getInt16(e,t){return this._dataView.getInt16(e,t)}getUint32(e,t){return this._dataView.getUint32(e,t)}getInt32(e,t){return this._dataView.getInt32(e,t)}getFloat16(e,t){return ue(this._dataView,e,t)}getFloat32(e,t){return this._dataView.getFloat32(e,t)}getFloat64(e,t){return this._dataView.getFloat64(e,t)}}class Xe{constructor(e,t,n,r){this._dataView=new DataView(e),this._sliceOffset=t,this._littleEndian=n,this._bigTiff=r}get sliceOffset(){return this._sliceOffset}get sliceTop(){return this._sliceOffset+this.buffer.byteLength}get littleEndian(){return this._littleEndian}get bigTiff(){return this._bigTiff}get buffer(){return this._dataView.buffer}covers(e,t){return this.sliceOffset<=e&&this.sliceTop>=e+t}readUint8(e){return this._dataView.getUint8(e-this._sliceOffset,this._littleEndian)}readInt8(e){return this._dataView.getInt8(e-this._sliceOffset,this._littleEndian)}readUint16(e){return this._dataView.getUint16(e-this._sliceOffset,this._littleEndian)}readInt16(e){return this._dataView.getInt16(e-this._sliceOffset,this._littleEndian)}readUint32(e){return this._dataView.getUint32(e-this._sliceOffset,this._littleEndian)}readInt32(e){return this._dataView.getInt32(e-this._sliceOffset,this._littleEndian)}readFloat32(e){return this._dataView.getFloat32(e-this._sliceOffset,this._littleEndian)}readFloat64(e){return this._dataView.getFloat64(e-this._sliceOffset,this._littleEndian)}readUint64(e){const t=this.readUint32(e),n=this.readUint32(e+4);let r;if(this._littleEndian){if(r=t+2**32*n,!Number.isSafeInteger(r))throw new Error(`${r} exceeds MAX_SAFE_INTEGER. Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues`);return r}if(r=2**32*t+n,!Number.isSafeInteger(r))throw new Error(`${r} exceeds MAX_SAFE_INTEGER. Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues`);return r}readInt64(e){let t=0;const n=(128&this._dataView.getUint8(e+(this._littleEndian?7:0)))>0;let r=!0;for(let f=0;f<8;f++){let i=this._dataView.getUint8(e+(this._littleEndian?f:7-f));n&&(r?0!==i&&(i=255&~(i-1),r=!1):i=255&~i),t+=i*256**f}return n&&(t=-t),t}readOffset(e){return this._bigTiff?this.readUint64(e):this.readUint32(e)}}class ge{async fetch(e,t){return Promise.all(e.map((e=>this.fetchSlice(e,t))))}async fetchSlice(e){throw new Error(`fetching of slice ${e} not possible, not implemented`)}get fileSize(){return null}async close(){}}class pe extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,pe),this.name="AbortError"}}class Oe extends Error{constructor(e,t){super(t),this.errors=e,this.message=t,this.name="AggregateError"}}class me extends ge{constructor(e){super(),this.arrayBuffer=e}fetchSlice(e,t){if(t&&t.aborted)throw new pe("Request aborted");return this.arrayBuffer.slice(e.offset,e.offset+e.length)}}function be(e){switch(e){case Ae.sf.BYTE:case Ae.sf.ASCII:case Ae.sf.SBYTE:case Ae.sf.UNDEFINED:return 1;case Ae.sf.SHORT:case Ae.sf.SSHORT:return 2;case Ae.sf.LONG:case Ae.sf.SLONG:case Ae.sf.FLOAT:case Ae.sf.IFD:return 4;case Ae.sf.RATIONAL:case Ae.sf.SRATIONAL:case Ae.sf.DOUBLE:case Ae.sf.LONG8:case Ae.sf.SLONG8:case Ae.sf.IFD8:return 8;default:throw new RangeError(`Invalid field type: ${e}`)}}function ze(e,t,n,r){let f=null,i=null;const o=be(t);switch(t){case Ae.sf.BYTE:case Ae.sf.ASCII:case Ae.sf.UNDEFINED:f=new Uint8Array(n),i=e.readUint8;break;case Ae.sf.SBYTE:f=new Int8Array(n),i=e.readInt8;break;case Ae.sf.SHORT:f=new Uint16Array(n),i=e.readUint16;break;case Ae.sf.SSHORT:f=new Int16Array(n),i=e.readInt16;break;case Ae.sf.LONG:case Ae.sf.IFD:f=new Uint32Array(n),i=e.readUint32;break;case Ae.sf.SLONG:f=new Int32Array(n),i=e.readInt32;break;case Ae.sf.LONG8:case Ae.sf.IFD8:f=new Array(n),i=e.readUint64;break;case Ae.sf.SLONG8:f=new Array(n),i=e.readInt64;break;case Ae.sf.RATIONAL:f=new Uint32Array(2*n),i=e.readUint32;break;case Ae.sf.SRATIONAL:f=new Int32Array(2*n),i=e.readInt32;break;case Ae.sf.FLOAT:f=new Float32Array(n),i=e.readFloat32;break;case Ae.sf.DOUBLE:f=new Float64Array(n),i=e.readFloat64;break;default:throw new RangeError(`Invalid field type: ${t}`)}if(t!==Ae.sf.RATIONAL&&t!==Ae.sf.SRATIONAL)for(let t=0;t<n;++t)f[t]=i.call(e,r+t*o);else for(let t=0;t<n;t+=2)f[t]=i.call(e,r+t*o),f[t+1]=i.call(e,r+(t*o+4));return t===Ae.sf.ASCII?new TextDecoder("utf-8").decode(f):f}class Le{constructor(e,t,n){this.fileDirectory=e,this.geoKeyDirectory=t,this.nextIFDByteOffset=n}}class je extends Error{constructor(e){super(`No image at index ${e}`),this.index=e}}class xe{async readRasters(e={}){const{window:t,width:n,height:r}=e;let{resX:f,resY:i,bbox:o}=e;const s=await this.getImage();let a=s;const l=await this.getImageCount(),u=s.getBoundingBox();if(t&&o)throw new Error('Both "bbox" and "window" passed.');if(n||r){if(t){const[e,n]=s.getOrigin(),[r,f]=s.getResolution();o=[e+t[0]*r,n+t[1]*f,e+t[2]*r,n+t[3]*f]}const e=o||u;if(n){if(f)throw new Error("Both width and resX passed");f=(e[2]-e[0])/n}if(r){if(i)throw new Error("Both width and resY passed");i=(e[3]-e[1])/r}}if(f||i){const e=[];for(let t=0;t<l;++t){const n=await this.getImage(t),{SubfileType:r,NewSubfileType:f}=n.fileDirectory;(0===t||2===r||1&f)&&e.push(n)}e.sort(((e,t)=>e.getWidth()-t.getWidth()));for(let t=0;t<e.length;++t){const n=e[t],r=(u[2]-u[0])/n.getWidth(),o=(u[3]-u[1])/n.getHeight();if(a=n,f&&f>r||i&&i>o)break}}let c=t;if(o){const[e,t]=s.getOrigin(),[n,r]=a.getResolution(s);c=[Math.round((o[0]-e)/n),Math.round((o[1]-t)/r),Math.round((o[2]-e)/n),Math.round((o[3]-t)/r)],c=[Math.min(c[0],c[2]),Math.min(c[1],c[3]),Math.max(c[0],c[2]),Math.max(c[1],c[3])]}return a.readRasters({...e,window:c})}}class Te extends xe{constructor(e,t,n,r,f={}){super(),this.source=e,this.littleEndian=t,this.bigTiff=n,this.firstIFDOffset=r,this.cache=f.cache||!1,this.ifdRequests=[],this.ghostValues=null}async getSlice(e,t){const n=this.bigTiff?4048:1024;return new Xe((await this.source.fetch([{offset:e,length:void 0!==t?t:n}]))[0],e,this.littleEndian,this.bigTiff)}async parseFileDirectoryAt(e){const t=this.bigTiff?20:12,n=this.bigTiff?8:2;let r=await this.getSlice(e);const f=this.bigTiff?r.readUint64(e):r.readUint16(e),i=f*t+(this.bigTiff?16:6);r.covers(e,i)||(r=await this.getSlice(e,i));const o={};let s=e+(this.bigTiff?8:2);for(let e=0;e<f;s+=t,++e){const e=r.readUint16(s),t=r.readUint16(s+2),n=this.bigTiff?r.readUint64(s+4):r.readUint32(s+4);let f,i;const a=be(t),l=s+(this.bigTiff?12:8);if(a*n<=(this.bigTiff?8:4))f=ze(r,t,n,l);else{const e=r.readOffset(l),i=be(t)*n;f=r.covers(e,i)?ze(r,t,n,e):ze(await this.getSlice(e,i),t,n,e)}i=1===n&&-1===Ae.It.indexOf(e)&&t!==Ae.sf.RATIONAL&&t!==Ae.sf.SRATIONAL?f[0]:f,o[Ae.L[e]]=i}const a=function(e){const t=e.GeoKeyDirectory;if(!t)return null;const n={};for(let r=4;r<=4*t[3];r+=4){const f=Ae.P1[t[r]],i=t[r+1]?Ae.L[t[r+1]]:null,o=t[r+2],s=t[r+3];let a=null;if(i){if(a=e[i],null==a)throw new Error(`Could not get value of geoKey '${f}'.`);"string"==typeof a?a=a.substring(s,s+o-1):a.subarray&&(a=a.subarray(s,s+o),1===o&&(a=a[0]))}else a=s;n[f]=a}return n}(o),l=r.readOffset(e+n+t*f);return new Le(o,a,l)}async requestIFD(e){if(this.ifdRequests[e])return this.ifdRequests[e];if(0===e)return this.ifdRequests[e]=this.parseFileDirectoryAt(this.firstIFDOffset),this.ifdRequests[e];if(!this.ifdRequests[e-1])try{this.ifdRequests[e-1]=this.requestIFD(e-1)}catch(t){if(t instanceof je)throw new je(e);throw t}return this.ifdRequests[e]=(async()=>{const t=await this.ifdRequests[e-1];if(0===t.nextIFDByteOffset)throw new je(e);return this.parseFileDirectoryAt(t.nextIFDByteOffset)})(),this.ifdRequests[e]}async getImage(e=0){const t=await this.requestIFD(e);return new class{constructor(e,t,n,r,f,i){this.fileDirectory=e,this.geoKeys=t,this.dataView=n,this.littleEndian=r,this.tiles=f?{}:null,this.isTiled=!e.StripOffsets;const o=e.PlanarConfiguration;if(this.planarConfiguration=void 0===o?1:o,1!==this.planarConfiguration&&2!==this.planarConfiguration)throw new Error("Invalid planar configuration.");this.source=i}getFileDirectory(){return this.fileDirectory}getGeoKeys(){return this.geoKeys}getWidth(){return this.fileDirectory.ImageWidth}getHeight(){return this.fileDirectory.ImageLength}getSamplesPerPixel(){return void 0!==this.fileDirectory.SamplesPerPixel?this.fileDirectory.SamplesPerPixel:1}getTileWidth(){return this.isTiled?this.fileDirectory.TileWidth:this.getWidth()}getTileHeight(){return this.isTiled?this.fileDirectory.TileLength:void 0!==this.fileDirectory.RowsPerStrip?Math.min(this.fileDirectory.RowsPerStrip,this.getHeight()):this.getHeight()}getBlockWidth(){return this.getTileWidth()}getBlockHeight(e){return this.isTiled||(e+1)*this.getTileHeight()<=this.getHeight()?this.getTileHeight():this.getHeight()-e*this.getTileHeight()}getBytesPerPixel(){let e=0;for(let t=0;t<this.fileDirectory.BitsPerSample.length;++t)e+=this.getSampleByteSize(t);return e}getSampleByteSize(e){if(e>=this.fileDirectory.BitsPerSample.length)throw new RangeError(`Sample index ${e} is out of range.`);return Math.ceil(this.fileDirectory.BitsPerSample[e]/8)}getReaderForSample(e){const t=this.fileDirectory.SampleFormat?this.fileDirectory.SampleFormat[e]:1,n=this.fileDirectory.BitsPerSample[e];switch(t){case 1:if(n<=8)return DataView.prototype.getUint8;if(n<=16)return DataView.prototype.getUint16;if(n<=32)return DataView.prototype.getUint32;break;case 2:if(n<=8)return DataView.prototype.getInt8;if(n<=16)return DataView.prototype.getInt16;if(n<=32)return DataView.prototype.getInt32;break;case 3:switch(n){case 16:return function(e,t){return ue(this,e,t)};case 32:return DataView.prototype.getFloat32;case 64:return DataView.prototype.getFloat64}}throw Error("Unsupported data format/bitsPerSample")}getSampleFormat(e=0){return this.fileDirectory.SampleFormat?this.fileDirectory.SampleFormat[e]:1}getBitsPerSample(e=0){return this.fileDirectory.BitsPerSample[e]}getArrayForSample(e,t){return De(this.getSampleFormat(e),this.getBitsPerSample(e),t)}async getTileOrStrip(e,t,n,r,f){const i=Math.ceil(this.getWidth()/this.getTileWidth()),o=Math.ceil(this.getHeight()/this.getTileHeight());let s;const{tiles:a}=this;let l,u;1===this.planarConfiguration?s=t*i+e:2===this.planarConfiguration&&(s=n*i*o+t*i+e),this.isTiled?(l=this.fileDirectory.TileOffsets[s],u=this.fileDirectory.TileByteCounts[s]):(l=this.fileDirectory.StripOffsets[s],u=this.fileDirectory.StripByteCounts[s]);const c=(await this.source.fetch([{offset:l,length:u}],f))[0];let h;return null!==a&&a[s]?h=a[s]:(h=(async()=>{let e=await r.decode(this.fileDirectory,c);const n=this.getSampleFormat(),f=this.getBitsPerSample();return function(e,t){return(1!==e&&2!==e||!(t<=32)||t%8!=0)&&(3!==e||16!==t&&32!==t&&64!==t)}(n,f)&&(e=function(e,t,n,r,f,i,o){const s=new DataView(e),a=2===n?1:r,l=De(t,f,2===n?o*i:o*i*r),u=parseInt("1".repeat(f),2);if(1===t){let e;e=1===n?r*f:f;let t=i*e;0!=(7&t)&&(t=t+7&-8);for(let e=0;e<o;++e){const n=e*t;for(let t=0;t<i;++t){const r=n+t*a*f;for(let n=0;n<a;++n){const o=r+n*f,c=(e*i+t)*a+n,h=Math.floor(o/8),A=o%8;if(A+f<=8)l[c]=s.getUint8(h)>>8-f-A&u;else if(A+f<=16)l[c]=s.getUint16(h)>>16-f-A&u;else if(A+f<=24){const e=s.getUint16(h)<<8|s.getUint8(h+2);l[c]=e>>24-f-A&u}else l[c]=s.getUint32(h)>>32-f-A&u}}}}return l.buffer}(e,n,this.planarConfiguration,this.getSamplesPerPixel(),f,this.getTileWidth(),this.getBlockHeight(t))),e})(),null!==a&&(a[s]=h)),{x:e,y:t,sample:n,data:await h}}async _readRaster(e,t,n,r,f,i,o,s,a){const l=this.getTileWidth(),u=this.getTileHeight(),c=this.getWidth(),h=this.getHeight(),A=Math.max(Math.floor(e[0]/l),0),d=Math.min(Math.ceil(e[2]/l),Math.ceil(c/l)),v=Math.max(Math.floor(e[1]/u),0),P=Math.min(Math.ceil(e[3]/u),Math.ceil(h/u)),w=e[2]-e[0];let y=this.getBytesPerPixel();const D=[],H=[];for(let e=0;e<t.length;++e)1===this.planarConfiguration?D.push(ye(this.fileDirectory.BitsPerSample,0,t[e])/8):D.push(0),H.push(this.getReaderForSample(t[e]));const X=[],{littleEndian:g}=this;for(let i=v;i<P;++i)for(let o=A;o<d;++o)for(let s=0;s<t.length;++s){const A=s,d=t[s];2===this.planarConfiguration&&(y=this.getSampleByteSize(s));const v=this.getTileOrStrip(o,i,d,f,a).then((f=>{const i=f.data,o=new DataView(i),s=this.getBlockHeight(f.y),a=f.y*u,d=f.x*l,v=a+s,P=(f.x+1)*l,X=H[A],p=Math.min(s,s-(v-e[3]),h-a),O=Math.min(l,l-(P-e[2]),c-d);for(let f=Math.max(0,e[1]-a);f<p;++f)for(let i=Math.max(0,e[0]-d);i<O;++i){const s=(f*l+i)*y,u=X.call(o,s+D[A],g);let c;r?(c=(f+a-e[1])*w*t.length+(i+d-e[0])*t.length+A,n[c]=u):(c=(f+a-e[1])*w+i+d-e[0],n[A][c]=u)}}));X.push(v)}if(await Promise.all(X),i&&e[2]-e[0]!==i||o&&e[3]-e[1]!==o){let f;return f=r?function(e,t,n,r,f,i,o="nearest"){switch(o.toLowerCase()){case"nearest":return function(e,t,n,r,f,i){const o=t/r,s=n/f,a=Pe(e,r,f,i);for(let l=0;l<f;++l){const f=Math.min(Math.round(s*l),n-1);for(let n=0;n<r;++n){const s=Math.min(Math.round(o*n),t-1);for(let o=0;o<i;++o){const u=e[f*t*i+s*i+o];a[l*r*i+n*i+o]=u}}}return a}(e,t,n,r,f,i);case"bilinear":case"linear":return function(e,t,n,r,f,i){const o=t/r,s=n/f,a=Pe(e,r,f,i);for(let l=0;l<f;++l){const f=s*l,u=Math.floor(f),c=Math.min(Math.ceil(f),n-1);for(let n=0;n<r;++n){const s=o*n,h=s%1,A=Math.floor(s),d=Math.min(Math.ceil(s),t-1);for(let o=0;o<i;++o){const s=e[u*t*i+A*i+o],v=e[u*t*i+d*i+o],P=e[c*t*i+A*i+o],w=e[c*t*i+d*i+o],y=we(we(s,v,h),we(P,w,h),f%1);a[l*r*i+n*i+o]=y}}}return a}(e,t,n,r,f,i);default:throw new Error(`Unsupported resampling method: '${o}'`)}}(n,e[2]-e[0],e[3]-e[1],i,o,t.length,s):function(e,t,n,r,f,i="nearest"){switch(i.toLowerCase()){case"nearest":return function(e,t,n,r,f){const i=t/r,o=n/f;return e.map((e=>{const s=Pe(e,r,f);for(let a=0;a<f;++a){const f=Math.min(Math.round(o*a),n-1);for(let n=0;n<r;++n){const o=Math.min(Math.round(i*n),t-1),l=e[f*t+o];s[a*r+n]=l}}return s}))}(e,t,n,r,f);case"bilinear":case"linear":return function(e,t,n,r,f){const i=t/r,o=n/f;return e.map((e=>{const s=Pe(e,r,f);for(let a=0;a<f;++a){const f=o*a,l=Math.floor(f),u=Math.min(Math.ceil(f),n-1);for(let n=0;n<r;++n){const o=i*n,c=o%1,h=Math.floor(o),A=Math.min(Math.ceil(o),t-1),d=e[l*t+h],v=e[l*t+A],P=e[u*t+h],w=e[u*t+A],y=we(we(d,v,c),we(P,w,c),f%1);s[a*r+n]=y}}return s}))}(e,t,n,r,f);default:throw new Error(`Unsupported resampling method: '${i}'`)}}(n,e[2]-e[0],e[3]-e[1],i,o,s),f.width=i,f.height=o,f}return n.width=i||e[2]-e[0],n.height=o||e[3]-e[1],n}async readRasters({window:e,samples:t=[],interleave:n,pool:r=null,width:f,height:i,resampleMethod:o,fillValue:s,signal:a}={}){const l=e||[0,0,this.getWidth(),this.getHeight()];if(l[0]>l[2]||l[1]>l[3])throw new Error("Invalid subsets");const u=(l[2]-l[0])*(l[3]-l[1]),c=this.getSamplesPerPixel();if(t&&t.length){for(let e=0;e<t.length;++e)if(t[e]>=c)return Promise.reject(new RangeError(`Invalid sample index '${t[e]}'.`))}else for(let e=0;e<c;++e)t.push(e);let h;if(n)h=De(this.fileDirectory.SampleFormat?Math.max.apply(null,this.fileDirectory.SampleFormat):1,Math.max.apply(null,this.fileDirectory.BitsPerSample),u*t.length),s&&h.fill(s);else{h=[];for(let e=0;e<t.length;++e){const n=this.getArrayForSample(t[e],u);Array.isArray(s)&&e<s.length?n.fill(s[e]):s&&!Array.isArray(s)&&n.fill(s),h.push(n)}}const A=r||await async function(e){const t=de.get(e.Compression);if(!t)throw new Error(`Unknown compression method identifier: ${e.Compression}`);return new(await t())(e)}(this.fileDirectory);return await this._readRaster(l,t,h,n,A,f,i,o,a)}async readRGB({window:e,interleave:t=!0,pool:n=null,width:r,height:f,resampleMethod:i,enableAlpha:o=!1,signal:s}={}){const a=e||[0,0,this.getWidth(),this.getHeight()];if(a[0]>a[2]||a[1]>a[3])throw new Error("Invalid subsets");const l=this.fileDirectory.PhotometricInterpretation;if(l===Ae.Ie.RGB){let a=[0,1,2];if(this.fileDirectory.ExtraSamples!==Ae.pd.Unspecified&&o){a=[];for(let e=0;e<this.fileDirectory.BitsPerSample.length;e+=1)a.push(e)}return this.readRasters({window:e,interleave:t,samples:a,pool:n,width:r,height:f,resampleMethod:i,signal:s})}let u;switch(l){case Ae.Ie.WhiteIsZero:case Ae.Ie.BlackIsZero:case Ae.Ie.Palette:u=[0];break;case Ae.Ie.CMYK:u=[0,1,2,3];break;case Ae.Ie.YCbCr:case Ae.Ie.CIELab:u=[0,1,2];break;default:throw new Error("Invalid or unsupported photometric interpretation.")}const c={window:a,interleave:!0,samples:u,pool:n,width:r,height:f,resampleMethod:i,signal:s},{fileDirectory:h}=this,A=await this.readRasters(c),d=2**this.fileDirectory.BitsPerSample[0];let v;switch(l){case Ae.Ie.WhiteIsZero:v=function(e,t){const{width:n,height:r}=e,f=new Uint8Array(n*r*3);let i;for(let n=0,r=0;n<e.length;++n,r+=3)i=256-e[n]/t*256,f[r]=i,f[r+1]=i,f[r+2]=i;return f}(A,d);break;case Ae.Ie.BlackIsZero:v=function(e,t){const{width:n,height:r}=e,f=new Uint8Array(n*r*3);let i;for(let n=0,r=0;n<e.length;++n,r+=3)i=e[n]/t*256,f[r]=i,f[r+1]=i,f[r+2]=i;return f}(A,d);break;case Ae.Ie.Palette:v=function(e,t){const{width:n,height:r}=e,f=new Uint8Array(n*r*3),i=t.length/3,o=t.length/3*2;for(let n=0,r=0;n<e.length;++n,r+=3){const s=e[n];f[r]=t[s]/65536*256,f[r+1]=t[s+i]/65536*256,f[r+2]=t[s+o]/65536*256}return f}(A,h.ColorMap);break;case Ae.Ie.CMYK:v=function(e){const{width:t,height:n}=e,r=new Uint8Array(t*n*3);for(let t=0,n=0;t<e.length;t+=4,n+=3){const f=e[t],i=e[t+1],o=e[t+2],s=e[t+3];r[n]=(255-f)/256*255*((255-s)/256),r[n+1]=(255-i)/256*255*((255-s)/256),r[n+2]=(255-o)/256*255*((255-s)/256)}return r}(A);break;case Ae.Ie.YCbCr:v=function(e){const{width:t,height:n}=e,r=new Uint8ClampedArray(t*n*3);for(let t=0,n=0;t<e.length;t+=3,n+=3){const f=e[t],i=e[t+1],o=e[t+2];r[n]=f+1.402*(o-128),r[n+1]=f-.34414*(i-128)-.71414*(o-128),r[n+2]=f+1.772*(i-128)}return r}(A);break;case Ae.Ie.CIELab:v=function(e){const{width:t,height:n}=e,r=new Uint8Array(t*n*3);for(let t=0,n=0;t<e.length;t+=3,n+=3){let f,i,o,s=(e[t+0]+16)/116,a=(e[t+1]<<24>>24)/500+s,l=s-(e[t+2]<<24>>24)/200;a=.95047*(a*a*a>.008856?a*a*a:(a-16/116)/7.787),s=1*(s*s*s>.008856?s*s*s:(s-16/116)/7.787),l=1.08883*(l*l*l>.008856?l*l*l:(l-16/116)/7.787),f=3.2406*a+-1.5372*s+-.4986*l,i=-.9689*a+1.8758*s+.0415*l,o=.0557*a+-.204*s+1.057*l,f=f>.0031308?1.055*f**(1/2.4)-.055:12.92*f,i=i>.0031308?1.055*i**(1/2.4)-.055:12.92*i,o=o>.0031308?1.055*o**(1/2.4)-.055:12.92*o,r[n]=255*Math.max(0,Math.min(1,f)),r[n+1]=255*Math.max(0,Math.min(1,i)),r[n+2]=255*Math.max(0,Math.min(1,o))}return r}(A);break;default:throw new Error("Unsupported photometric interpretation.")}if(!t){const e=new Uint8Array(v.length/3),t=new Uint8Array(v.length/3),n=new Uint8Array(v.length/3);for(let r=0,f=0;r<v.length;r+=3,++f)e[f]=v[r],t[f]=v[r+1],n[f]=v[r+2];v=[e,t,n]}return v.width=A.width,v.height=A.height,v}getTiePoints(){if(!this.fileDirectory.ModelTiepoint)return[];const e=[];for(let t=0;t<this.fileDirectory.ModelTiepoint.length;t+=6)e.push({i:this.fileDirectory.ModelTiepoint[t],j:this.fileDirectory.ModelTiepoint[t+1],k:this.fileDirectory.ModelTiepoint[t+2],x:this.fileDirectory.ModelTiepoint[t+3],y:this.fileDirectory.ModelTiepoint[t+4],z:this.fileDirectory.ModelTiepoint[t+5]});return e}getGDALMetadata(e=null){const t={};if(!this.fileDirectory.GDAL_METADATA)return null;const n=this.fileDirectory.GDAL_METADATA;let r=he(n,"Item");r=null===e?r.filter((e=>void 0===ce(e,"sample"))):r.filter((t=>Number(ce(t,"sample"))===e));for(let e=0;e<r.length;++e){const n=r[e];t[ce(n,"name")]=n.inner}return t}getGDALNoData(){if(!this.fileDirectory.GDAL_NODATA)return null;const e=this.fileDirectory.GDAL_NODATA;return Number(e.substring(0,e.length-1))}getOrigin(){const e=this.fileDirectory.ModelTiepoint,t=this.fileDirectory.ModelTransformation;if(e&&6===e.length)return[e[3],e[4],e[5]];if(t)return[t[3],t[7],t[11]];throw new Error("The image does not have an affine transformation.")}getResolution(e=null){const t=this.fileDirectory.ModelPixelScale,n=this.fileDirectory.ModelTransformation;if(t)return[t[0],-t[1],t[2]];if(n)return[n[0],n[5],n[10]];if(e){const[t,n,r]=e.getResolution();return[t*e.getWidth()/this.getWidth(),n*e.getHeight()/this.getHeight(),r*e.getWidth()/this.getWidth()]}throw new Error("The image does not have an affine transformation.")}pixelIsArea(){return 1===this.geoKeys.GTRasterTypeGeoKey}getBoundingBox(){const e=this.getOrigin(),t=this.getResolution(),n=e[0],r=e[1],f=n+t[0]*this.getWidth(),i=r+t[1]*this.getHeight();return[Math.min(n,f),Math.min(r,i),Math.max(n,f),Math.max(r,i)]}}(t.fileDirectory,t.geoKeyDirectory,this.dataView,this.littleEndian,this.cache,this.source)}async getImageCount(){let e=0,t=!0;for(;t;)try{await this.requestIFD(e),++e}catch(e){if(!(e instanceof je))throw e;t=!1}return e}async getGhostValues(){const e=this.bigTiff?16:8;if(this.ghostValues)return this.ghostValues;const t="GDAL_STRUCTURAL_METADATA_SIZE=",n=t.length+100;let r=await this.getSlice(e,n);if(t===ze(r,Ae.sf.ASCII,t.length,e)){const t=ze(r,Ae.sf.ASCII,n,e).split("\n")[0],f=Number(t.split("=")[1].split(" ")[0])+t.length;f>n&&(r=await this.getSlice(e,f));const i=ze(r,Ae.sf.ASCII,f,e);this.ghostValues={},i.split("\n").filter((e=>e.length>0)).map((e=>e.split("="))).forEach((([e,t])=>{this.ghostValues[e]=t}))}return this.ghostValues}static async fromSource(e,t,n){const r=(await e.fetch([{offset:0,length:1024}],n))[0],f=new He(r),i=f.getUint16(0,0);let o;if(18761===i)o=!0;else{if(19789!==i)throw new TypeError("Invalid byte order value.");o=!1}const s=f.getUint16(2,o);let a;if(42===s)a=!1;else{if(43!==s)throw new TypeError("Invalid magic number.");if(a=!0,8!==f.getUint16(4,o))throw new Error("Unsupported offset byte-size.")}const l=a?f.getUint64(8,o):f.getUint32(4,o);return new Te(e,o,a,l,t)}close(){return"function"==typeof this.source.close&&this.source.close()}}var ke=n(811),Ie=n.n(ke);let Qe=null;const Ee=async(e,t,n=36.7071)=>{null===Qe&&(Qe=(async()=>{const e=await async function(e,t){return Te.fromSource(function(e){return new me(e)}(e),t)}(Ie()),t=await e.getImage();return{buffer:(await t.readRasters())[0],width:t.getWidth(),height:t.getHeight(),boundingBox:t.getBoundingBox()}})());const r=await Qe,[f,i,o,s]=r.boundingBox;if(f>e||o<e||i>t||s<t)return n;const a=r.width,l=r.height,u=(e-f)/(o-f),c=1-(t-i)/(s-i),h=Math.floor(a*u),A=Math.floor(l*c),d=r.buffer[h+A*a];return-32768===d?n:d};class Be{}const Re=function(e){return null!=e};function Me(e){let t;this.name="DeveloperError",this.message=e;try{throw new Error}catch(e){t=e.stack}this.stack=t}Re(Object.create)&&(Me.prototype=Object.create(Error.prototype),Me.prototype.constructor=Me),Me.prototype.toString=function(){let e=`${this.name}: ${this.message}`;return Re(this.stack)&&(e+=`\n${this.stack.toString()}`),e},Me.throwInstantiationError=function(){throw new Me("This function defines an interface and should not be called directly.")};const Ne=Me,Ve={};function Se(e,t,n){return`Expected ${n} to be typeof ${t}, actual typeof was ${e}`}Ve.typeOf={},Ve.defined=function(e,t){if(!Re(t))throw new Ne(function(e){return`${e} is required, actual value was undefined`}(e))},Ve.typeOf.func=function(e,t){if("function"!=typeof t)throw new Ne(Se(typeof t,"function",e))},Ve.typeOf.string=function(e,t){if("string"!=typeof t)throw new Ne(Se(typeof t,"string",e))},Ve.typeOf.number=function(e,t){if("number"!=typeof t)throw new Ne(Se(typeof t,"number",e))},Ve.typeOf.number.lessThan=function(e,t,n){if(Ve.typeOf.number(e,t),t>=n)throw new Ne(`Expected ${e} to be less than ${n}, actual value was ${t}`)},Ve.typeOf.number.lessThanOrEquals=function(e,t,n){if(Ve.typeOf.number(e,t),t>n)throw new Ne(`Expected ${e} to be less than or equal to ${n}, actual value was ${t}`)},Ve.typeOf.number.greaterThan=function(e,t,n){if(Ve.typeOf.number(e,t),t<=n)throw new Ne(`Expected ${e} to be greater than ${n}, actual value was ${t}`)},Ve.typeOf.number.greaterThanOrEquals=function(e,t,n){if(Ve.typeOf.number(e,t),t<n)throw new Ne(`Expected ${e} to be greater than or equal to ${n}, actual value was ${t}`)},Ve.typeOf.object=function(e,t){if("object"!=typeof t)throw new Ne(Se(typeof t,"object",e))},Ve.typeOf.bool=function(e,t){if("boolean"!=typeof t)throw new Ne(Se(typeof t,"boolean",e))},Ve.typeOf.bigint=function(e,t){if("bigint"!=typeof t)throw new Ne(Se(typeof t,"bigint",e))},Ve.typeOf.number.equals=function(e,t,n,r){if(Ve.typeOf.number(e,n),Ve.typeOf.number(t,r),n!==r)throw new Ne(`${e} must be equal to ${t}, the actual values are ${n} and ${r}`)};const Ce=Ve;function Ue(e,t){return null!=e?e:t}Ue.EMPTY_OBJECT=Object.freeze({});const Fe=Ue;var Ge=n(710);const Ye={EPSILON1:.1,EPSILON2:.01,EPSILON3:.001,EPSILON4:1e-4,EPSILON5:1e-5,EPSILON6:1e-6,EPSILON7:1e-7,EPSILON8:1e-8,EPSILON9:1e-9,EPSILON10:1e-10,EPSILON11:1e-11,EPSILON12:1e-12,EPSILON13:1e-13,EPSILON14:1e-14,EPSILON15:1e-15,EPSILON16:1e-16,EPSILON17:1e-17,EPSILON18:1e-18,EPSILON19:1e-19,EPSILON20:1e-20,EPSILON21:1e-21,GRAVITATIONALPARAMETER:3986004418e5,SOLAR_RADIUS:6955e5,LUNAR_RADIUS:1737400,SIXTY_FOUR_KILOBYTES:65536,FOUR_GIGABYTES:4294967296};Ye.sign=Fe(Math.sign,(function(e){return 0==(e=+e)||e!=e?e:e>0?1:-1})),Ye.signNotZero=function(e){return e<0?-1:1},Ye.toSNorm=function(e,t){return t=Fe(t,255),Math.round((.5*Ye.clamp(e,-1,1)+.5)*t)},Ye.fromSNorm=function(e,t){return t=Fe(t,255),Ye.clamp(e,0,t)/t*2-1},Ye.normalize=function(e,t,n){return 0===(n=Math.max(n-t,0))?0:Ye.clamp((e-t)/n,0,1)},Ye.sinh=Fe(Math.sinh,(function(e){return(Math.exp(e)-Math.exp(-e))/2})),Ye.cosh=Fe(Math.cosh,(function(e){return(Math.exp(e)+Math.exp(-e))/2})),Ye.lerp=function(e,t,n){return(1-n)*e+n*t},Ye.PI=Math.PI,Ye.ONE_OVER_PI=1/Math.PI,Ye.PI_OVER_TWO=Math.PI/2,Ye.PI_OVER_THREE=Math.PI/3,Ye.PI_OVER_FOUR=Math.PI/4,Ye.PI_OVER_SIX=Math.PI/6,Ye.THREE_PI_OVER_TWO=3*Math.PI/2,Ye.TWO_PI=2*Math.PI,Ye.ONE_OVER_TWO_PI=1/(2*Math.PI),Ye.RADIANS_PER_DEGREE=Math.PI/180,Ye.DEGREES_PER_RADIAN=180/Math.PI,Ye.RADIANS_PER_ARCSECOND=Ye.RADIANS_PER_DEGREE/3600,Ye.toRadians=function(e){if(!Re(e))throw new Ne("degrees is required.");return e*Ye.RADIANS_PER_DEGREE},Ye.toDegrees=function(e){if(!Re(e))throw new Ne("radians is required.");return e*Ye.DEGREES_PER_RADIAN},Ye.convertLongitudeRange=function(e){if(!Re(e))throw new Ne("angle is required.");const t=Ye.TWO_PI,n=e-Math.floor(e/t)*t;return n<-Math.PI?n+t:n>=Math.PI?n-t:n},Ye.clampToLatitudeRange=function(e){if(!Re(e))throw new Ne("angle is required.");return Ye.clamp(e,-1*Ye.PI_OVER_TWO,Ye.PI_OVER_TWO)},Ye.negativePiToPi=function(e){if(!Re(e))throw new Ne("angle is required.");return e>=-Ye.PI&&e<=Ye.PI?e:Ye.zeroToTwoPi(e+Ye.PI)-Ye.PI},Ye.zeroToTwoPi=function(e){if(!Re(e))throw new Ne("angle is required.");if(e>=0&&e<=Ye.TWO_PI)return e;const t=Ye.mod(e,Ye.TWO_PI);return Math.abs(t)<Ye.EPSILON14&&Math.abs(e)>Ye.EPSILON14?Ye.TWO_PI:t},Ye.mod=function(e,t){if(!Re(e))throw new Ne("m is required.");if(!Re(t))throw new Ne("n is required.");if(0===t)throw new Ne("divisor cannot be 0.");return Ye.sign(e)===Ye.sign(t)&&Math.abs(e)<Math.abs(t)?e:(e%t+t)%t},Ye.equalsEpsilon=function(e,t,n,r){if(!Re(e))throw new Ne("left is required.");if(!Re(t))throw new Ne("right is required.");n=Fe(n,0),r=Fe(r,n);const f=Math.abs(e-t);return f<=r||f<=n*Math.max(Math.abs(e),Math.abs(t))},Ye.lessThan=function(e,t,n){if(!Re(e))throw new Ne("first is required.");if(!Re(t))throw new Ne("second is required.");if(!Re(n))throw new Ne("absoluteEpsilon is required.");return e-t<-n},Ye.lessThanOrEquals=function(e,t,n){if(!Re(e))throw new Ne("first is required.");if(!Re(t))throw new Ne("second is required.");if(!Re(n))throw new Ne("absoluteEpsilon is required.");return e-t<n},Ye.greaterThan=function(e,t,n){if(!Re(e))throw new Ne("first is required.");if(!Re(t))throw new Ne("second is required.");if(!Re(n))throw new Ne("absoluteEpsilon is required.");return e-t>n},Ye.greaterThanOrEquals=function(e,t,n){if(!Re(e))throw new Ne("first is required.");if(!Re(t))throw new Ne("second is required.");if(!Re(n))throw new Ne("absoluteEpsilon is required.");return e-t>-n};const We=[1];Ye.factorial=function(e){if("number"!=typeof e||e<0)throw new Ne("A number greater than or equal to 0 is required.");const t=We.length;if(e>=t){let n=We[t-1];for(let r=t;r<=e;r++){const e=n*r;We.push(e),n=e}}return We[e]},Ye.incrementWrap=function(e,t,n){if(n=Fe(n,0),!Re(e))throw new Ne("n is required.");if(t<=n)throw new Ne("maximumValue must be greater than minimumValue.");return++e>t&&(e=n),e},Ye.isPowerOfTwo=function(e){if("number"!=typeof e||e<0||e>4294967295)throw new Ne("A number between 0 and (2^32)-1 is required.");return 0!==e&&0==(e&e-1)},Ye.nextPowerOfTwo=function(e){if("number"!=typeof e||e<0||e>2147483648)throw new Ne("A number between 0 and 2^31 is required.");return--e,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e},Ye.previousPowerOfTwo=function(e){if("number"!=typeof e||e<0||e>4294967295)throw new Ne("A number between 0 and (2^32)-1 is required.");return e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,((e|=e>>32)>>>0)-(e>>>1)},Ye.clamp=function(e,t,n){return Ce.typeOf.number("value",e),Ce.typeOf.number("min",t),Ce.typeOf.number("max",n),e<t?t:e>n?n:e};let Ze=new Ge;Ye.setRandomNumberSeed=function(e){if(!Re(e))throw new Ne("seed is required.");Ze=new Ge(e)},Ye.nextRandomNumber=function(){return Ze.random()},Ye.randomBetween=function(e,t){return Ye.nextRandomNumber()*(t-e)+e},Ye.acosClamped=function(e){if(!Re(e))throw new Ne("value is required.");return Math.acos(Ye.clamp(e,-1,1))},Ye.asinClamped=function(e){if(!Re(e))throw new Ne("value is required.");return Math.asin(Ye.clamp(e,-1,1))},Ye.chordLength=function(e,t){if(!Re(e))throw new Ne("angle is required.");if(!Re(t))throw new Ne("radius is required.");return 2*t*Math.sin(.5*e)},Ye.logBase=function(e,t){if(!Re(e))throw new Ne("number is required.");if(!Re(t))throw new Ne("base is required.");return Math.log(e)/Math.log(t)},Ye.cbrt=Fe(Math.cbrt,(function(e){const t=Math.pow(Math.abs(e),1/3);return e<0?-t:t})),Ye.log2=Fe(Math.log2,(function(e){return Math.log(e)*Math.LOG2E})),Ye.fog=function(e,t){const n=e*t;return 1-Math.exp(-n*n)},Ye.fastApproximateAtan=function(e){return Ce.typeOf.number("x",e),e*(-.1784*Math.abs(e)-.0663*e*e+1.0301)},Ye.fastApproximateAtan2=function(e,t){let n;Ce.typeOf.number("x",e),Ce.typeOf.number("y",t);let r=Math.abs(e);n=Math.abs(t);const f=Math.max(r,n);n=Math.min(r,n);const i=n/f;if(isNaN(i))throw new Ne("either x or y must be nonzero");return r=Ye.fastApproximateAtan(i),r=Math.abs(t)>Math.abs(e)?Ye.PI_OVER_TWO-r:r,r=e<0?Ye.PI-r:r,r=t<0?-r:r,r};const qe=Ye;function Ke(e,t){this.x=Fe(e,0),this.y=Fe(t,0)}Ke.fromElements=function(e,t,n){return Re(n)?(n.x=e,n.y=t,n):new Ke(e,t)},Ke.clone=function(e,t){if(Re(e))return Re(t)?(t.x=e.x,t.y=e.y,t):new Ke(e.x,e.y)},Ke.fromCartesian3=Ke.clone,Ke.fromCartesian4=Ke.clone,Ke.packedLength=2,Ke.pack=function(e,t,n){return Ce.typeOf.object("value",e),Ce.defined("array",t),n=Fe(n,0),t[n++]=e.x,t[n]=e.y,t},Ke.unpack=function(e,t,n){return Ce.defined("array",e),t=Fe(t,0),Re(n)||(n=new Ke),n.x=e[t++],n.y=e[t],n},Ke.packArray=function(e,t){Ce.defined("array",e);const n=e.length,r=2*n;if(Re(t)){if(!Array.isArray(t)&&t.length!==r)throw new Ne("If result is a typed array, it must have exactly array.length * 2 elements");t.length!==r&&(t.length=r)}else t=new Array(r);for(let r=0;r<n;++r)Ke.pack(e[r],t,2*r);return t},Ke.unpackArray=function(e,t){if(Ce.defined("array",e),Ce.typeOf.number.greaterThanOrEquals("array.length",e.length,2),e.length%2!=0)throw new Ne("array length must be a multiple of 2.");const n=e.length;Re(t)?t.length=n/2:t=new Array(n/2);for(let r=0;r<n;r+=2){const n=r/2;t[n]=Ke.unpack(e,r,t[n])}return t},Ke.fromArray=Ke.unpack,Ke.maximumComponent=function(e){return Ce.typeOf.object("cartesian",e),Math.max(e.x,e.y)},Ke.minimumComponent=function(e){return Ce.typeOf.object("cartesian",e),Math.min(e.x,e.y)},Ke.minimumByComponent=function(e,t,n){return Ce.typeOf.object("first",e),Ce.typeOf.object("second",t),Ce.typeOf.object("result",n),n.x=Math.min(e.x,t.x),n.y=Math.min(e.y,t.y),n},Ke.maximumByComponent=function(e,t,n){return Ce.typeOf.object("first",e),Ce.typeOf.object("second",t),Ce.typeOf.object("result",n),n.x=Math.max(e.x,t.x),n.y=Math.max(e.y,t.y),n},Ke.clamp=function(e,t,n,r){Ce.typeOf.object("value",e),Ce.typeOf.object("min",t),Ce.typeOf.object("max",n),Ce.typeOf.object("result",r);const f=qe.clamp(e.x,t.x,n.x),i=qe.clamp(e.y,t.y,n.y);return r.x=f,r.y=i,r},Ke.magnitudeSquared=function(e){return Ce.typeOf.object("cartesian",e),e.x*e.x+e.y*e.y},Ke.magnitude=function(e){return Math.sqrt(Ke.magnitudeSquared(e))};const Je=new Ke;Ke.distance=function(e,t){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),Ke.subtract(e,t,Je),Ke.magnitude(Je)},Ke.distanceSquared=function(e,t){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),Ke.subtract(e,t,Je),Ke.magnitudeSquared(Je)},Ke.normalize=function(e,t){Ce.typeOf.object("cartesian",e),Ce.typeOf.object("result",t);const n=Ke.magnitude(e);if(t.x=e.x/n,t.y=e.y/n,isNaN(t.x)||isNaN(t.y))throw new Ne("normalized result is not a number");return t},Ke.dot=function(e,t){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),e.x*t.x+e.y*t.y},Ke.cross=function(e,t){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),e.x*t.y-e.y*t.x},Ke.multiplyComponents=function(e,t,n){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),Ce.typeOf.object("result",n),n.x=e.x*t.x,n.y=e.y*t.y,n},Ke.divideComponents=function(e,t,n){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),Ce.typeOf.object("result",n),n.x=e.x/t.x,n.y=e.y/t.y,n},Ke.add=function(e,t,n){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),Ce.typeOf.object("result",n),n.x=e.x+t.x,n.y=e.y+t.y,n},Ke.subtract=function(e,t,n){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),Ce.typeOf.object("result",n),n.x=e.x-t.x,n.y=e.y-t.y,n},Ke.multiplyByScalar=function(e,t,n){return Ce.typeOf.object("cartesian",e),Ce.typeOf.number("scalar",t),Ce.typeOf.object("result",n),n.x=e.x*t,n.y=e.y*t,n},Ke.divideByScalar=function(e,t,n){return Ce.typeOf.object("cartesian",e),Ce.typeOf.number("scalar",t),Ce.typeOf.object("result",n),n.x=e.x/t,n.y=e.y/t,n},Ke.negate=function(e,t){return Ce.typeOf.object("cartesian",e),Ce.typeOf.object("result",t),t.x=-e.x,t.y=-e.y,t},Ke.abs=function(e,t){return Ce.typeOf.object("cartesian",e),Ce.typeOf.object("result",t),t.x=Math.abs(e.x),t.y=Math.abs(e.y),t};const _e=new Ke;Ke.lerp=function(e,t,n,r){return Ce.typeOf.object("start",e),Ce.typeOf.object("end",t),Ce.typeOf.number("t",n),Ce.typeOf.object("result",r),Ke.multiplyByScalar(t,n,_e),r=Ke.multiplyByScalar(e,1-n,r),Ke.add(_e,r,r)};const $e=new Ke,et=new Ke;Ke.angleBetween=function(e,t){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),Ke.normalize(e,$e),Ke.normalize(t,et),qe.acosClamped(Ke.dot($e,et))};const tt=new Ke;Ke.mostOrthogonalAxis=function(e,t){Ce.typeOf.object("cartesian",e),Ce.typeOf.object("result",t);const n=Ke.normalize(e,tt);return Ke.abs(n,n),n.x<=n.y?Ke.clone(Ke.UNIT_X,t):Ke.clone(Ke.UNIT_Y,t)},Ke.equals=function(e,t){return e===t||Re(e)&&Re(t)&&e.x===t.x&&e.y===t.y},Ke.equalsArray=function(e,t,n){return e.x===t[n]&&e.y===t[n+1]},Ke.equalsEpsilon=function(e,t,n,r){return e===t||Re(e)&&Re(t)&&qe.equalsEpsilon(e.x,t.x,n,r)&&qe.equalsEpsilon(e.y,t.y,n,r)},Ke.ZERO=Object.freeze(new Ke(0,0)),Ke.ONE=Object.freeze(new Ke(1,1)),Ke.UNIT_X=Object.freeze(new Ke(1,0)),Ke.UNIT_Y=Object.freeze(new Ke(0,1)),Ke.prototype.clone=function(e){return Ke.clone(this,e)},Ke.prototype.equals=function(e){return Ke.equals(this,e)},Ke.prototype.equalsEpsilon=function(e,t,n){return Ke.equalsEpsilon(this,e,t,n)},Ke.prototype.toString=function(){return`(${this.x}, ${this.y})`};const nt=Ke;function rt(e,t,n){this.x=Fe(e,0),this.y=Fe(t,0),this.z=Fe(n,0)}rt.fromSpherical=function(e,t){Ce.typeOf.object("spherical",e),Re(t)||(t=new rt);const n=e.clock,r=e.cone,f=Fe(e.magnitude,1),i=f*Math.sin(r);return t.x=i*Math.cos(n),t.y=i*Math.sin(n),t.z=f*Math.cos(r),t},rt.fromElements=function(e,t,n,r){return Re(r)?(r.x=e,r.y=t,r.z=n,r):new rt(e,t,n)},rt.clone=function(e,t){if(Re(e))return Re(t)?(t.x=e.x,t.y=e.y,t.z=e.z,t):new rt(e.x,e.y,e.z)},rt.fromCartesian4=rt.clone,rt.packedLength=3,rt.pack=function(e,t,n){return Ce.typeOf.object("value",e),Ce.defined("array",t),n=Fe(n,0),t[n++]=e.x,t[n++]=e.y,t[n]=e.z,t},rt.unpack=function(e,t,n){return Ce.defined("array",e),t=Fe(t,0),Re(n)||(n=new rt),n.x=e[t++],n.y=e[t++],n.z=e[t],n},rt.packArray=function(e,t){Ce.defined("array",e);const n=e.length,r=3*n;if(Re(t)){if(!Array.isArray(t)&&t.length!==r)throw new Ne("If result is a typed array, it must have exactly array.length * 3 elements");t.length!==r&&(t.length=r)}else t=new Array(r);for(let r=0;r<n;++r)rt.pack(e[r],t,3*r);return t},rt.unpackArray=function(e,t){if(Ce.defined("array",e),Ce.typeOf.number.greaterThanOrEquals("array.length",e.length,3),e.length%3!=0)throw new Ne("array length must be a multiple of 3.");const n=e.length;Re(t)?t.length=n/3:t=new Array(n/3);for(let r=0;r<n;r+=3){const n=r/3;t[n]=rt.unpack(e,r,t[n])}return t},rt.fromArray=rt.unpack,rt.maximumComponent=function(e){return Ce.typeOf.object("cartesian",e),Math.max(e.x,e.y,e.z)},rt.minimumComponent=function(e){return Ce.typeOf.object("cartesian",e),Math.min(e.x,e.y,e.z)},rt.minimumByComponent=function(e,t,n){return Ce.typeOf.object("first",e),Ce.typeOf.object("second",t),Ce.typeOf.object("result",n),n.x=Math.min(e.x,t.x),n.y=Math.min(e.y,t.y),n.z=Math.min(e.z,t.z),n},rt.maximumByComponent=function(e,t,n){return Ce.typeOf.object("first",e),Ce.typeOf.object("second",t),Ce.typeOf.object("result",n),n.x=Math.max(e.x,t.x),n.y=Math.max(e.y,t.y),n.z=Math.max(e.z,t.z),n},rt.clamp=function(e,t,n,r){Ce.typeOf.object("value",e),Ce.typeOf.object("min",t),Ce.typeOf.object("max",n),Ce.typeOf.object("result",r);const f=qe.clamp(e.x,t.x,n.x),i=qe.clamp(e.y,t.y,n.y),o=qe.clamp(e.z,t.z,n.z);return r.x=f,r.y=i,r.z=o,r},rt.magnitudeSquared=function(e){return Ce.typeOf.object("cartesian",e),e.x*e.x+e.y*e.y+e.z*e.z},rt.magnitude=function(e){return Math.sqrt(rt.magnitudeSquared(e))};const ft=new rt;rt.distance=function(e,t){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),rt.subtract(e,t,ft),rt.magnitude(ft)},rt.distanceSquared=function(e,t){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),rt.subtract(e,t,ft),rt.magnitudeSquared(ft)},rt.normalize=function(e,t){Ce.typeOf.object("cartesian",e),Ce.typeOf.object("result",t);const n=rt.magnitude(e);if(t.x=e.x/n,t.y=e.y/n,t.z=e.z/n,isNaN(t.x)||isNaN(t.y)||isNaN(t.z))throw new Ne("normalized result is not a number");return t},rt.dot=function(e,t){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),e.x*t.x+e.y*t.y+e.z*t.z},rt.multiplyComponents=function(e,t,n){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),Ce.typeOf.object("result",n),n.x=e.x*t.x,n.y=e.y*t.y,n.z=e.z*t.z,n},rt.divideComponents=function(e,t,n){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),Ce.typeOf.object("result",n),n.x=e.x/t.x,n.y=e.y/t.y,n.z=e.z/t.z,n},rt.add=function(e,t,n){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),Ce.typeOf.object("result",n),n.x=e.x+t.x,n.y=e.y+t.y,n.z=e.z+t.z,n},rt.subtract=function(e,t,n){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),Ce.typeOf.object("result",n),n.x=e.x-t.x,n.y=e.y-t.y,n.z=e.z-t.z,n},rt.multiplyByScalar=function(e,t,n){return Ce.typeOf.object("cartesian",e),Ce.typeOf.number("scalar",t),Ce.typeOf.object("result",n),n.x=e.x*t,n.y=e.y*t,n.z=e.z*t,n},rt.divideByScalar=function(e,t,n){return Ce.typeOf.object("cartesian",e),Ce.typeOf.number("scalar",t),Ce.typeOf.object("result",n),n.x=e.x/t,n.y=e.y/t,n.z=e.z/t,n},rt.negate=function(e,t){return Ce.typeOf.object("cartesian",e),Ce.typeOf.object("result",t),t.x=-e.x,t.y=-e.y,t.z=-e.z,t},rt.abs=function(e,t){return Ce.typeOf.object("cartesian",e),Ce.typeOf.object("result",t),t.x=Math.abs(e.x),t.y=Math.abs(e.y),t.z=Math.abs(e.z),t};const it=new rt;rt.lerp=function(e,t,n,r){return Ce.typeOf.object("start",e),Ce.typeOf.object("end",t),Ce.typeOf.number("t",n),Ce.typeOf.object("result",r),rt.multiplyByScalar(t,n,it),r=rt.multiplyByScalar(e,1-n,r),rt.add(it,r,r)};const ot=new rt,st=new rt;rt.angleBetween=function(e,t){Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),rt.normalize(e,ot),rt.normalize(t,st);const n=rt.dot(ot,st),r=rt.magnitude(rt.cross(ot,st,ot));return Math.atan2(r,n)};const at=new rt;rt.mostOrthogonalAxis=function(e,t){Ce.typeOf.object("cartesian",e),Ce.typeOf.object("result",t);const n=rt.normalize(e,at);return rt.abs(n,n),n.x<=n.y?n.x<=n.z?rt.clone(rt.UNIT_X,t):rt.clone(rt.UNIT_Z,t):n.y<=n.z?rt.clone(rt.UNIT_Y,t):rt.clone(rt.UNIT_Z,t)},rt.projectVector=function(e,t,n){Ce.defined("a",e),Ce.defined("b",t),Ce.defined("result",n);const r=rt.dot(e,t)/rt.dot(t,t);return rt.multiplyByScalar(t,r,n)},rt.equals=function(e,t){return e===t||Re(e)&&Re(t)&&e.x===t.x&&e.y===t.y&&e.z===t.z},rt.equalsArray=function(e,t,n){return e.x===t[n]&&e.y===t[n+1]&&e.z===t[n+2]},rt.equalsEpsilon=function(e,t,n,r){return e===t||Re(e)&&Re(t)&&qe.equalsEpsilon(e.x,t.x,n,r)&&qe.equalsEpsilon(e.y,t.y,n,r)&&qe.equalsEpsilon(e.z,t.z,n,r)},rt.cross=function(e,t,n){Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),Ce.typeOf.object("result",n);const r=e.x,f=e.y,i=e.z,o=t.x,s=t.y,a=t.z,l=f*a-i*s,u=i*o-r*a,c=r*s-f*o;return n.x=l,n.y=u,n.z=c,n},rt.midpoint=function(e,t,n){return Ce.typeOf.object("left",e),Ce.typeOf.object("right",t),Ce.typeOf.object("result",n),n.x=.5*(e.x+t.x),n.y=.5*(e.y+t.y),n.z=.5*(e.z+t.z),n},rt.fromDegrees=function(e,t,n,r,f){return Ce.typeOf.number("longitude",e),Ce.typeOf.number("latitude",t),e=qe.toRadians(e),t=qe.toRadians(t),rt.fromRadians(e,t,n,r,f)};let lt=new rt,ut=new rt;const ct=new rt(40680631590769,40680631590769,40408299984661.445);rt.fromRadians=function(e,t,n,r,f){Ce.typeOf.number("longitude",e),Ce.typeOf.number("latitude",t),n=Fe(n,0);const i=Re(r)?r.radiiSquared:ct,o=Math.cos(t);lt.x=o*Math.cos(e),lt.y=o*Math.sin(e),lt.z=Math.sin(t),lt=rt.normalize(lt,lt),rt.multiplyComponents(i,lt,ut);const s=Math.sqrt(rt.dot(lt,ut));return ut=rt.divideByScalar(ut,s,ut),lt=rt.multiplyByScalar(lt,n,lt),Re(f)||(f=new rt),rt.add(ut,lt,f)},rt.fromDegreesArray=function(e,t,n){if(Ce.defined("coordinates",e),e.length<2||e.length%2!=0)throw new Ne("the number of coordinates must be a multiple of 2 and at least 2");const r=e.length;Re(n)?n.length=r/2:n=new Array(r/2);for(let f=0;f<r;f+=2){const r=e[f],i=e[f+1],o=f/2;n[o]=rt.fromDegrees(r,i,0,t,n[o])}return n},rt.fromRadiansArray=function(e,t,n){if(Ce.defined("coordinates",e),e.length<2||e.length%2!=0)throw new Ne("the number of coordinates must be a multiple of 2 and at least 2");const r=e.length;Re(n)?n.length=r/2:n=new Array(r/2);for(let f=0;f<r;f+=2){const r=e[f],i=e[f+1],o=f/2;n[o]=rt.fromRadians(r,i,0,t,n[o])}return n},rt.fromDegreesArrayHeights=function(e,t,n){if(Ce.defined("coordinates",e),e.length<3||e.length%3!=0)throw new Ne("the number of coordinates must be a multiple of 3 and at least 3");const r=e.length;Re(n)?n.length=r/3:n=new Array(r/3);for(let f=0;f<r;f+=3){const r=e[f],i=e[f+1],o=e[f+2],s=f/3;n[s]=rt.fromDegrees(r,i,o,t,n[s])}return n},rt.fromRadiansArrayHeights=function(e,t,n){if(Ce.defined("coordinates",e),e.length<3||e.length%3!=0)throw new Ne("the number of coordinates must be a multiple of 3 and at least 3");const r=e.length;Re(n)?n.length=r/3:n=new Array(r/3);for(let f=0;f<r;f+=3){const r=e[f],i=e[f+1],o=e[f+2],s=f/3;n[s]=rt.fromRadians(r,i,o,t,n[s])}return n},rt.ZERO=Object.freeze(new rt(0,0,0)),rt.ONE=Object.freeze(new rt(1,1,1)),rt.UNIT_X=Object.freeze(new rt(1,0,0)),rt.UNIT_Y=Object.freeze(new rt(0,1,0)),rt.UNIT_Z=Object.freeze(new rt(0,0,1)),rt.prototype.clone=function(e){return rt.clone(this,e)},rt.prototype.equals=function(e){return rt.equals(this,e)},rt.prototype.equalsEpsilon=function(e,t,n){return rt.equalsEpsilon(this,e,t,n)},rt.prototype.toString=function(){return`(${this.x}, ${this.y}, ${this.z})`};const ht=rt,At=new ht,dt=new ht,vt=function(e,t,n,r,f){if(!Re(e))throw new Ne("cartesian is required.");if(!Re(t))throw new Ne("oneOverRadii is required.");if(!Re(n))throw new Ne("oneOverRadiiSquared is required.");if(!Re(r))throw new Ne("centerToleranceSquared is required.");const i=e.x,o=e.y,s=e.z,a=t.x,l=t.y,u=t.z,c=i*i*a*a,h=o*o*l*l,A=s*s*u*u,d=c+h+A,v=Math.sqrt(1/d),P=ht.multiplyByScalar(e,v,At);if(d<r)return isFinite(v)?ht.clone(P,f):void 0;const w=n.x,y=n.y,D=n.z,H=dt;H.x=P.x*w*2,H.y=P.y*y*2,H.z=P.z*D*2;let X,g,p,O,m,b,z,L,j,x,T,k=(1-v)*ht.magnitude(e)/(.5*ht.magnitude(H)),I=0;do{k-=I,p=1/(1+k*w),O=1/(1+k*y),m=1/(1+k*D),b=p*p,z=O*O,L=m*m,j=b*p,x=z*O,T=L*m,X=c*b+h*z+A*L-1,g=c*j*w+h*x*y+A*T*D,I=X/(-2*g)}while(Math.abs(X)>qe.EPSILON12);return Re(f)?(f.x=i*p,f.y=o*O,f.z=s*m,f):new ht(i*p,o*O,s*m)};function Pt(e,t,n){this.longitude=Fe(e,0),this.latitude=Fe(t,0),this.height=Fe(n,0)}Pt.fromRadians=function(e,t,n,r){return Ce.typeOf.number("longitude",e),Ce.typeOf.number("latitude",t),n=Fe(n,0),Re(r)?(r.longitude=e,r.latitude=t,r.height=n,r):new Pt(e,t,n)},Pt.fromDegrees=function(e,t,n,r){return Ce.typeOf.number("longitude",e),Ce.typeOf.number("latitude",t),e=qe.toRadians(e),t=qe.toRadians(t),Pt.fromRadians(e,t,n,r)};const wt=new ht,yt=new ht,Dt=new ht,Ht=new ht(1/6378137,1/6378137,1/6356752.314245179),Xt=new ht(1/40680631590769,1/40680631590769,1/40408299984661.445),gt=qe.EPSILON1;Pt.fromCartesian=function(e,t,n){const r=Re(t)?t.oneOverRadii:Ht,f=Re(t)?t.oneOverRadiiSquared:Xt,i=Re(t)?t._centerToleranceSquared:gt,o=vt(e,r,f,i,yt);if(!Re(o))return;let s=ht.multiplyComponents(o,f,wt);s=ht.normalize(s,s);const a=ht.subtract(e,o,Dt),l=Math.atan2(s.y,s.x),u=Math.asin(s.z),c=qe.sign(ht.dot(a,e))*ht.magnitude(a);return Re(n)?(n.longitude=l,n.latitude=u,n.height=c,n):new Pt(l,u,c)},Pt.toCartesian=function(e,t,n){return Ce.defined("cartographic",e),ht.fromRadians(e.longitude,e.latitude,e.height,t,n)},Pt.clone=function(e,t){if(Re(e))return Re(t)?(t.longitude=e.longitude,t.latitude=e.latitude,t.height=e.height,t):new Pt(e.longitude,e.latitude,e.height)},Pt.equals=function(e,t){return e===t||Re(e)&&Re(t)&&e.longitude===t.longitude&&e.latitude===t.latitude&&e.height===t.height},Pt.equalsEpsilon=function(e,t,n){return n=Fe(n,0),e===t||Re(e)&&Re(t)&&Math.abs(e.longitude-t.longitude)<=n&&Math.abs(e.latitude-t.latitude)<=n&&Math.abs(e.height-t.height)<=n},Pt.ZERO=Object.freeze(new Pt(0,0,0)),Pt.prototype.clone=function(e){return Pt.clone(this,e)},Pt.prototype.equals=function(e){return Pt.equals(this,e)},Pt.prototype.equalsEpsilon=function(e,t){return Pt.equalsEpsilon(this,e,t)},Pt.prototype.toString=function(){return`(${this.longitude}, ${this.latitude}, ${this.height})`};const pt=Pt;function Ot(e,t,n,r){t=Fe(t,0),n=Fe(n,0),r=Fe(r,0),Ce.typeOf.number.greaterThanOrEquals("x",t,0),Ce.typeOf.number.greaterThanOrEquals("y",n,0),Ce.typeOf.number.greaterThanOrEquals("z",r,0),e._radii=new ht(t,n,r),e._radiiSquared=new ht(t*t,n*n,r*r),e._radiiToTheFourth=new ht(t*t*t*t,n*n*n*n,r*r*r*r),e._oneOverRadii=new ht(0===t?0:1/t,0===n?0:1/n,0===r?0:1/r),e._oneOverRadiiSquared=new ht(0===t?0:1/(t*t),0===n?0:1/(n*n),0===r?0:1/(r*r)),e._minimumRadius=Math.min(t,n,r),e._maximumRadius=Math.max(t,n,r),e._centerToleranceSquared=qe.EPSILON1,0!==e._radiiSquared.z&&(e._squaredXOverSquaredZ=e._radiiSquared.x/e._radiiSquared.z)}function mt(e,t,n){this._radii=void 0,this._radiiSquared=void 0,this._radiiToTheFourth=void 0,this._oneOverRadii=void 0,this._oneOverRadiiSquared=void 0,this._minimumRadius=void 0,this._maximumRadius=void 0,this._centerToleranceSquared=void 0,this._squaredXOverSquaredZ=void 0,Ot(this,e,t,n)}Object.defineProperties(mt.prototype,{radii:{get:function(){return this._radii}},radiiSquared:{get:function(){return this._radiiSquared}},radiiToTheFourth:{get:function(){return this._radiiToTheFourth}},oneOverRadii:{get:function(){return this._oneOverRadii}},oneOverRadiiSquared:{get:function(){return this._oneOverRadiiSquared}},minimumRadius:{get:function(){return this._minimumRadius}},maximumRadius:{get:function(){return this._maximumRadius}}}),mt.clone=function(e,t){if(!Re(e))return;const n=e._radii;return Re(t)?(ht.clone(n,t._radii),ht.clone(e._radiiSquared,t._radiiSquared),ht.clone(e._radiiToTheFourth,t._radiiToTheFourth),ht.clone(e._oneOverRadii,t._oneOverRadii),ht.clone(e._oneOverRadiiSquared,t._oneOverRadiiSquared),t._minimumRadius=e._minimumRadius,t._maximumRadius=e._maximumRadius,t._centerToleranceSquared=e._centerToleranceSquared,t):new mt(n.x,n.y,n.z)},mt.fromCartesian3=function(e,t){return Re(t)||(t=new mt),Re(e)?(Ot(t,e.x,e.y,e.z),t):t},mt.WGS84=Object.freeze(new mt(6378137,6378137,6356752.314245179)),mt.UNIT_SPHERE=Object.freeze(new mt(1,1,1)),mt.MOON=Object.freeze(new mt(qe.LUNAR_RADIUS,qe.LUNAR_RADIUS,qe.LUNAR_RADIUS)),mt.prototype.clone=function(e){return mt.clone(this,e)},mt.packedLength=ht.packedLength,mt.pack=function(e,t,n){return Ce.typeOf.object("value",e),Ce.defined("array",t),n=Fe(n,0),ht.pack(e._radii,t,n),t},mt.unpack=function(e,t,n){Ce.defined("array",e),t=Fe(t,0);const r=ht.unpack(e,t);return mt.fromCartesian3(r,n)},mt.prototype.geocentricSurfaceNormal=ht.normalize,mt.prototype.geodeticSurfaceNormalCartographic=function(e,t){Ce.typeOf.object("cartographic",e);const n=e.longitude,r=e.latitude,f=Math.cos(r),i=f*Math.cos(n),o=f*Math.sin(n),s=Math.sin(r);return Re(t)||(t=new ht),t.x=i,t.y=o,t.z=s,ht.normalize(t,t)},mt.prototype.geodeticSurfaceNormal=function(e,t){if(!ht.equalsEpsilon(e,ht.ZERO,qe.EPSILON14))return Re(t)||(t=new ht),t=ht.multiplyComponents(e,this._oneOverRadiiSquared,t),ht.normalize(t,t)};const bt=new ht,zt=new ht;mt.prototype.cartographicToCartesian=function(e,t){const n=bt,r=zt;this.geodeticSurfaceNormalCartographic(e,n),ht.multiplyComponents(this._radiiSquared,n,r);const f=Math.sqrt(ht.dot(n,r));return ht.divideByScalar(r,f,r),ht.multiplyByScalar(n,e.height,n),Re(t)||(t=new ht),ht.add(r,n,t)},mt.prototype.cartographicArrayToCartesianArray=function(e,t){Ce.defined("cartographics",e);const n=e.length;Re(t)?t.length=n:t=new Array(n);for(let r=0;r<n;r++)t[r]=this.cartographicToCartesian(e[r],t[r]);return t};const Lt=new ht,jt=new ht,xt=new ht;mt.prototype.cartesianToCartographic=function(e,t){const n=this.scaleToGeodeticSurface(e,jt);if(!Re(n))return;const r=this.geodeticSurfaceNormal(n,Lt),f=ht.subtract(e,n,xt),i=Math.atan2(r.y,r.x),o=Math.asin(r.z),s=qe.sign(ht.dot(f,e))*ht.magnitude(f);return Re(t)?(t.longitude=i,t.latitude=o,t.height=s,t):new pt(i,o,s)},mt.prototype.cartesianArrayToCartographicArray=function(e,t){Ce.defined("cartesians",e);const n=e.length;Re(t)?t.length=n:t=new Array(n);for(let r=0;r<n;++r)t[r]=this.cartesianToCartographic(e[r],t[r]);return t},mt.prototype.scaleToGeodeticSurface=function(e,t){return vt(e,this._oneOverRadii,this._oneOverRadiiSquared,this._centerToleranceSquared,t)},mt.prototype.scaleToGeocentricSurface=function(e,t){Ce.typeOf.object("cartesian",e),Re(t)||(t=new ht);const n=e.x,r=e.y,f=e.z,i=this._oneOverRadiiSquared,o=1/Math.sqrt(n*n*i.x+r*r*i.y+f*f*i.z);return ht.multiplyByScalar(e,o,t)},mt.prototype.transformPositionToScaledSpace=function(e,t){return Re(t)||(t=new ht),ht.multiplyComponents(e,this._oneOverRadii,t)},mt.prototype.transformPositionFromScaledSpace=function(e,t){return Re(t)||(t=new ht),ht.multiplyComponents(e,this._radii,t)},mt.prototype.equals=function(e){return this===e||Re(e)&&ht.equals(this._radii,e._radii)},mt.prototype.toString=function(){return this._radii.toString()},mt.prototype.getSurfaceNormalIntersectionWithZAxis=function(e,t,n){if(Ce.typeOf.object("position",e),!qe.equalsEpsilon(this._radii.x,this._radii.y,qe.EPSILON15))throw new Ne("Ellipsoid must be an ellipsoid of revolution (radii.x == radii.y)");Ce.typeOf.number.greaterThan("Ellipsoid.radii.z",this._radii.z,0),t=Fe(t,0);const r=this._squaredXOverSquaredZ;if(Re(n)||(n=new ht),n.x=0,n.y=0,n.z=e.z*(1-r),!(Math.abs(n.z)>=this._radii.z-t))return n};const Tt=[.14887433898163,.43339539412925,.67940956829902,.86506336668898,.97390652851717,0],kt=[.29552422471475,.26926671930999,.21908636251598,.14945134915058,.066671344308684,0];function It(e,t,n){Ce.typeOf.number("a",e),Ce.typeOf.number("b",t),Ce.typeOf.func("func",n);const r=.5*(t+e),f=.5*(t-e);let i=0;for(let e=0;e<5;e++){const t=f*Tt[e];i+=kt[e]*(n(r+t)+n(r-t))}return i*=f,i}mt.prototype.surfaceArea=function(e){Ce.typeOf.object("rectangle",e);const t=e.west;let n=e.east;const r=e.south,f=e.north;for(;n<t;)n+=qe.TWO_PI;const i=this._radiiSquared,o=i.x,s=i.y,a=i.z,l=o*s;return It(r,f,(function(e){const r=Math.cos(e),f=Math.sin(e);return Math.cos(e)*It(t,n,(function(e){const t=Math.cos(e),n=Math.sin(e);return Math.sqrt(l*f*f+a*(s*t*t+o*n*n)*r*r)}))}))};const Qt=mt;function Et(e,t,n,r){this.west=Fe(e,0),this.south=Fe(t,0),this.east=Fe(n,0),this.north=Fe(r,0)}Object.defineProperties(Et.prototype,{width:{get:function(){return Et.computeWidth(this)}},height:{get:function(){return Et.computeHeight(this)}}}),Et.packedLength=4,Et.pack=function(e,t,n){return Ce.typeOf.object("value",e),Ce.defined("array",t),n=Fe(n,0),t[n++]=e.west,t[n++]=e.south,t[n++]=e.east,t[n]=e.north,t},Et.unpack=function(e,t,n){return Ce.defined("array",e),t=Fe(t,0),Re(n)||(n=new Et),n.west=e[t++],n.south=e[t++],n.east=e[t++],n.north=e[t],n},Et.computeWidth=function(e){Ce.typeOf.object("rectangle",e);let t=e.east;const n=e.west;return t<n&&(t+=qe.TWO_PI),t-n},Et.computeHeight=function(e){return Ce.typeOf.object("rectangle",e),e.north-e.south},Et.fromDegrees=function(e,t,n,r,f){return e=qe.toRadians(Fe(e,0)),t=qe.toRadians(Fe(t,0)),n=qe.toRadians(Fe(n,0)),r=qe.toRadians(Fe(r,0)),Re(f)?(f.west=e,f.south=t,f.east=n,f.north=r,f):new Et(e,t,n,r)},Et.fromRadians=function(e,t,n,r,f){return Re(f)?(f.west=Fe(e,0),f.south=Fe(t,0),f.east=Fe(n,0),f.north=Fe(r,0),f):new Et(e,t,n,r)},Et.fromCartographicArray=function(e,t){Ce.defined("cartographics",e);let n=Number.MAX_VALUE,r=-Number.MAX_VALUE,f=Number.MAX_VALUE,i=-Number.MAX_VALUE,o=Number.MAX_VALUE,s=-Number.MAX_VALUE;for(let t=0,a=e.length;t<a;t++){const a=e[t];n=Math.min(n,a.longitude),r=Math.max(r,a.longitude),o=Math.min(o,a.latitude),s=Math.max(s,a.latitude);const l=a.longitude>=0?a.longitude:a.longitude+qe.TWO_PI;f=Math.min(f,l),i=Math.max(i,l)}return r-n>i-f&&(n=f,r=i,r>qe.PI&&(r-=qe.TWO_PI),n>qe.PI&&(n-=qe.TWO_PI)),Re(t)?(t.west=n,t.south=o,t.east=r,t.north=s,t):new Et(n,o,r,s)},Et.fromCartesianArray=function(e,t,n){Ce.defined("cartesians",e),t=Fe(t,Qt.WGS84);let r=Number.MAX_VALUE,f=-Number.MAX_VALUE,i=Number.MAX_VALUE,o=-Number.MAX_VALUE,s=Number.MAX_VALUE,a=-Number.MAX_VALUE;for(let n=0,l=e.length;n<l;n++){const l=t.cartesianToCartographic(e[n]);r=Math.min(r,l.longitude),f=Math.max(f,l.longitude),s=Math.min(s,l.latitude),a=Math.max(a,l.latitude);const u=l.longitude>=0?l.longitude:l.longitude+qe.TWO_PI;i=Math.min(i,u),o=Math.max(o,u)}return f-r>o-i&&(r=i,f=o,f>qe.PI&&(f-=qe.TWO_PI),r>qe.PI&&(r-=qe.TWO_PI)),Re(n)?(n.west=r,n.south=s,n.east=f,n.north=a,n):new Et(r,s,f,a)},Et.clone=function(e,t){if(Re(e))return Re(t)?(t.west=e.west,t.south=e.south,t.east=e.east,t.north=e.north,t):new Et(e.west,e.south,e.east,e.north)},Et.equalsEpsilon=function(e,t,n){return n=Fe(n,0),e===t||Re(e)&&Re(t)&&Math.abs(e.west-t.west)<=n&&Math.abs(e.south-t.south)<=n&&Math.abs(e.east-t.east)<=n&&Math.abs(e.north-t.north)<=n},Et.prototype.clone=function(e){return Et.clone(this,e)},Et.prototype.equals=function(e){return Et.equals(this,e)},Et.equals=function(e,t){return e===t||Re(e)&&Re(t)&&e.west===t.west&&e.south===t.south&&e.east===t.east&&e.north===t.north},Et.prototype.equalsEpsilon=function(e,t){return Et.equalsEpsilon(this,e,t)},Et.validate=function(e){Ce.typeOf.object("rectangle",e);const t=e.north;Ce.typeOf.number.greaterThanOrEquals("north",t,-qe.PI_OVER_TWO),Ce.typeOf.number.lessThanOrEquals("north",t,qe.PI_OVER_TWO);const n=e.south;Ce.typeOf.number.greaterThanOrEquals("south",n,-qe.PI_OVER_TWO),Ce.typeOf.number.lessThanOrEquals("south",n,qe.PI_OVER_TWO);const r=e.west;Ce.typeOf.number.greaterThanOrEquals("west",r,-Math.PI),Ce.typeOf.number.lessThanOrEquals("west",r,Math.PI);const f=e.east;Ce.typeOf.number.greaterThanOrEquals("east",f,-Math.PI),Ce.typeOf.number.lessThanOrEquals("east",f,Math.PI)},Et.southwest=function(e,t){return Ce.typeOf.object("rectangle",e),Re(t)?(t.longitude=e.west,t.latitude=e.south,t.height=0,t):new pt(e.west,e.south)},Et.northwest=function(e,t){return Ce.typeOf.object("rectangle",e),Re(t)?(t.longitude=e.west,t.latitude=e.north,t.height=0,t):new pt(e.west,e.north)},Et.northeast=function(e,t){return Ce.typeOf.object("rectangle",e),Re(t)?(t.longitude=e.east,t.latitude=e.north,t.height=0,t):new pt(e.east,e.north)},Et.southeast=function(e,t){return Ce.typeOf.object("rectangle",e),Re(t)?(t.longitude=e.east,t.latitude=e.south,t.height=0,t):new pt(e.east,e.south)},Et.center=function(e,t){Ce.typeOf.object("rectangle",e);let n=e.east;const r=e.west;n<r&&(n+=qe.TWO_PI);const f=qe.negativePiToPi(.5*(r+n)),i=.5*(e.south+e.north);return Re(t)?(t.longitude=f,t.latitude=i,t.height=0,t):new pt(f,i)},Et.intersection=function(e,t,n){Ce.typeOf.object("rectangle",e),Ce.typeOf.object("otherRectangle",t);let r=e.east,f=e.west,i=t.east,o=t.west;r<f&&i>0?r+=qe.TWO_PI:i<o&&r>0&&(i+=qe.TWO_PI),r<f&&o<0?o+=qe.TWO_PI:i<o&&f<0&&(f+=qe.TWO_PI);const s=qe.negativePiToPi(Math.max(f,o)),a=qe.negativePiToPi(Math.min(r,i));if((e.west<e.east||t.west<t.east)&&a<=s)return;const l=Math.max(e.south,t.south),u=Math.min(e.north,t.north);return l>=u?void 0:Re(n)?(n.west=s,n.south=l,n.east=a,n.north=u,n):new Et(s,l,a,u)},Et.simpleIntersection=function(e,t,n){Ce.typeOf.object("rectangle",e),Ce.typeOf.object("otherRectangle",t);const r=Math.max(e.west,t.west),f=Math.max(e.south,t.south),i=Math.min(e.east,t.east),o=Math.min(e.north,t.north);if(!(f>=o||r>=i))return Re(n)?(n.west=r,n.south=f,n.east=i,n.north=o,n):new Et(r,f,i,o)},Et.union=function(e,t,n){Ce.typeOf.object("rectangle",e),Ce.typeOf.object("otherRectangle",t),Re(n)||(n=new Et);let r=e.east,f=e.west,i=t.east,o=t.west;r<f&&i>0?r+=qe.TWO_PI:i<o&&r>0&&(i+=qe.TWO_PI),r<f&&o<0?o+=qe.TWO_PI:i<o&&f<0&&(f+=qe.TWO_PI);const s=qe.negativePiToPi(Math.min(f,o)),a=qe.negativePiToPi(Math.max(r,i));return n.west=s,n.south=Math.min(e.south,t.south),n.east=a,n.north=Math.max(e.north,t.north),n},Et.expand=function(e,t,n){return Ce.typeOf.object("rectangle",e),Ce.typeOf.object("cartographic",t),Re(n)||(n=new Et),n.west=Math.min(e.west,t.longitude),n.south=Math.min(e.south,t.latitude),n.east=Math.max(e.east,t.longitude),n.north=Math.max(e.north,t.latitude),n},Et.contains=function(e,t){Ce.typeOf.object("rectangle",e),Ce.typeOf.object("cartographic",t);let n=t.longitude;const r=t.latitude,f=e.west;let i=e.east;return i<f&&(i+=qe.TWO_PI,n<0&&(n+=qe.TWO_PI)),(n>f||qe.equalsEpsilon(n,f,qe.EPSILON14))&&(n<i||qe.equalsEpsilon(n,i,qe.EPSILON14))&&r>=e.south&&r<=e.north};const Bt=new pt;Et.subsample=function(e,t,n,r){Ce.typeOf.object("rectangle",e),t=Fe(t,Qt.WGS84),n=Fe(n,0),Re(r)||(r=[]);let f=0;const i=e.north,o=e.south,s=e.east,a=e.west,l=Bt;l.height=n,l.longitude=a,l.latitude=i,r[f]=t.cartographicToCartesian(l,r[f]),f++,l.longitude=s,r[f]=t.cartographicToCartesian(l,r[f]),f++,l.latitude=o,r[f]=t.cartographicToCartesian(l,r[f]),f++,l.longitude=a,r[f]=t.cartographicToCartesian(l,r[f]),f++,l.latitude=i<0?i:o>0?o:0;for(let n=1;n<8;++n)l.longitude=-Math.PI+n*qe.PI_OVER_TWO,Et.contains(e,l)&&(r[f]=t.cartographicToCartesian(l,r[f]),f++);return 0===l.latitude&&(l.longitude=a,r[f]=t.cartographicToCartesian(l,r[f]),f++,l.longitude=s,r[f]=t.cartographicToCartesian(l,r[f]),f++),r.length=f,r},Et.subsection=function(e,t,n,r,f,i){if(Ce.typeOf.object("rectangle",e),Ce.typeOf.number.greaterThanOrEquals("westLerp",t,0),Ce.typeOf.number.lessThanOrEquals("westLerp",t,1),Ce.typeOf.number.greaterThanOrEquals("southLerp",n,0),Ce.typeOf.number.lessThanOrEquals("southLerp",n,1),Ce.typeOf.number.greaterThanOrEquals("eastLerp",r,0),Ce.typeOf.number.lessThanOrEquals("eastLerp",r,1),Ce.typeOf.number.greaterThanOrEquals("northLerp",f,0),Ce.typeOf.number.lessThanOrEquals("northLerp",f,1),Ce.typeOf.number.lessThanOrEquals("westLerp",t,r),Ce.typeOf.number.lessThanOrEquals("southLerp",n,f),Re(i)||(i=new Et),e.west<=e.east){const n=e.east-e.west;i.west=e.west+t*n,i.east=e.west+r*n}else{const n=qe.TWO_PI+e.east-e.west;i.west=qe.negativePiToPi(e.west+t*n),i.east=qe.negativePiToPi(e.west+r*n)}const o=e.north-e.south;return i.south=e.south+n*o,i.north=e.south+f*o,1===t&&(i.west=e.east),1===r&&(i.east=e.east),1===n&&(i.south=e.north),1===f&&(i.north=e.north),i},Et.MAX_VALUE=Object.freeze(new Et(-Math.PI,-qe.PI_OVER_TWO,Math.PI,qe.PI_OVER_TWO));const Rt=Et;function Mt(e){this._ellipsoid=Fe(e,Qt.WGS84),this._semimajorAxis=this._ellipsoid.maximumRadius,this._oneOverSemimajorAxis=1/this._semimajorAxis}Object.defineProperties(Mt.prototype,{ellipsoid:{get:function(){return this._ellipsoid}}}),Mt.mercatorAngleToGeodeticLatitude=function(e){return qe.PI_OVER_TWO-2*Math.atan(Math.exp(-e))},Mt.geodeticLatitudeToMercatorAngle=function(e){e>Mt.MaximumLatitude?e=Mt.MaximumLatitude:e<-Mt.MaximumLatitude&&(e=-Mt.MaximumLatitude);const t=Math.sin(e);return.5*Math.log((1+t)/(1-t))},Mt.MaximumLatitude=Mt.mercatorAngleToGeodeticLatitude(Math.PI),Mt.prototype.project=function(e,t){const n=this._semimajorAxis,r=e.longitude*n,f=Mt.geodeticLatitudeToMercatorAngle(e.latitude)*n,i=e.height;return Re(t)?(t.x=r,t.y=f,t.z=i,t):new ht(r,f,i)},Mt.prototype.unproject=function(e,t){if(!Re(e))throw new Ne("cartesian is required");const n=this._oneOverSemimajorAxis,r=e.x*n,f=Mt.mercatorAngleToGeodeticLatitude(e.y*n),i=e.z;return Re(t)?(t.longitude=r,t.latitude=f,t.height=i,t):new pt(r,f,i)};const Nt=Mt;function Vt(e){if(e=Fe(e,Fe.EMPTY_OBJECT),this._ellipsoid=Fe(e.ellipsoid,Qt.WGS84),this._numberOfLevelZeroTilesX=Fe(e.numberOfLevelZeroTilesX,1),this._numberOfLevelZeroTilesY=Fe(e.numberOfLevelZeroTilesY,1),this._projection=new Nt(this._ellipsoid),Re(e.rectangleSouthwestInMeters)&&Re(e.rectangleNortheastInMeters))this._rectangleSouthwestInMeters=e.rectangleSouthwestInMeters,this._rectangleNortheastInMeters=e.rectangleNortheastInMeters;else{const e=this._ellipsoid.maximumRadius*Math.PI;this._rectangleSouthwestInMeters=new nt(-e,-e),this._rectangleNortheastInMeters=new nt(e,e)}const t=this._projection.unproject(this._rectangleSouthwestInMeters),n=this._projection.unproject(this._rectangleNortheastInMeters);this._rectangle=new Rt(t.longitude,t.latitude,n.longitude,n.latitude)}Object.defineProperties(Vt.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},rectangle:{get:function(){return this._rectangle}},projection:{get:function(){return this._projection}}}),Vt.prototype.getNumberOfXTilesAtLevel=function(e){return this._numberOfLevelZeroTilesX<<e},Vt.prototype.getNumberOfYTilesAtLevel=function(e){return this._numberOfLevelZeroTilesY<<e},Vt.prototype.rectangleToNativeRectangle=function(e,t){const n=this._projection,r=n.project(Rt.southwest(e)),f=n.project(Rt.northeast(e));return Re(t)?(t.west=r.x,t.south=r.y,t.east=f.x,t.north=f.y,t):new Rt(r.x,r.y,f.x,f.y)},Vt.prototype.tileXYToNativeRectangle=function(e,t,n,r){const f=this.getNumberOfXTilesAtLevel(n),i=this.getNumberOfYTilesAtLevel(n),o=(this._rectangleNortheastInMeters.x-this._rectangleSouthwestInMeters.x)/f,s=this._rectangleSouthwestInMeters.x+e*o,a=this._rectangleSouthwestInMeters.x+(e+1)*o,l=(this._rectangleNortheastInMeters.y-this._rectangleSouthwestInMeters.y)/i,u=this._rectangleNortheastInMeters.y-t*l,c=this._rectangleNortheastInMeters.y-(t+1)*l;return Re(r)?(r.west=s,r.south=c,r.east=a,r.north=u,r):new Rt(s,c,a,u)},Vt.prototype.tileXYToRectangle=function(e,t,n,r){const f=this.tileXYToNativeRectangle(e,t,n,r),i=this._projection,o=i.unproject(new nt(f.west,f.south)),s=i.unproject(new nt(f.east,f.north));return f.west=o.longitude,f.south=o.latitude,f.east=s.longitude,f.north=s.latitude,f},Vt.prototype.positionToTileXY=function(e,t,n){const r=this._rectangle;if(!Rt.contains(r,e))return;const f=this.getNumberOfXTilesAtLevel(t),i=this.getNumberOfYTilesAtLevel(t),o=(this._rectangleNortheastInMeters.x-this._rectangleSouthwestInMeters.x)/f,s=(this._rectangleNortheastInMeters.y-this._rectangleSouthwestInMeters.y)/i,a=this._projection.project(e);let l=(a.x-this._rectangleSouthwestInMeters.x)/o|0;l>=f&&(l=f-1);let u=(this._rectangleNortheastInMeters.y-a.y)/s|0;return u>=i&&(u=i-1),Re(n)?(n.x=l,n.y=u,n):new nt(l,u)};const St=Vt;class Ct extends Be{constructor(e,t,n,r){super(),this.z=e,this.x=t,this.y=n,this.metadata=r}async createCuboid(){const e=(new St).tileXYToRectangle(this.x,this.y,this.z),t=Rt.center(e),n=ht.distance(ht.fromRadians(e.east,t.latitude),ht.fromRadians(e.west,t.latitude)),r=ht.distance(ht.fromRadians(t.longitude,e.north),ht.fromRadians(t.longitude,e.south)),f=qe.toDegrees(t.longitude),i=qe.toDegrees(t.latitude),o=await Ee(f,i),[s,a]=await this.getMslHeights(),l=o+s,u=o+a,c=(l+u)/2,h=new ht(n,r,u-l),A=ht.fromRadians(t.longitude,t.latitude,c),d=this.metadata;return{region:[e.west,e.south,e.east,e.north,l,u],scale:h,location:A,metadata:d}}}class Ut extends Ct{constructor(e,t,n,r,f){super(e,n,r,f),this.f=t}async getMslHeights(){return[this.f/2**(this.z-25),(this.f+1)/2**(this.z-25)]}static fromString(e,t){if(!/^\d+\/-?\d+\/\d+\/\d+$/.test(e))throw new Error(`invalid spatial id: ${e}`);const[n,r,f,i]=e.split("/").map((e=>Number(e)));return new Ut(n,r,f,i,t)}toString(){return`${this.z}/${this.f}/${this.x}/${this.y}`}}})();var f=r.i6,i=r.Gk,o=r.SK,s=r.Ox,a=r.go;export{f as CuboidCollection,i as CuboidCreator,o as SpatialId,s as TileBasedCuboidCreator,a as getGeoidHeight};
//# sourceMappingURL=index.js.map
import*as t from"spatial-id-converter";var e={d:(t,i)=>{for(var o in i)e.o(i,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:i[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},i={};e.d(i,{l:()=>a});const o=(r={TileBasedCuboidCreator:()=>t.TileBasedCuboidCreator},s={},e.d(s,r),s);var r,s;class a extends o.TileBasedCuboidCreator{constructor(t,e,i,o,r,s,a,l){super(t,i,o,l),this.quadKeyZoomLevel=t,this.altitudeKeyZoomLevel=e,this.altitudeKey=r,this.bottomAltitude=s,this.topAltitude=a,this.metadata=l}async getMslHeights(){const t=(this.topAltitude-this.bottomAltitude)/2**this.altitudeKeyZoomLevel,e=this.bottomAltitude+t*this.altitudeKey;return[e,e+t]}toString(){return`${this.quadKeyZoomLevel}/${this.altitudeKeyZoomLevel}/${this.altitudeKey}/${this.x}/${this.y}`}}var l=i.l;export{l as InternalBarrier};
//# sourceMappingURL=index.js.map
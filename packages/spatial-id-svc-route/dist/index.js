import*as a from"spatial-id-svc-base";var e={d:(a,t)=>{for(var r in t)e.o(t,r)&&!e.o(a,r)&&Object.defineProperty(a,r,{enumerable:!0,get:t[r]})},o:(a,e)=>Object.prototype.hasOwnProperty.call(a,e)},t={};e.d(t,{RC:()=>s,Im:()=>f,h4:()=>y,ot:()=>I,pC:()=>i,pJ:()=>d,nL:()=>u,F7:()=>p,Zo:()=>n,dt:()=>o,bw:()=>c,cs:()=>l,CI:()=>S,xO:()=>b,IO:()=>h});const r=(g={ApiResponseError:()=>a.ApiResponseError,fetchJson:()=>a.fetchJson,fetchJsonStream:()=>a.fetchJsonStream,fetchRawJson:()=>a.fetchRawJson},m={},e.d(m,g),m),o=async function*({baseUrl:a,authInfo:e,payload:t,abortSignal:o}){for await(const n of(0,r.fetchJsonStream)({method:"POST",baseUrl:a,path:"/route_service/barriers_list",authInfo:e,payload:t,abortSignal:o}))yield n},n=async function*({baseUrl:a,authInfo:e,id:t,abortSignal:o}){for await(const n of(0,r.fetchJsonStream)({method:"GET",baseUrl:a,path:`/route_service/barriers/${encodeURIComponent(t)}`,authInfo:e,abortSignal:o}))yield n},s=async({baseUrl:a,authInfo:e,payload:t,abortSignal:o})=>{const n=await(0,r.fetchRawJson)({method:"POST",baseUrl:a,path:"/route_service/barriers",authInfo:e,payload:t,abortSignal:o});if("0"===n.id)throw new r.ApiResponseError("failed to create: returned id is 0");return n},i=async({baseUrl:a,authInfo:e,id:t,abortSignal:o})=>{await(0,r.fetchJson)({method:"DELETE",baseUrl:a,path:`/route_service/barriers/${encodeURIComponent(t)}`,authInfo:e,abortSignal:o})},l=async function*({baseUrl:a,authInfo:e,payload:t,abortSignal:o}){for await(const n of(0,r.fetchJsonStream)({method:"POST",baseUrl:a,path:"/route_service/private_barriers_list",authInfo:e,payload:t,abortSignal:o}))yield n},c=async function*({baseUrl:a,authInfo:e,id:t,abortSignal:o}){for await(const n of(0,r.fetchJsonStream)({method:"GET",baseUrl:a,path:`/route_service/private_barriers/${encodeURIComponent(t)}`,authInfo:e,abortSignal:o}))yield n},f=async({baseUrl:a,authInfo:e,payload:t,abortSignal:o})=>{const n=await(0,r.fetchRawJson)({method:"POST",baseUrl:a,path:"/route_service/private_barriers",authInfo:e,payload:t,abortSignal:o});if("0"===n.id)throw new r.ApiResponseError("failed to create: returned id is 0");return n},d=async({baseUrl:a,authInfo:e,id:t,abortSignal:o})=>{await(0,r.fetchJson)({method:"DELETE",baseUrl:a,path:`/route_service/temporary_barriers/${encodeURIComponent(t)}`,authInfo:e,abortSignal:o})},h=async function*({baseUrl:a,authInfo:e,payload:t,abortSignal:o}){for await(const n of(0,r.fetchJsonStream)({method:"POST",baseUrl:a,path:"/route_service/reserved_routes_list",authInfo:e,payload:t,abortSignal:o}))yield n},b=async({baseUrl:a,authInfo:e,reservedRouteId:t,abortSignal:o})=>await(0,r.fetchJson)({method:"GET",baseUrl:a,path:`/route_service/reserved_routes/${encodeURIComponent(t)}`,authInfo:e,abortSignal:o}),u=async({baseUrl:a,authInfo:e,reservedRouteId:t,abortSignal:o})=>{await(0,r.fetchJson)({method:"DELETE",baseUrl:a,path:`/route_service/reserved_routes/${encodeURIComponent(t)}`,authInfo:e,abortSignal:o})},p=async function*({baseUrl:a,authInfo:e,payload:t,abortSignal:o}){for await(const n of(0,r.fetchJsonStream)({method:"POST",baseUrl:a,path:"/route_service/aircrafts_list",authInfo:e,payload:t,abortSignal:o}))yield n},S=async function*({baseUrl:a,authInfo:e,aircraftId:t,abortSignal:o}){for await(const n of(0,r.fetchJsonStream)({method:"GET",baseUrl:a,path:`/route_service/reserved_id_list/${encodeURIComponent(t)}`,authInfo:e,abortSignal:o}))yield n},I=async function*({baseUrl:a,authInfo:e,payload:t,abortSignal:o}){for await(const n of(0,r.fetchJsonStream)({method:"POST",baseUrl:a,path:"/route_service/routes",authInfo:e,payload:t,abortSignal:o}))yield n},y=async function*({baseUrl:a,authInfo:e,payload:t,abortSignal:o}){for await(const n of(0,r.fetchJsonStream)({method:"POST",baseUrl:a,path:"/route_service/reserved_routes",authInfo:e,payload:t,abortSignal:o}))yield n};var g,m,v=t.RC,U=t.Im,R=t.h4,_=t.ot,w=t.pC,J=t.pJ,E=t.nL,O=t.F7,T=t.Zo,P=t.dt,C=t.bw,B=t.cs,$=t.CI,A=t.xO,L=t.IO;export{v as createBarrier,U as createPrivateBarrier,R as createReservedRoute,_ as createRoute,w as deleteBarrier,J as deletePrivateBarrier,E as deleteReservedRoute,O as getAircrafts,T as getBarrier,P as getBarriers,C as getPrivateBarrier,B as getPrivateBarriers,$ as getReservedId,A as getReservedRoute,L as getReservedRoutes};
//# sourceMappingURL=index.js.map